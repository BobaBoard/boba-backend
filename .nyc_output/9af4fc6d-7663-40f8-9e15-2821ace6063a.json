{"/Users/esra/projects/programming/bobaserver/server/boards/queries.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/boards/queries.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":258}},"16":{"start":{"line":16,"column":16},"end":{"line":16,"column":49}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":50}},"18":{"start":{"line":18,"column":14},"end":{"line":18,"column":47}},"19":{"start":{"line":19,"column":14},"end":{"line":19,"column":54}},"20":{"start":{"line":20,"column":16},"end":{"line":20,"column":34}},"21":{"start":{"line":21,"column":24},"end":{"line":21,"column":51}},"22":{"start":{"line":22,"column":13},"end":{"line":22,"column":61}},"23":{"start":{"line":23,"column":12},"end":{"line":23,"column":59}},"24":{"start":{"line":24,"column":14},"end":{"line":24,"column":63}},"25":{"start":{"line":25,"column":0},"end":{"line":34,"column":3}},"26":{"start":{"line":25,"column":41},"end":{"line":34,"column":2}},"27":{"start":{"line":26,"column":4},"end":{"line":33,"column":5}},"28":{"start":{"line":27,"column":8},"end":{"line":27,"column":98}},"29":{"start":{"line":30,"column":8},"end":{"line":30,"column":46}},"30":{"start":{"line":31,"column":8},"end":{"line":31,"column":17}},"31":{"start":{"line":32,"column":8},"end":{"line":32,"column":21}},"32":{"start":{"line":35,"column":0},"end":{"line":54,"column":3}},"33":{"start":{"line":35,"column":52},"end":{"line":54,"column":2}},"34":{"start":{"line":36,"column":4},"end":{"line":53,"column":5}},"35":{"start":{"line":37,"column":21},"end":{"line":40,"column":10}},"36":{"start":{"line":41,"column":8},"end":{"line":44,"column":9}},"37":{"start":{"line":42,"column":12},"end":{"line":42,"column":44}},"38":{"start":{"line":43,"column":12},"end":{"line":43,"column":24}},"39":{"start":{"line":45,"column":8},"end":{"line":45,"column":55}},"40":{"start":{"line":46,"column":8},"end":{"line":46,"column":60}},"41":{"start":{"line":47,"column":8},"end":{"line":47,"column":20}},"42":{"start":{"line":50,"column":8},"end":{"line":50,"column":63}},"43":{"start":{"line":51,"column":8},"end":{"line":51,"column":17}},"44":{"start":{"line":52,"column":8},"end":{"line":52,"column":20}},"45":{"start":{"line":55,"column":0},"end":{"line":182,"column":3}},"46":{"start":{"line":55,"column":83},"end":{"line":182,"column":2}},"47":{"start":{"line":56,"column":4},"end":{"line":181,"column":5}},"48":{"start":{"line":57,"column":22},"end":{"line":60,"column":10}},"49":{"start":{"line":61,"column":8},"end":{"line":61,"column":67}},"50":{"start":{"line":63,"column":8},"end":{"line":63,"column":19}},"51":{"start":{"line":64,"column":24},"end":{"line":167,"column":10}},"52":{"start":{"line":65,"column":56},"end":{"line":162,"column":10}},"53":{"start":{"line":68,"column":12},"end":{"line":73,"column":17}},"54":{"start":{"line":68,"column":64},"end":{"line":73,"column":14}},"55":{"start":{"line":69,"column":16},"end":{"line":72,"column":19}},"56":{"start":{"line":74,"column":12},"end":{"line":74,"column":50}},"57":{"start":{"line":76,"column":12},"end":{"line":86,"column":17}},"58":{"start":{"line":76,"column":76},"end":{"line":86,"column":14}},"59":{"start":{"line":77,"column":16},"end":{"line":81,"column":19}},"60":{"start":{"line":82,"column":16},"end":{"line":85,"column":19}},"61":{"start":{"line":87,"column":12},"end":{"line":87,"column":62}},"62":{"start":{"line":89,"column":12},"end":{"line":111,"column":17}},"63":{"start":{"line":89,"column":70},"end":{"line":111,"column":14}},"64":{"start":{"line":91,"column":16},"end":{"line":110,"column":17}},"65":{"start":{"line":91,"column":104},"end":{"line":91,"column":119}},"66":{"start":{"line":93,"column":20},"end":{"line":99,"column":23}},"67":{"start":{"line":102,"column":20},"end":{"line":109,"column":23}},"68":{"start":{"line":112,"column":12},"end":{"line":112,"column":54}},"69":{"start":{"line":114,"column":12},"end":{"line":150,"column":17}},"70":{"start":{"line":114,"column":84},"end":{"line":150,"column":14}},"71":{"start":{"line":116,"column":16},"end":{"line":135,"column":17}},"72":{"start":{"line":116,"column":104},"end":{"line":116,"column":123}},"73":{"start":{"line":118,"column":20},"end":{"line":124,"column":23}},"74":{"start":{"line":127,"column":20},"end":{"line":134,"column":23}},"75":{"start":{"line":136,"column":16},"end":{"line":136,"column":74}},"76":{"start":{"line":137,"column":16},"end":{"line":144,"column":17}},"77":{"start":{"line":138,"column":20},"end":{"line":142,"column":23}},"78":{"start":{"line":143,"column":20},"end":{"line":143,"column":68}},"79":{"start":{"line":145,"column":16},"end":{"line":149,"column":17}},"80":{"start":{"line":146,"column":20},"end":{"line":146,"column":114}},"81":{"start":{"line":147,"column":20},"end":{"line":147,"column":142}},"82":{"start":{"line":148,"column":20},"end":{"line":148,"column":59}},"83":{"start":{"line":151,"column":12},"end":{"line":159,"column":13}},"84":{"start":{"line":152,"column":16},"end":{"line":158,"column":19}},"85":{"start":{"line":160,"column":12},"end":{"line":160,"column":65}},"86":{"start":{"line":161,"column":12},"end":{"line":161,"column":24}},"87":{"start":{"line":164,"column":12},"end":{"line":164,"column":58}},"88":{"start":{"line":165,"column":12},"end":{"line":165,"column":21}},"89":{"start":{"line":166,"column":12},"end":{"line":166,"column":25}},"90":{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},"91":{"start":{"line":169,"column":12},"end":{"line":169,"column":25}},"92":{"start":{"line":172,"column":8},"end":{"line":175,"column":11}},"93":{"start":{"line":178,"column":8},"end":{"line":178,"column":64}},"94":{"start":{"line":179,"column":8},"end":{"line":179,"column":17}},"95":{"start":{"line":180,"column":8},"end":{"line":180,"column":21}},"96":{"start":{"line":183,"column":26},"end":{"line":183,"column":28}},"97":{"start":{"line":184,"column":0},"end":{"line":223,"column":3}},"98":{"start":{"line":184,"column":94},"end":{"line":223,"column":2}},"99":{"start":{"line":185,"column":4},"end":{"line":222,"column":5}},"100":{"start":{"line":186,"column":30},"end":{"line":186,"column":76}},"101":{"start":{"line":187,"column":30},"end":{"line":187,"column":150}},"102":{"start":{"line":188,"column":21},"end":{"line":194,"column":10}},"103":{"start":{"line":195,"column":8},"end":{"line":198,"column":9}},"104":{"start":{"line":196,"column":12},"end":{"line":196,"column":44}},"105":{"start":{"line":197,"column":12},"end":{"line":197,"column":24}},"106":{"start":{"line":199,"column":8},"end":{"line":203,"column":9}},"107":{"start":{"line":201,"column":12},"end":{"line":201,"column":40}},"108":{"start":{"line":202,"column":12},"end":{"line":202,"column":55}},"109":{"start":{"line":204,"column":21},"end":{"line":204,"column":25}},"110":{"start":{"line":205,"column":25},"end":{"line":205,"column":29}},"111":{"start":{"line":206,"column":8},"end":{"line":206,"column":64}},"112":{"start":{"line":207,"column":8},"end":{"line":214,"column":9}},"113":{"start":{"line":208,"column":12},"end":{"line":211,"column":15}},"114":{"start":{"line":213,"column":12},"end":{"line":213,"column":25}},"115":{"start":{"line":215,"column":8},"end":{"line":215,"column":74}},"116":{"start":{"line":216,"column":8},"end":{"line":216,"column":54}},"117":{"start":{"line":219,"column":8},"end":{"line":219,"column":63}},"118":{"start":{"line":220,"column":8},"end":{"line":220,"column":17}},"119":{"start":{"line":221,"column":8},"end":{"line":221,"column":21}},"120":{"start":{"line":224,"column":0},"end":{"line":237,"column":3}},"121":{"start":{"line":224,"column":52},"end":{"line":237,"column":2}},"122":{"start":{"line":225,"column":4},"end":{"line":236,"column":5}},"123":{"start":{"line":226,"column":8},"end":{"line":229,"column":11}},"124":{"start":{"line":230,"column":8},"end":{"line":230,"column":20}},"125":{"start":{"line":233,"column":8},"end":{"line":233,"column":53}},"126":{"start":{"line":234,"column":8},"end":{"line":234,"column":17}},"127":{"start":{"line":235,"column":8},"end":{"line":235,"column":21}},"128":{"start":{"line":238,"column":0},"end":{"line":251,"column":3}},"129":{"start":{"line":238,"column":47},"end":{"line":251,"column":2}},"130":{"start":{"line":239,"column":4},"end":{"line":250,"column":5}},"131":{"start":{"line":240,"column":8},"end":{"line":243,"column":11}},"132":{"start":{"line":244,"column":8},"end":{"line":244,"column":20}},"133":{"start":{"line":247,"column":8},"end":{"line":247,"column":43}},"134":{"start":{"line":248,"column":8},"end":{"line":248,"column":17}},"135":{"start":{"line":249,"column":8},"end":{"line":249,"column":21}},"136":{"start":{"line":252,"column":0},"end":{"line":265,"column":3}},"137":{"start":{"line":252,"column":49},"end":{"line":265,"column":2}},"138":{"start":{"line":253,"column":4},"end":{"line":264,"column":5}},"139":{"start":{"line":254,"column":8},"end":{"line":257,"column":11}},"140":{"start":{"line":258,"column":8},"end":{"line":258,"column":20}},"141":{"start":{"line":261,"column":8},"end":{"line":261,"column":45}},"142":{"start":{"line":262,"column":8},"end":{"line":262,"column":17}},"143":{"start":{"line":263,"column":8},"end":{"line":263,"column":21}},"144":{"start":{"line":266,"column":0},"end":{"line":279,"column":3}},"145":{"start":{"line":266,"column":46},"end":{"line":279,"column":2}},"146":{"start":{"line":267,"column":4},"end":{"line":278,"column":5}},"147":{"start":{"line":268,"column":8},"end":{"line":271,"column":11}},"148":{"start":{"line":272,"column":8},"end":{"line":272,"column":20}},"149":{"start":{"line":275,"column":8},"end":{"line":275,"column":44}},"150":{"start":{"line":276,"column":8},"end":{"line":276,"column":17}},"151":{"start":{"line":277,"column":8},"end":{"line":277,"column":21}},"152":{"start":{"line":280,"column":0},"end":{"line":293,"column":3}},"153":{"start":{"line":280,"column":48},"end":{"line":293,"column":2}},"154":{"start":{"line":281,"column":4},"end":{"line":292,"column":5}},"155":{"start":{"line":282,"column":8},"end":{"line":285,"column":11}},"156":{"start":{"line":286,"column":8},"end":{"line":286,"column":20}},"157":{"start":{"line":289,"column":8},"end":{"line":289,"column":46}},"158":{"start":{"line":290,"column":8},"end":{"line":290,"column":17}},"159":{"start":{"line":291,"column":8},"end":{"line":291,"column":21}},"160":{"start":{"line":294,"column":0},"end":{"line":307,"column":3}},"161":{"start":{"line":294,"column":63},"end":{"line":307,"column":2}},"162":{"start":{"line":295,"column":4},"end":{"line":306,"column":5}},"163":{"start":{"line":296,"column":8},"end":{"line":299,"column":11}},"164":{"start":{"line":300,"column":8},"end":{"line":300,"column":20}},"165":{"start":{"line":303,"column":8},"end":{"line":303,"column":45}},"166":{"start":{"line":304,"column":8},"end":{"line":304,"column":17}},"167":{"start":{"line":305,"column":8},"end":{"line":305,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":25,"column":20},"end":{"line":25,"column":21}},"loc":{"start":{"line":25,"column":41},"end":{"line":34,"column":2}},"line":25},"9":{"name":"(anonymous_9)","decl":{"start":{"line":25,"column":75},"end":{"line":25,"column":76}},"loc":{"start":{"line":25,"column":88},"end":{"line":34,"column":1}},"line":25},"10":{"name":"(anonymous_10)","decl":{"start":{"line":35,"column":25},"end":{"line":35,"column":26}},"loc":{"start":{"line":35,"column":52},"end":{"line":54,"column":2}},"line":35},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":86},"end":{"line":35,"column":87}},"loc":{"start":{"line":35,"column":99},"end":{"line":54,"column":1}},"line":35},"12":{"name":"(anonymous_12)","decl":{"start":{"line":55,"column":30},"end":{"line":55,"column":31}},"loc":{"start":{"line":55,"column":83},"end":{"line":182,"column":2}},"line":55},"13":{"name":"(anonymous_13)","decl":{"start":{"line":55,"column":117},"end":{"line":55,"column":118}},"loc":{"start":{"line":55,"column":130},"end":{"line":182,"column":1}},"line":55},"14":{"name":"(anonymous_14)","decl":{"start":{"line":65,"column":39},"end":{"line":65,"column":40}},"loc":{"start":{"line":65,"column":56},"end":{"line":162,"column":10}},"line":65},"15":{"name":"(anonymous_15)","decl":{"start":{"line":65,"column":90},"end":{"line":65,"column":91}},"loc":{"start":{"line":65,"column":103},"end":{"line":162,"column":9}},"line":65},"16":{"name":"(anonymous_16)","decl":{"start":{"line":68,"column":54},"end":{"line":68,"column":55}},"loc":{"start":{"line":68,"column":64},"end":{"line":73,"column":14}},"line":68},"17":{"name":"(anonymous_17)","decl":{"start":{"line":68,"column":98},"end":{"line":68,"column":99}},"loc":{"start":{"line":68,"column":111},"end":{"line":73,"column":13}},"line":68},"18":{"name":"(anonymous_18)","decl":{"start":{"line":76,"column":64},"end":{"line":76,"column":65}},"loc":{"start":{"line":76,"column":76},"end":{"line":86,"column":14}},"line":76},"19":{"name":"(anonymous_19)","decl":{"start":{"line":76,"column":110},"end":{"line":76,"column":111}},"loc":{"start":{"line":76,"column":123},"end":{"line":86,"column":13}},"line":76},"20":{"name":"(anonymous_20)","decl":{"start":{"line":89,"column":60},"end":{"line":89,"column":61}},"loc":{"start":{"line":89,"column":70},"end":{"line":111,"column":14}},"line":89},"21":{"name":"(anonymous_21)","decl":{"start":{"line":89,"column":104},"end":{"line":89,"column":105}},"loc":{"start":{"line":89,"column":117},"end":{"line":111,"column":13}},"line":89},"22":{"name":"(anonymous_22)","decl":{"start":{"line":91,"column":97},"end":{"line":91,"column":98}},"loc":{"start":{"line":91,"column":104},"end":{"line":91,"column":119}},"line":91},"23":{"name":"(anonymous_23)","decl":{"start":{"line":114,"column":70},"end":{"line":114,"column":71}},"loc":{"start":{"line":114,"column":84},"end":{"line":150,"column":14}},"line":114},"24":{"name":"(anonymous_24)","decl":{"start":{"line":114,"column":118},"end":{"line":114,"column":119}},"loc":{"start":{"line":114,"column":131},"end":{"line":150,"column":13}},"line":114},"25":{"name":"(anonymous_25)","decl":{"start":{"line":116,"column":97},"end":{"line":116,"column":98}},"loc":{"start":{"line":116,"column":104},"end":{"line":116,"column":123}},"line":116},"26":{"name":"(anonymous_26)","decl":{"start":{"line":163,"column":19},"end":{"line":163,"column":20}},"loc":{"start":{"line":163,"column":26},"end":{"line":167,"column":9}},"line":163},"27":{"name":"(anonymous_27)","decl":{"start":{"line":184,"column":33},"end":{"line":184,"column":34}},"loc":{"start":{"line":184,"column":94},"end":{"line":223,"column":2}},"line":184},"28":{"name":"(anonymous_28)","decl":{"start":{"line":184,"column":128},"end":{"line":184,"column":129}},"loc":{"start":{"line":184,"column":141},"end":{"line":223,"column":1}},"line":184},"29":{"name":"(anonymous_29)","decl":{"start":{"line":224,"column":25},"end":{"line":224,"column":26}},"loc":{"start":{"line":224,"column":52},"end":{"line":237,"column":2}},"line":224},"30":{"name":"(anonymous_30)","decl":{"start":{"line":224,"column":86},"end":{"line":224,"column":87}},"loc":{"start":{"line":224,"column":99},"end":{"line":237,"column":1}},"line":224},"31":{"name":"(anonymous_31)","decl":{"start":{"line":238,"column":20},"end":{"line":238,"column":21}},"loc":{"start":{"line":238,"column":47},"end":{"line":251,"column":2}},"line":238},"32":{"name":"(anonymous_32)","decl":{"start":{"line":238,"column":81},"end":{"line":238,"column":82}},"loc":{"start":{"line":238,"column":94},"end":{"line":251,"column":1}},"line":238},"33":{"name":"(anonymous_33)","decl":{"start":{"line":252,"column":22},"end":{"line":252,"column":23}},"loc":{"start":{"line":252,"column":49},"end":{"line":265,"column":2}},"line":252},"34":{"name":"(anonymous_34)","decl":{"start":{"line":252,"column":83},"end":{"line":252,"column":84}},"loc":{"start":{"line":252,"column":96},"end":{"line":265,"column":1}},"line":252},"35":{"name":"(anonymous_35)","decl":{"start":{"line":266,"column":19},"end":{"line":266,"column":20}},"loc":{"start":{"line":266,"column":46},"end":{"line":279,"column":2}},"line":266},"36":{"name":"(anonymous_36)","decl":{"start":{"line":266,"column":80},"end":{"line":266,"column":81}},"loc":{"start":{"line":266,"column":93},"end":{"line":279,"column":1}},"line":266},"37":{"name":"(anonymous_37)","decl":{"start":{"line":280,"column":21},"end":{"line":280,"column":22}},"loc":{"start":{"line":280,"column":48},"end":{"line":293,"column":2}},"line":280},"38":{"name":"(anonymous_38)","decl":{"start":{"line":280,"column":82},"end":{"line":280,"column":83}},"loc":{"start":{"line":280,"column":95},"end":{"line":293,"column":1}},"line":280},"39":{"name":"(anonymous_39)","decl":{"start":{"line":294,"column":36},"end":{"line":294,"column":37}},"loc":{"start":{"line":294,"column":63},"end":{"line":307,"column":2}},"line":294},"40":{"name":"(anonymous_40)","decl":{"start":{"line":294,"column":97},"end":{"line":294,"column":98}},"loc":{"start":{"line":294,"column":110},"end":{"line":307,"column":1}},"line":294}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":41,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":44,"column":9}},{"start":{"line":41,"column":8},"end":{"line":44,"column":9}}],"line":41},"9":{"loc":{"start":{"line":91,"column":16},"end":{"line":110,"column":17}},"type":"if","locations":[{"start":{"line":91,"column":16},"end":{"line":110,"column":17}},{"start":{"line":91,"column":16},"end":{"line":110,"column":17}}],"line":91},"10":{"loc":{"start":{"line":91,"column":20},"end":{"line":91,"column":120}},"type":"cond-expr","locations":[{"start":{"line":91,"column":80},"end":{"line":91,"column":86}},{"start":{"line":91,"column":89},"end":{"line":91,"column":120}}],"line":91},"11":{"loc":{"start":{"line":91,"column":20},"end":{"line":91,"column":77}},"type":"binary-expr","locations":[{"start":{"line":91,"column":20},"end":{"line":91,"column":60}},{"start":{"line":91,"column":64},"end":{"line":91,"column":77}}],"line":91},"12":{"loc":{"start":{"line":116,"column":16},"end":{"line":135,"column":17}},"type":"if","locations":[{"start":{"line":116,"column":16},"end":{"line":135,"column":17}},{"start":{"line":116,"column":16},"end":{"line":135,"column":17}}],"line":116},"13":{"loc":{"start":{"line":116,"column":20},"end":{"line":116,"column":124}},"type":"cond-expr","locations":[{"start":{"line":116,"column":80},"end":{"line":116,"column":86}},{"start":{"line":116,"column":89},"end":{"line":116,"column":124}}],"line":116},"14":{"loc":{"start":{"line":116,"column":20},"end":{"line":116,"column":77}},"type":"binary-expr","locations":[{"start":{"line":116,"column":20},"end":{"line":116,"column":60}},{"start":{"line":116,"column":64},"end":{"line":116,"column":77}}],"line":116},"15":{"loc":{"start":{"line":137,"column":16},"end":{"line":144,"column":17}},"type":"if","locations":[{"start":{"line":137,"column":16},"end":{"line":144,"column":17}},{"start":{"line":137,"column":16},"end":{"line":144,"column":17}}],"line":137},"16":{"loc":{"start":{"line":145,"column":16},"end":{"line":149,"column":17}},"type":"if","locations":[{"start":{"line":145,"column":16},"end":{"line":149,"column":17}},{"start":{"line":145,"column":16},"end":{"line":149,"column":17}}],"line":145},"17":{"loc":{"start":{"line":151,"column":12},"end":{"line":159,"column":13}},"type":"if","locations":[{"start":{"line":151,"column":12},"end":{"line":159,"column":13}},{"start":{"line":151,"column":12},"end":{"line":159,"column":13}}],"line":151},"18":{"loc":{"start":{"line":151,"column":16},"end":{"line":151,"column":50}},"type":"binary-expr","locations":[{"start":{"line":151,"column":16},"end":{"line":151,"column":29}},{"start":{"line":151,"column":33},"end":{"line":151,"column":50}}],"line":151},"19":{"loc":{"start":{"line":154,"column":29},"end":{"line":154,"column":65}},"type":"binary-expr","locations":[{"start":{"line":154,"column":29},"end":{"line":154,"column":42}},{"start":{"line":154,"column":46},"end":{"line":154,"column":65}}],"line":154},"20":{"loc":{"start":{"line":156,"column":37},"end":{"line":156,"column":139}},"type":"binary-expr","locations":[{"start":{"line":156,"column":37},"end":{"line":156,"column":54}},{"start":{"line":156,"column":59},"end":{"line":156,"column":138}}],"line":156},"21":{"loc":{"start":{"line":156,"column":59},"end":{"line":156,"column":138}},"type":"cond-expr","locations":[{"start":{"line":156,"column":115},"end":{"line":156,"column":121}},{"start":{"line":156,"column":124},"end":{"line":156,"column":138}}],"line":156},"22":{"loc":{"start":{"line":156,"column":59},"end":{"line":156,"column":112}},"type":"binary-expr","locations":[{"start":{"line":156,"column":59},"end":{"line":156,"column":95}},{"start":{"line":156,"column":99},"end":{"line":156,"column":112}}],"line":156},"23":{"loc":{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},{"start":{"line":168,"column":8},"end":{"line":170,"column":9}}],"line":168},"24":{"loc":{"start":{"line":186,"column":30},"end":{"line":186,"column":76}},"type":"binary-expr","locations":[{"start":{"line":186,"column":30},"end":{"line":186,"column":36}},{"start":{"line":186,"column":40},"end":{"line":186,"column":76}}],"line":186},"25":{"loc":{"start":{"line":187,"column":30},"end":{"line":187,"column":150}},"type":"binary-expr","locations":[{"start":{"line":187,"column":31},"end":{"line":187,"column":116}},{"start":{"line":187,"column":121},"end":{"line":187,"column":129}},{"start":{"line":187,"column":133},"end":{"line":187,"column":150}}],"line":187},"26":{"loc":{"start":{"line":187,"column":31},"end":{"line":187,"column":116}},"type":"cond-expr","locations":[{"start":{"line":187,"column":84},"end":{"line":187,"column":90}},{"start":{"line":187,"column":93},"end":{"line":187,"column":116}}],"line":187},"27":{"loc":{"start":{"line":187,"column":31},"end":{"line":187,"column":81}},"type":"binary-expr","locations":[{"start":{"line":187,"column":31},"end":{"line":187,"column":53}},{"start":{"line":187,"column":57},"end":{"line":187,"column":81}}],"line":187},"28":{"loc":{"start":{"line":191,"column":31},"end":{"line":191,"column":53}},"type":"binary-expr","locations":[{"start":{"line":191,"column":31},"end":{"line":191,"column":45}},{"start":{"line":191,"column":49},"end":{"line":191,"column":53}}],"line":191},"29":{"loc":{"start":{"line":192,"column":34},"end":{"line":192,"column":140}},"type":"binary-expr","locations":[{"start":{"line":192,"column":35},"end":{"line":192,"column":131}},{"start":{"line":192,"column":136},"end":{"line":192,"column":140}}],"line":192},"30":{"loc":{"start":{"line":192,"column":35},"end":{"line":192,"column":131}},"type":"cond-expr","locations":[{"start":{"line":192,"column":88},"end":{"line":192,"column":94}},{"start":{"line":192,"column":97},"end":{"line":192,"column":131}}],"line":192},"31":{"loc":{"start":{"line":192,"column":35},"end":{"line":192,"column":85}},"type":"binary-expr","locations":[{"start":{"line":192,"column":35},"end":{"line":192,"column":57}},{"start":{"line":192,"column":61},"end":{"line":192,"column":85}}],"line":192},"32":{"loc":{"start":{"line":195,"column":8},"end":{"line":198,"column":9}},"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":198,"column":9}},{"start":{"line":195,"column":8},"end":{"line":198,"column":9}}],"line":195},"33":{"loc":{"start":{"line":199,"column":8},"end":{"line":203,"column":9}},"type":"if","locations":[{"start":{"line":199,"column":8},"end":{"line":203,"column":9}},{"start":{"line":199,"column":8},"end":{"line":203,"column":9}}],"line":199},"34":{"loc":{"start":{"line":199,"column":12},"end":{"line":199,"column":57}},"type":"binary-expr","locations":[{"start":{"line":199,"column":12},"end":{"line":199,"column":28}},{"start":{"line":199,"column":32},"end":{"line":199,"column":57}}],"line":199},"35":{"loc":{"start":{"line":207,"column":8},"end":{"line":214,"column":9}},"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":214,"column":9}},{"start":{"line":207,"column":8},"end":{"line":214,"column":9}}],"line":207}},"s":{"0":1,"1":44,"2":0,"3":44,"4":44,"5":44,"6":0,"7":0,"8":0,"9":0,"10":88,"11":44,"12":1,"13":4,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":9,"27":9,"28":9,"29":0,"30":0,"31":0,"32":1,"33":9,"34":9,"35":9,"36":9,"37":1,"38":1,"39":8,"40":8,"41":8,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":1,"98":26,"99":26,"100":26,"101":26,"102":26,"103":26,"104":0,"105":0,"106":26,"107":0,"108":0,"109":26,"110":26,"111":26,"112":26,"113":5,"114":5,"115":26,"116":26,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":1,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0},"f":{"0":44,"1":44,"2":0,"3":44,"4":44,"5":0,"6":88,"7":4,"8":9,"9":9,"10":9,"11":9,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":26,"28":26,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"0":[1,1,1],"1":[44,0],"2":[44,44],"3":[44,44],"4":[44,44],"5":[1,1,1],"6":[3,1],"7":[4,4],"8":[1,8],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[26,6],"25":[26,20,18],"26":[20,6],"27":[26,7],"28":[26,26],"29":[26,20],"30":[20,6],"31":[26,7],"32":[0,26],"33":[0,26],"34":[26,2],"35":[5,21]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/boards/queries.ts","sources":["/Users/esra/projects/programming/bobaserver/server/boards/queries.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,kDAA0B;AAC1B,mDAA2B;AAC3B,gDAAwB;AACxB,uDAAoC;AAEpC,mCAA2C;AAC3C,oDAA8D;AAE9D,MAAM,IAAI,GAAG,eAAK,CAAC,+BAA+B,CAAC,CAAC;AACpD,MAAM,GAAG,GAAG,eAAK,CAAC,8BAA8B,CAAC,CAAC;AAClD,MAAM,KAAK,GAAG,eAAK,CAAC,gCAAgC,CAAC,CAAC;AAEzC,QAAA,SAAS,GAAG,CAAO,EAC9B,UAAU,GAGX,EAAgB,EAAE;IACjB,IAAI;QACF,OAAO,MAAM,cAAI,CAAC,IAAI,CAAC,aAAG,CAAC,YAAY,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,CAAC;KACvE;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,8BAA8B,CAAC,CAAC;QACtC,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,cAAc,GAAG,CAAO,EACnC,UAAU,EACV,IAAI,GAIL,EAA4B,EAAE;IAC7B,IAAI;QACF,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,SAAS,CAAC,aAAG,CAAC,cAAc,EAAE;YACpD,WAAW,EAAE,UAAU;YACvB,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,EAAE;YACT,GAAG,CAAC,oBAAoB,IAAI,EAAE,CAAC,CAAC;YAChC,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;QAC/C,GAAG,CAAC,iBAAiB,IAAI,aAAa,UAAU,EAAE,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,uCAAuC,IAAI,IAAI,CAAC,CAAC;QACvD,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,mBAAmB,GAAG,CAAO,EACxC,IAAI,EACJ,UAAU,EACV,WAAW,EACX,WAAW,GAMZ,EAAgB,EAAE;IACjB,IAAI;QACF,MAAM,KAAK,GAAG,wBAAgB,CAAC;YAC7B,WAAW;YACX,WAAW;SACZ,CAAC,CAAC;QAEH,GAAG,CAAC,+CAA+C,IAAI,EAAE,CAAC,CAAC;QAC3D,6CAA6C;QAC7C,GAAG,CAAC,KAAK,CAAC,CAAC;QAEX,MAAM,OAAO,GAAG,MAAM,cAAI;aACvB,EAAE,CAAC,qBAAqB,EAAE,CAAO,WAAW,EAAE,EAAE;;YAC/C,uBAAuB;YACvB,MAAM,OAAO,CAAC,GAAG,CACf,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAO,IAAI,EAAE,EAAE;gBACrC,MAAM,WAAW,CAAC,IAAI,CAAC,aAAG,CAAC,aAAa,EAAE;oBACxC,UAAU,EAAE,IAAI,CAAC,EAAE;oBACnB,UAAU,EAAE,IAAI;iBACjB,CAAC,CAAC;YACL,CAAC,CAAA,CAAC,CACH,CAAC;YACF,GAAG,CAAC,gCAAgC,CAAC,CAAC;YAEtC,kCAAkC;YAClC,MAAM,OAAO,CAAC,GAAG,CACf,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAO,MAAM,EAAE,EAAE;gBACjD,MAAM,WAAW,CAAC,IAAI,CAAC,aAAG,CAAC,uBAAuB,EAAE;oBAClD,UAAU,EAAE,MAAM,CAAC,EAAE;oBACrB,UAAU,EAAE,IAAI;oBAChB,cAAc,EAAE,IAAI;iBACrB,CAAC,CAAC;gBACH,MAAM,WAAW,CAAC,IAAI,CAAC,aAAG,CAAC,aAAa,EAAE;oBACxC,UAAU,EAAE,MAAM,CAAC,EAAE;oBACrB,UAAU,EAAE,IAAI;iBACjB,CAAC,CAAC;YACL,CAAC,CAAA,CAAC,CACH,CAAC;YACF,GAAG,CAAC,4CAA4C,CAAC,CAAC;YAElD,yBAAyB;YACzB,MAAM,OAAO,CAAC,GAAG,CACf,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAO,IAAI,EAAE,EAAE;;gBAC3C,UAAI,WAAW,CAAC,YAAY,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG;oBAC1D,oDAAoD;oBACpD,MAAM,WAAW,CAAC,GAAG,CAAC,aAAG,CAAC,aAAa,EAAE;wBACvC,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,WAAW,EAAE,IAAI,CAAC,WAAW;wBAC7B,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,UAAU,EAAE,IAAI;wBAChB,UAAU,EAAE,IAAI,CAAC,EAAE;qBACpB,CAAC,CAAC;iBACJ;qBAAM;oBACL,MAAM,WAAW,CAAC,GAAG,CAAC,aAAG,CAAC,aAAa,EAAE;wBACvC,UAAU,EAAE,IAAI,CAAC,EAAE;wBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,WAAW,EAAE,IAAI,CAAC,WAAW;wBAC7B,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,UAAU,EAAE,IAAI;wBAChB,IAAI,EAAE,MAAM;qBACb,CAAC,CAAC;iBACJ;YACH,CAAC,CAAA,CAAC,CACH,CAAC;YACF,GAAG,CAAC,oCAAoC,CAAC,CAAC;YAE1C,qCAAqC;YACrC,MAAM,OAAO,CAAC,GAAG,CACf,KAAK,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,CAAC,CAAO,QAAQ,EAAE,EAAE;;gBACzD,UAAI,WAAW,CAAC,YAAY,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,GAAG;oBAC9D,oDAAoD;oBACpD,MAAM,WAAW,CAAC,GAAG,CAAC,aAAG,CAAC,aAAa,EAAE;wBACvC,KAAK,EAAE,QAAQ,CAAC,KAAK;wBACrB,WAAW,EAAE,QAAQ,CAAC,WAAW;wBACjC,KAAK,EAAE,QAAQ,CAAC,KAAK;wBACrB,UAAU,EAAE,IAAI;wBAChB,UAAU,EAAE,QAAQ,CAAC,EAAE;qBACxB,CAAC,CAAC;iBACJ;qBAAM;oBACL,MAAM,WAAW,CAAC,GAAG,CAAC,aAAG,CAAC,aAAa,EAAE;wBACvC,UAAU,EAAE,QAAQ,CAAC,EAAE;wBACvB,KAAK,EAAE,QAAQ,CAAC,KAAK;wBACrB,WAAW,EAAE,QAAQ,CAAC,WAAW;wBACjC,KAAK,EAAE,QAAQ,CAAC,KAAK;wBACrB,UAAU,EAAE,IAAI;wBAChB,IAAI,EAAE,iBAAiB;qBACxB,CAAC,CAAC;iBACJ;gBACD,GAAG,CAAC,oDAAoD,CAAC,CAAC;gBAC1D,IAAI,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC1C,MAAM,WAAW,CAAC,IAAI,CAAC,aAAG,CAAC,uBAAuB,EAAE;wBAClD,UAAU,EAAE,QAAQ,CAAC,EAAE;wBACvB,UAAU,EAAE,IAAI;wBAChB,cAAc,EAAE,QAAQ,CAAC,UAAU,CAAC,OAAO;qBAC5C,CAAC,CAAC;oBACH,GAAG,CAAC,0CAA0C,CAAC,CAAC;iBACjD;gBACD,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;oBACtC,MAAM,WAAW,CAAC,UAAU,CAC1B,aAAQ,CAAC,wBAAwB,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAC3D,CAAC;oBACF,MAAM,WAAW,CAAC,UAAU,CAC1B,aAAG,CAAC,uCAAuC,CACzC,QAAQ,CAAC,EAAE,EACX,QAAQ,CAAC,UAAU,CAAC,GAAG,CACxB,CACF,CAAC;oBACF,GAAG,CAAC,iCAAiC,CAAC,CAAC;iBACxC;YACH,CAAC,CAAA,CAAC,CACH,CAAC;YAEF,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,WAAW,EAAE;gBACtC,MAAM,WAAW,CAAC,IAAI,CAAC,aAAG,CAAC,mBAAmB,EAAE;oBAC9C,IAAI;oBACJ,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,WAAW,CAAC,OAAO;oBAC7C,QAAQ,EAAE;wBACR,WAAW,EACT,KAAK,CAAC,WAAW,WAAI,WAAW,CAAC,QAAQ,0CAAE,WAAW,CAAA;qBACzD;iBACF,CAAC,CAAC;aACJ;YAED,GAAG,CAAC,+CAA+C,CAAC,CAAC;YACrD,OAAO,IAAI,CAAC;QACd,CAAC,CAAA,CAAC;aACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACX,KAAK,CAAC,sCAAsC,CAAC,CAAC;YAC9C,KAAK,CAAC,CAAC,CAAC,CAAC;YACT,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,KAAK,CAAC;SACd;QAED,4BAA4B;QAC5B,OAAO,MAAM,cAAI,CAAC,SAAS,CAAC,aAAG,CAAC,cAAc,EAAE;YAC9C,UAAU,EAAE,IAAI;YAChB,WAAW,EAAE,UAAU;SACxB,CAAC,CAAC;KACJ;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,+BAA+B,IAAI,aAAa,CAAC,CAAC;QACxD,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEF,MAAM,iBAAiB,GAAG,EAAE,CAAC;AAChB,QAAA,sBAAsB,GAAG,CAAO,EAC3C,IAAI,EACJ,UAAU,EACV,cAAc,EACd,MAAM,EACN,QAAQ,GAOT,EAMC,EAAE;IACF,IAAI;QACF,MAAM,aAAa,GAAG,MAAM,IAAI,4BAAY,CAAC,MAAM,CAAC,CAAC;QAErD,MAAM,aAAa,GACjB,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,SAAS,KAAI,QAAQ,IAAI,iBAAiB,CAAC;QAC5D,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,UAAU,CAAC,aAAG,CAAC,sBAAsB,EAAE;YAC7D,UAAU,EAAE,IAAI;YAChB,WAAW,EAAE,UAAU;YACvB,iBAAiB,EAAE,cAAc,IAAI,IAAI;YACzC,oBAAoB,EAAE,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,oBAAoB,KAAI,IAAI;YACjE,SAAS,EAAE,aAAa;SACzB,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,EAAE;YACT,GAAG,CAAC,oBAAoB,IAAI,EAAE,CAAC,CAAC;YAChC,OAAO,IAAI,CAAC;SACb;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,EAAE;YACjD,0CAA0C;YAC1C,GAAG,CAAC,gBAAgB,IAAI,EAAE,CAAC,CAAC;YAC5B,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;SAC5C;QAED,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,yCAAyC,EAAE,MAAM,CAAC,CAAC;QACxD,IAAI,MAAM,CAAC,MAAM,GAAG,aAAa,EAAE;YACjC,UAAU,GAAG,4BAAY,CAAC;gBACxB,oBAAoB,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,oBAAoB;gBACpE,SAAS,EAAE,aAAa;aACzB,CAAC,CAAC;YACH,iCAAiC;YACjC,MAAM,CAAC,GAAG,EAAE,CAAC;SACd;QAED,GAAG,CAAC,iBAAiB,IAAI,2BAA2B,UAAU,EAAE,CAAC,CAAC;QAClE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;KAC/C;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,uCAAuC,IAAI,IAAI,CAAC,CAAC;QACvD,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,cAAc,GAAG,CAAO,EACnC,IAAI,EACJ,UAAU,GAIX,EAAE,EAAE;IACH,IAAI;QACF,MAAM,cAAI,CAAC,IAAI,CAAC,aAAG,CAAC,cAAc,EAAE;YAClC,WAAW,EAAE,UAAU;YACvB,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC7C,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,SAAS,GAAG,CAAO,EAC9B,IAAI,EACJ,UAAU,GAIX,EAAE,EAAE;IACH,IAAI;QACF,MAAM,cAAI,CAAC,IAAI,CAAC,aAAG,CAAC,eAAe,EAAE;YACnC,WAAW,EAAE,UAAU;YACvB,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,2BAA2B,CAAC,CAAC;QACnC,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,WAAW,GAAG,CAAO,EAChC,IAAI,EACJ,UAAU,GAIX,EAAE,EAAE;IACH,IAAI;QACF,MAAM,cAAI,CAAC,IAAI,CAAC,aAAG,CAAC,iBAAiB,EAAE;YACrC,WAAW,EAAE,UAAU;YACvB,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,6BAA6B,CAAC,CAAC;QACrC,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,QAAQ,GAAG,CAAO,EAC7B,IAAI,EACJ,UAAU,GAIX,EAAE,EAAE;IACH,IAAI;QACF,MAAM,cAAI,CAAC,IAAI,CAAC,aAAG,CAAC,cAAc,EAAE;YAClC,WAAW,EAAE,UAAU;YACvB,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,4BAA4B,CAAC,CAAC;QACpC,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,UAAU,GAAG,CAAO,EAC/B,IAAI,EACJ,UAAU,GAIX,EAAE,EAAE;IACH,IAAI;QACF,MAAM,cAAI,CAAC,IAAI,CAAC,aAAG,CAAC,gBAAgB,EAAE;YACpC,WAAW,EAAE,UAAU;YACvB,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,8BAA8B,CAAC,CAAC;QACtC,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,yBAAyB,GAAG,CAAO,EAC9C,IAAI,EACJ,UAAU,GAIX,EAAE,EAAE;IACH,IAAI;QACF,MAAM,cAAI,CAAC,IAAI,CAAC,aAAG,CAAC,0BAA0B,EAAE;YAC9C,WAAW,EAAE,UAAU;YACvB,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,6BAA6B,CAAC,CAAC;QACrC,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC","sourcesContent":["import debug from \"debug\";\nimport pool from \"../pool\";\nimport sql from \"./sql\";\nimport postsSQL from \"../posts/sql\";\nimport { DbBoardMetadata, DbActivityThreadType } from \"../../Types\";\nimport { getMetadataDelta } from \"./utils\";\nimport { encodeCursor, decodeCursor } from \"../queries-utils\";\n\nconst info = debug(\"bobaserver:board:queries-info\");\nconst log = debug(\"bobaserver:board:queries-log\");\nconst error = debug(\"bobaserver:board:queries-error\");\n\nexport const getBoards = async ({\n  firebaseId,\n}: {\n  firebaseId: string;\n}): Promise<any> => {\n  try {\n    return await pool.many(sql.getAllBoards, { firebase_id: firebaseId });\n  } catch (e) {\n    error(`Error while fetching boards.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const getBoardBySlug = async ({\n  firebaseId,\n  slug,\n}: {\n  firebaseId: string | undefined;\n  slug: string;\n}): Promise<DbBoardMetadata> => {\n  try {\n    const rows = await pool.oneOrNone(sql.getBoardBySlug, {\n      firebase_id: firebaseId,\n      board_slug: slug,\n    });\n\n    if (!rows) {\n      log(`Board not found: ${slug}`);\n      return null;\n    }\n\n    info(`Got getBoardBySlug query result:`, rows);\n    log(`Fetched board ${slug} for user ${firebaseId}`);\n    return rows;\n  } catch (e) {\n    error(`Error while fetching board by slug (${slug}).`);\n    error(e);\n    return null;\n  }\n};\n\nexport const updateBoardMetadata = async ({\n  slug,\n  firebaseId,\n  oldMetadata,\n  newMetadata,\n}: {\n  slug: string;\n  firebaseId: string;\n  oldMetadata: DbBoardMetadata;\n  newMetadata: Partial<DbBoardMetadata>;\n}): Promise<any> => {\n  try {\n    const delta = getMetadataDelta({\n      oldMetadata,\n      newMetadata,\n    });\n\n    log(`Received metadata delta for update to board ${slug}`);\n    // TODO: print at depth (now seeing [Object])\n    log(delta);\n\n    const success = await pool\n      .tx(\"update-descriptions\", async (transaction) => {\n        // Delete all old texts\n        await Promise.all(\n          delta.texts.deleted.map(async (text) => {\n            await transaction.none(sql.deleteSection, {\n              section_id: text.id,\n              board_slug: slug,\n            });\n          })\n        );\n        log(\"Deleted obsolete text sections\");\n\n        // Delete all old category filters\n        await Promise.all(\n          delta.categoryFilters.deleted.map(async (filter) => {\n            await transaction.none(sql.deleteSectionCategories, {\n              section_id: filter.id,\n              board_slug: slug,\n              category_names: null,\n            });\n            await transaction.none(sql.deleteSection, {\n              section_id: filter.id,\n              board_slug: slug,\n            });\n          })\n        );\n        log(\"Deleted obsolete category filters sections\");\n\n        // Update or insert texts\n        await Promise.all(\n          delta.texts.newAndUpdated.map(async (text) => {\n            if (oldMetadata.descriptions?.find((c) => c.id == text.id)) {\n              // this is the update of an already-existing section\n              await transaction.one(sql.updateSection, {\n                title: text.title,\n                description: text.description,\n                index: text.index,\n                board_slug: slug,\n                section_id: text.id,\n              });\n            } else {\n              await transaction.one(sql.createSection, {\n                section_id: text.id,\n                title: text.title,\n                description: text.description,\n                index: text.index,\n                board_slug: slug,\n                type: \"text\",\n              });\n            }\n          })\n        );\n        log(\"Added (and updated) text sections.\");\n\n        // Update or insert category sections\n        await Promise.all(\n          delta.categoryFilters.newAndUpdated.map(async (category) => {\n            if (oldMetadata.descriptions?.find((c) => c.id == category.id)) {\n              // this is the update of an already-existing section\n              await transaction.one(sql.updateSection, {\n                title: category.title,\n                description: category.description,\n                index: category.index,\n                board_slug: slug,\n                section_id: category.id,\n              });\n            } else {\n              await transaction.one(sql.createSection, {\n                section_id: category.id,\n                title: category.title,\n                description: category.description,\n                index: category.index,\n                board_slug: slug,\n                type: \"category_filter\",\n              });\n            }\n            log(\"Created new category section (or updated old one).\");\n            if (category.categories.deleted.length > 0) {\n              await transaction.none(sql.deleteSectionCategories, {\n                section_id: category.id,\n                board_slug: slug,\n                category_names: category.categories.deleted,\n              });\n              log(\"Removed obsolete categories from filter.\");\n            }\n            if (category.categories.new.length > 0) {\n              await transaction.manyOrNone(\n                postsSQL.createAddCategoriesQuery(category.categories.new)\n              );\n              await transaction.manyOrNone(\n                sql.createAddCategoriesToFilterSectionQuery(\n                  category.id,\n                  category.categories.new\n                )\n              );\n              log(\"Added new categories to filter.\");\n            }\n          })\n        );\n\n        if (delta.tagline || delta.accentColor) {\n          await transaction.none(sql.updateBoardSettings, {\n            slug,\n            tagline: delta.tagline || oldMetadata.tagline,\n            settings: {\n              accentColor:\n                delta.accentColor || oldMetadata.settings?.accentColor,\n            },\n          });\n        }\n\n        log(\"Added (and updated) category filter sections.\");\n        return true;\n      })\n      .catch((e) => {\n        error(`Error while updating board metadata.`);\n        error(e);\n        return false;\n      });\n\n    if (!success) {\n      return false;\n    }\n\n    // Now return the new result\n    return await pool.oneOrNone(sql.getBoardBySlug, {\n      board_slug: slug,\n      firebase_id: firebaseId,\n    });\n  } catch (e) {\n    error(`Error while updating board (${slug}) metadata.`);\n    error(e);\n    return false;\n  }\n};\n\nconst DEFAULT_PAGE_SIZE = 10;\nexport const getBoardActivityBySlug = async ({\n  slug,\n  firebaseId,\n  filterCategory,\n  cursor,\n  pageSize,\n}: {\n  slug: string;\n  firebaseId: string;\n  filterCategory?: string | null;\n  cursor: string;\n  pageSize?: number;\n}): Promise<\n  | {\n      cursor: string | null;\n      activity: DbActivityThreadType[];\n    }\n  | false\n> => {\n  try {\n    const decodedCursor = cursor && decodeCursor(cursor);\n\n    const finalPageSize =\n      decodedCursor?.page_size || pageSize || DEFAULT_PAGE_SIZE;\n    const rows = await pool.manyOrNone(sql.getBoardActivityBySlug, {\n      board_slug: slug,\n      firebase_id: firebaseId,\n      filtered_category: filterCategory || null,\n      last_activity_cursor: decodedCursor?.last_activity_cursor || null,\n      page_size: finalPageSize,\n    });\n\n    if (!rows) {\n      log(`Board not found: ${slug}`);\n      return null;\n    }\n\n    if (rows.length == 1 && rows[0].thread_id == null) {\n      // Only one row with just the null thread)\n      log(`Board empty: ${slug}`);\n      return { cursor: undefined, activity: [] };\n    }\n\n    let result = rows;\n    let nextCursor = null;\n    info(`Got getBoardActivityBySlug query result`, result);\n    if (result.length > finalPageSize) {\n      nextCursor = encodeCursor({\n        last_activity_cursor: result[result.length - 1].thread_last_activity,\n        page_size: finalPageSize,\n      });\n      // remove last element from array\n      result.pop();\n    }\n\n    log(`Fetched board ${slug} activity data for user ${firebaseId}`);\n    return { cursor: nextCursor, activity: rows };\n  } catch (e) {\n    error(`Error while fetching board by slug (${slug}).`);\n    error(e);\n    return false;\n  }\n};\n\nexport const markBoardVisit = async ({\n  slug,\n  firebaseId,\n}: {\n  slug: string;\n  firebaseId: string;\n}) => {\n  try {\n    await pool.none(sql.markBoardVisit, {\n      firebase_id: firebaseId,\n      board_slug: slug,\n    });\n    return true;\n  } catch (e) {\n    error(`Error while recording thread visit.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const muteBoard = async ({\n  slug,\n  firebaseId,\n}: {\n  slug: string;\n  firebaseId: string;\n}) => {\n  try {\n    await pool.none(sql.muteBoardBySlug, {\n      firebase_id: firebaseId,\n      board_slug: slug,\n    });\n    return true;\n  } catch (e) {\n    error(`Error while muting board.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const unmuteBoard = async ({\n  slug,\n  firebaseId,\n}: {\n  slug: string;\n  firebaseId: string;\n}) => {\n  try {\n    await pool.none(sql.unmuteBoardBySlug, {\n      firebase_id: firebaseId,\n      board_slug: slug,\n    });\n    return true;\n  } catch (e) {\n    error(`Error while unmuting board.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const pinBoard = async ({\n  slug,\n  firebaseId,\n}: {\n  slug: string;\n  firebaseId: string;\n}) => {\n  try {\n    await pool.none(sql.pinBoardBySlug, {\n      firebase_id: firebaseId,\n      board_slug: slug,\n    });\n    return true;\n  } catch (e) {\n    error(`Error while pinning board.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const unpinBoard = async ({\n  slug,\n  firebaseId,\n}: {\n  slug: string;\n  firebaseId: string;\n}) => {\n  try {\n    await pool.none(sql.unpinBoardBySlug, {\n      firebase_id: firebaseId,\n      board_slug: slug,\n    });\n    return true;\n  } catch (e) {\n    error(`Error while unpinning board.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const dismissBoardNotifications = async ({\n  slug,\n  firebaseId,\n}: {\n  slug: string;\n  firebaseId: string;\n}) => {\n  try {\n    await pool.none(sql.dismissNotificationsBySlug, {\n      firebase_id: firebaseId,\n      board_slug: slug,\n    });\n    return true;\n  } catch (e) {\n    error(`Error while unmuting board.`);\n    error(e);\n    return false;\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8eb8c3efe7f5a553959fd03436515bf667ee7cab","contentHash":"0e26460879af403f684a7b52e567cb8d047150b5a4af597cb9c24afbd2bc231b"},"/Users/esra/projects/programming/bobaserver/server/pool.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/pool.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":49}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":14},"end":{"line":8,"column":54}},"6":{"start":{"line":9,"column":12},"end":{"line":9,"column":50}},"7":{"start":{"line":10,"column":13},"end":{"line":10,"column":52}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"9":{"start":{"line":13,"column":0},"end":{"line":26,"column":1}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":76}},"11":{"start":{"line":15,"column":4},"end":{"line":20,"column":6}},"12":{"start":{"line":23,"column":4},"end":{"line":23,"column":82}},"13":{"start":{"line":24,"column":25},"end":{"line":24,"column":165}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":56}},"15":{"start":{"line":27,"column":14},"end":{"line":37,"column":2}},"16":{"start":{"line":29,"column":8},"end":{"line":29,"column":72}},"17":{"start":{"line":32,"column":8},"end":{"line":32,"column":46}},"18":{"start":{"line":35,"column":8},"end":{"line":35,"column":43}},"19":{"start":{"line":38,"column":13},"end":{"line":38,"column":34}},"20":{"start":{"line":39,"column":0},"end":{"line":39,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":13},"end":{"line":28,"column":14}},"loc":{"start":{"line":28,"column":19},"end":{"line":30,"column":5}},"line":28},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":11},"end":{"line":31,"column":12}},"loc":{"start":{"line":31,"column":18},"end":{"line":33,"column":5}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":11},"end":{"line":34,"column":12}},"loc":{"start":{"line":34,"column":18},"end":{"line":36,"column":5}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":13,"column":0},"end":{"line":26,"column":1}},"type":"if","locations":[{"start":{"line":13,"column":0},"end":{"line":26,"column":1}},{"start":{"line":13,"column":0},"end":{"line":26,"column":1}}],"line":13}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":75,"17":1,"18":103,"19":1,"20":1},"f":{"0":2,"1":75,"2":1,"3":103},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/pool.ts","sources":["/Users/esra/projects/programming/bobaserver/server/pool.ts"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAC1B,4DAA6B;AAE7B,MAAM,KAAK,GAAG,eAAK,CAAC,uBAAuB,CAAC,CAAC;AAC7C,MAAM,GAAG,GAAG,eAAK,CAAC,qBAAqB,CAAC,CAAC;AACzC,MAAM,IAAI,GAAG,eAAK,CAAC,sBAAsB,CAAC,CAAC;AAE3C,IAAI,cAAc,CAAC;AACnB,GAAG,CAAC,6BAA6B,CAAC,CAAC;AACnC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,YAAY,EAAE;IACxC,GAAG,CAAC,uCAAuC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;IACxE,cAAc,GAAG;QACf,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;QAC/B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;QAC/B,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;QACvC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;KAClC,CAAC;CACH;KAAM;IACL,GAAG,CAAC,6CAA6C,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;IAC9E,MAAM,YAAY,GAAG,cAAc,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB,cAAc,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAClK,cAAc,GAAG,EAAE,gBAAgB,EAAE,YAAY,EAAE,CAAC;CACrD;AACD,MAAM,KAAK,GAAG,oBAAG,CAAC;IAChB,OAAO,EAAE,GAAG,EAAE;QACZ,GAAG,CAAC,+BAA+B,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;IAClE,CAAC;IACD,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE;QACX,KAAK,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE;QACX,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;CACF,CAAC,CAAC;AACH,MAAM,IAAI,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;AAEnC,kBAAe,IAAI,CAAC","sourcesContent":["import debug from \"debug\";\nimport pgp from \"pg-promise\";\n\nconst error = debug(\"bobaserver:pool-error\");\nconst log = debug(\"bobaserver:pool-log\");\nconst info = debug(\"bobaserver:pool-info\");\n\nlet databaseConfig;\nlog(`Attempting db connection...`);\nif (process.env.NODE_ENV == \"production\") {\n  log(`Connecting to remote database host: ${process.env.POSTGRES_HOST}`);\n  databaseConfig = {\n    host: process.env.POSTGRES_HOST,\n    user: process.env.POSTGRES_USER,\n    password: process.env.POSTGRES_PASSWORD,\n    database: process.env.POSTGRES_DB,\n  };\n} else {\n  log(`Attempting connection to local db on port ${process.env.POSTGRES_PORT}`);\n  const DATABASE_URL = `postgres://${process.env.POSTGRES_USER}:${process.env.POSTGRES_PASSWORD}@127.0.0.1:${process.env.POSTGRES_PORT}/${process.env.POSTGRES_DB}`;\n  databaseConfig = { connectionString: DATABASE_URL };\n}\nconst pgLib = pgp({\n  connect: () => {\n    log(`connected to the db on port ${process.env.POSTGRES_PORT}`);\n  },\n  error: (e) => {\n    error(`error occurred on the db `, e);\n  },\n  query: (q) => {\n    info(\"executing query: \", q.query);\n  },\n});\nconst pool = pgLib(databaseConfig);\n\nexport default pool;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0305e12220b44dccee5fd544e3373a5b1ebd3b4b","contentHash":"585666d185757dddac88a43c07e26ff5b16e816f00e6d544c7c599962a630351"},"/Users/esra/projects/programming/bobaserver/server/boards/sql/index.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/boards/sql/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":131}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},"18":{"start":{"line":17,"column":99},"end":{"line":17,"column":131}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":62}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":62}},"24":{"start":{"line":25,"column":21},"end":{"line":25,"column":56}},"25":{"start":{"line":26,"column":15},"end":{"line":26,"column":47}},"26":{"start":{"line":27,"column":23},"end":{"line":34,"column":108}},"27":{"start":{"line":35,"column":32},"end":{"line":42,"column":128}},"28":{"start":{"line":43,"column":22},"end":{"line":47,"column":82}},"29":{"start":{"line":48,"column":22},"end":{"line":60,"column":1}},"30":{"start":{"line":61,"column":22},"end":{"line":72,"column":1}},"31":{"start":{"line":73,"column":19},"end":{"line":73,"column":41}},"32":{"start":{"line":74,"column":48},"end":{"line":88,"column":1}},"33":{"start":{"line":75,"column":32},"end":{"line":80,"column":30}},"34":{"start":{"line":81,"column":4},"end":{"line":87,"column":9}},"35":{"start":{"line":81,"column":67},"end":{"line":87,"column":5}},"36":{"start":{"line":89,"column":24},"end":{"line":93,"column":46}},"37":{"start":{"line":94,"column":26},"end":{"line":98,"column":77}},"38":{"start":{"line":99,"column":23},"end":{"line":103,"column":46}},"39":{"start":{"line":104,"column":25},"end":{"line":108,"column":77}},"40":{"start":{"line":109,"column":35},"end":{"line":118,"column":122}},"41":{"start":{"line":119,"column":28},"end":{"line":123,"column":32}},"42":{"start":{"line":124,"column":0},"end":{"line":140,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":56},"end":{"line":21,"column":57}},"loc":{"start":{"line":21,"column":71},"end":{"line":23,"column":1}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":74,"column":48},"end":{"line":74,"column":49}},"loc":{"start":{"line":74,"column":75},"end":{"line":88,"column":1}},"line":74},"8":{"name":"(anonymous_8)","decl":{"start":{"line":81,"column":52},"end":{"line":81,"column":53}},"loc":{"start":{"line":81,"column":67},"end":{"line":87,"column":5}},"line":81}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},{"start":{"line":17,"column":4},"end":{"line":17,"column":131}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},{"start":{"line":17,"column":40},"end":{"line":17,"column":131}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":97}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":97}}],"line":17},"12":{"loc":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"type":"binary-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":27}},{"start":{"line":21,"column":31},"end":{"line":21,"column":51}},{"start":{"line":21,"column":56},"end":{"line":23,"column":1}}],"line":21},"13":{"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":61}},"type":"cond-expr","locations":[{"start":{"line":22,"column":37},"end":{"line":22,"column":40}},{"start":{"line":22,"column":43},"end":{"line":22,"column":61}}],"line":22},"14":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":15}},{"start":{"line":22,"column":19},"end":{"line":22,"column":33}}],"line":22}},"s":{"0":1,"1":10,"2":10,"3":10,"4":3,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":10,"18":10,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1},"f":{"0":10,"1":3,"2":0,"3":1,"4":0,"5":1,"6":1,"7":0,"8":0},"b":{"0":[1,1,1],"1":[1,0],"2":[10,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[10,0],"11":[10,10],"12":[1,1,1],"13":[0,1],"14":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/boards/sql/index.ts","sources":["/Users/esra/projects/programming/bobaserver/server/boards/sql/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,yDAA2C;AAC3C,gDAAwB;AAExB,MAAM,cAAc,GAAG;;;;;;;4GAOqF,CAAC;AAE7G,MAAM,uBAAuB,GAAG;;;;;;;gIAOgG,CAAC;AAEjI,MAAM,aAAa,GAAG;;;;kFAI4D,CAAC;AAEnF,MAAM,aAAa,GAAG;;;;;;;;;;;;CAYrB,CAAC;AAEF,MAAM,aAAa,GAAG;;;;;;;;;;;CAWrB,CAAC;AAEF,MAAM,UAAU,GAAG,oBAAE,EAAE,CAAC;AACxB,MAAM,uCAAuC,GAAG,CAC9C,SAAiB,EACjB,UAAoB,EACpB,EAAE;IACF,MAAM,mBAAmB,GAAG;;;;;8BAKA,CAAC;IAC7B,OAAO,UAAU,CAAC,OAAO,CAAC,MAAM,CAC9B,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAC5B,KAAK,EAAE,mBAAmB;QAC1B,MAAM,EAAE;YACN,UAAU,EAAE,SAAS;YACrB,QAAQ,EAAE,QAAQ,CAAC,WAAW,EAAE;SACjC;KACF,CAAC,CAAC,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG;;;;8CAIsB,CAAC;AAE/C,MAAM,iBAAiB,GAAG;;;;6EAImD,CAAC;AAE9E,MAAM,cAAc,GAAG;;;;8CAIuB,CAAC;AAE/C,MAAM,gBAAgB,GAAG;;;;6EAIoD,CAAC;AAE9E,MAAM,0BAA0B,GAAG;;;;;;;;;0HASuF,CAAC;AAE3H,MAAM,mBAAmB,GAAG;;;;gCAII,CAAC;AAEjC,kBAAe;IACb,YAAY,EAAE,IAAI,sBAAS,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;IACnE,sBAAsB,EAAE,IAAI,sBAAS,CACnC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,4BAA4B,CAAC,CACnD;IACD,cAAc,EAAE,IAAI,sBAAS,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;IACxE,cAAc;IACd,uBAAuB;IACvB,aAAa;IACb,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,uCAAuC;IACvC,eAAe;IACf,iBAAiB;IACjB,cAAc;IACd,gBAAgB;IAChB,0BAA0B;CAC3B,CAAC","sourcesContent":["import pg, { QueryFile } from \"pg-promise\";\nimport path from \"path\";\n\nconst markBoardVisit = `\n    INSERT INTO user_board_last_visits(user_id, board_id) VALUES (\n        (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/),\n        (SELECT id from boards WHERE boards.slug = $/board_slug/))\n    ON CONFLICT(user_id, board_id) DO UPDATE \n        SET last_visit_time = DEFAULT\n        WHERE user_board_last_visits.user_id = (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/)\n            AND user_board_last_visits.board_id = (SELECT id from boards WHERE boards.slug = $/board_slug/)`;\n\nconst deleteSectionCategories = `\n    DELETE FROM board_description_section_categories bdsc \n    USING board_description_sections bds\n    WHERE  \n        bds.string_id = $/section_id/ AND \n        bds.id = bdsc.section_id AND \n        bds.board_id = (SELECT id from boards WHERE boards.slug = $/board_slug/) AND\n        ($/category_names/ IS NULL OR bdsc.category_id IN (SELECT id FROM categories WHERE category = ANY($/category_names/)));`;\n\nconst deleteSection = `\n    DELETE FROM board_description_sections bds\n    WHERE  \n        bds.string_id = $/section_id/ AND\n        bds.board_id = (SELECT id from boards WHERE boards.slug = $/board_slug/);`;\n\nconst updateSection = `\n    UPDATE board_description_sections bds\n    SET\n        title = $/title/,\n        description = $/description/,\n        index = $/index/\n    FROM boards\n    WHERE\n        boards.id = bds.board_id \n        AND bds.board_id  = (SELECT id from boards WHERE boards.slug = $/board_slug/)\n        AND bds.string_id = $/section_id/\n    RETURNING *;\n`;\n\nconst createSection = `\n    INSERT INTO board_description_sections(string_id, board_id, title, description, index, type)\n    VALUES(\n        $/section_id/,\n        (SELECT id from boards WHERE boards.slug = $/board_slug/),\n        $/title/,\n        $/description/,\n        $/index/,\n        $/type/\n    )\n    RETURNING *;\n`;\n\nconst pgInstance = pg();\nconst createAddCategoriesToFilterSectionQuery = (\n  sectionId: string,\n  categories: string[]\n) => {\n  const insertCategoryQuery = `\n      INSERT INTO board_description_section_categories(section_id, category_id) \n      VALUES(\n        (SELECT id FROM board_description_sections WHERE string_id = $/section_id/),\n        (SELECT id FROM categories WHERE category = $/category/))\n      ON CONFLICT DO NOTHING;`;\n  return pgInstance.helpers.concat(\n    categories.map((category) => ({\n      query: insertCategoryQuery,\n      values: {\n        section_id: sectionId,\n        category: category.toLowerCase(),\n      },\n    }))\n  );\n};\n\nconst muteBoardBySlug = `\n    INSERT INTO user_muted_boards(user_id, board_id) VALUES (\n        (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/),\n        (SELECT id from boards WHERE boards.slug = $/board_slug/))\n    ON CONFLICT(user_id, board_id) DO NOTHING`;\n\nconst unmuteBoardBySlug = `\n    DELETE FROM user_muted_boards WHERE\n        user_id = (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/)\n        AND\n        board_id = (SELECT id from boards WHERE boards.slug = $/board_slug/)`;\n\nconst pinBoardBySlug = `\n    INSERT INTO user_pinned_boards(user_id, board_id) VALUES (\n        (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/),\n        (SELECT id from boards WHERE boards.slug = $/board_slug/))\n    ON CONFLICT(user_id, board_id) DO NOTHING`;\n\nconst unpinBoardBySlug = `\n    DELETE FROM user_pinned_boards WHERE\n        user_id = (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/)\n        AND\n        board_id = (SELECT id from boards WHERE boards.slug = $/board_slug/)`;\n\nconst dismissNotificationsBySlug = `\n    INSERT INTO dismiss_board_notifications_requests(user_id, board_id, dismiss_request_time) VALUES (\n        (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/),\n        (SELECT id from boards WHERE boards.slug = $/board_slug/),\n        DEFAULT)\n    ON CONFLICT(user_id, board_id) DO UPDATE\n        SET dismiss_request_time = DEFAULT\n        WHERE\n            dismiss_board_notifications_requests.user_id = (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/)\n            AND dismiss_board_notifications_requests.board_id = (SELECT id from boards WHERE boards.slug = $/board_slug/)`;\n\nconst updateBoardSettings = `\n    UPDATE boards\n    SET tagline = $/tagline/,\n        settings = $/settings/\n    WHERE boards.slug = $/slug/`;\n\nexport default {\n  getAllBoards: new QueryFile(path.join(__dirname, \"all-boards.sql\")),\n  getBoardActivityBySlug: new QueryFile(\n    path.join(__dirname, \"board-activity-by-slug.sql\")\n  ),\n  getBoardBySlug: new QueryFile(path.join(__dirname, \"board-by-slug.sql\")),\n  markBoardVisit,\n  deleteSectionCategories,\n  deleteSection,\n  updateSection,\n  createSection,\n  updateBoardSettings,\n  createAddCategoriesToFilterSectionQuery,\n  muteBoardBySlug,\n  unmuteBoardBySlug,\n  pinBoardBySlug,\n  unpinBoardBySlug,\n  dismissNotificationsBySlug,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f1cfbcfcd7fb6de8de610205bc378aad15403ac2","contentHash":"2a9a12182c3aeb2f41c0b10a06390c860df7d8410da97d45fedc9e5e79099473"},"/Users/esra/projects/programming/bobaserver/server/posts/sql/index.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/posts/sql/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":131}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},"18":{"start":{"line":17,"column":99},"end":{"line":17,"column":131}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":62}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":62}},"24":{"start":{"line":25,"column":21},"end":{"line":25,"column":56}},"25":{"start":{"line":26,"column":15},"end":{"line":26,"column":47}},"26":{"start":{"line":27,"column":26},"end":{"line":37,"column":12}},"27":{"start":{"line":38,"column":27},"end":{"line":44,"column":12}},"28":{"start":{"line":45,"column":28},"end":{"line":52,"column":18}},"29":{"start":{"line":53,"column":31},"end":{"line":60,"column":18}},"30":{"start":{"line":61,"column":17},"end":{"line":74,"column":5}},"31":{"start":{"line":75,"column":20},"end":{"line":86,"column":90}},"32":{"start":{"line":87,"column":19},"end":{"line":87,"column":41}},"33":{"start":{"line":88,"column":27},"end":{"line":98,"column":1}},"34":{"start":{"line":89,"column":23},"end":{"line":91,"column":6}},"35":{"start":{"line":92,"column":23},"end":{"line":92,"column":70}},"36":{"start":{"line":92,"column":42},"end":{"line":92,"column":68}},"37":{"start":{"line":96,"column":4},"end":{"line":97,"column":53}},"38":{"start":{"line":99,"column":33},"end":{"line":108,"column":1}},"39":{"start":{"line":100,"column":27},"end":{"line":100,"column":146}},"40":{"start":{"line":101,"column":4},"end":{"line":107,"column":9}},"41":{"start":{"line":101,"column":56},"end":{"line":107,"column":5}},"42":{"start":{"line":109,"column":27},"end":{"line":113,"column":1}},"43":{"start":{"line":114,"column":33},"end":{"line":118,"column":1}},"44":{"start":{"line":119,"column":38},"end":{"line":123,"column":1}},"45":{"start":{"line":124,"column":30},"end":{"line":128,"column":1}},"46":{"start":{"line":129,"column":33},"end":{"line":141,"column":1}},"47":{"start":{"line":130,"column":29},"end":{"line":132,"column":6}},"48":{"start":{"line":133,"column":29},"end":{"line":135,"column":7}},"49":{"start":{"line":133,"column":59},"end":{"line":135,"column":5}},"50":{"start":{"line":139,"column":4},"end":{"line":140,"column":58}},"51":{"start":{"line":142,"column":39},"end":{"line":154,"column":1}},"52":{"start":{"line":143,"column":32},"end":{"line":146,"column":27}},"53":{"start":{"line":147,"column":4},"end":{"line":153,"column":9}},"54":{"start":{"line":147,"column":67},"end":{"line":153,"column":5}},"55":{"start":{"line":155,"column":38},"end":{"line":167,"column":1}},"56":{"start":{"line":156,"column":27},"end":{"line":158,"column":6}},"57":{"start":{"line":159,"column":27},"end":{"line":161,"column":7}},"58":{"start":{"line":159,"column":54},"end":{"line":161,"column":5}},"59":{"start":{"line":165,"column":4},"end":{"line":166,"column":57}},"60":{"start":{"line":168,"column":44},"end":{"line":180,"column":1}},"61":{"start":{"line":169,"column":31},"end":{"line":172,"column":26}},"62":{"start":{"line":173,"column":4},"end":{"line":179,"column":9}},"63":{"start":{"line":173,"column":64},"end":{"line":179,"column":5}},"64":{"start":{"line":181,"column":30},"end":{"line":183,"column":1}},"65":{"start":{"line":184,"column":20},"end":{"line":190,"column":1}},"66":{"start":{"line":191,"column":0},"end":{"line":212,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":56},"end":{"line":21,"column":57}},"loc":{"start":{"line":21,"column":71},"end":{"line":23,"column":1}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":88,"column":27},"end":{"line":88,"column":28}},"loc":{"start":{"line":88,"column":37},"end":{"line":98,"column":1}},"line":88},"8":{"name":"(anonymous_8)","decl":{"start":{"line":92,"column":32},"end":{"line":92,"column":33}},"loc":{"start":{"line":92,"column":42},"end":{"line":92,"column":68}},"line":92},"9":{"name":"(anonymous_9)","decl":{"start":{"line":99,"column":33},"end":{"line":99,"column":34}},"loc":{"start":{"line":99,"column":51},"end":{"line":108,"column":1}},"line":99},"10":{"name":"(anonymous_10)","decl":{"start":{"line":101,"column":46},"end":{"line":101,"column":47}},"loc":{"start":{"line":101,"column":56},"end":{"line":107,"column":5}},"line":101},"11":{"name":"(anonymous_11)","decl":{"start":{"line":129,"column":33},"end":{"line":129,"column":34}},"loc":{"start":{"line":129,"column":49},"end":{"line":141,"column":1}},"line":129},"12":{"name":"(anonymous_12)","decl":{"start":{"line":133,"column":44},"end":{"line":133,"column":45}},"loc":{"start":{"line":133,"column":59},"end":{"line":135,"column":5}},"line":133},"13":{"name":"(anonymous_13)","decl":{"start":{"line":142,"column":39},"end":{"line":142,"column":40}},"loc":{"start":{"line":142,"column":63},"end":{"line":154,"column":1}},"line":142},"14":{"name":"(anonymous_14)","decl":{"start":{"line":147,"column":52},"end":{"line":147,"column":53}},"loc":{"start":{"line":147,"column":67},"end":{"line":153,"column":5}},"line":147},"15":{"name":"(anonymous_15)","decl":{"start":{"line":155,"column":38},"end":{"line":155,"column":39}},"loc":{"start":{"line":155,"column":52},"end":{"line":167,"column":1}},"line":155},"16":{"name":"(anonymous_16)","decl":{"start":{"line":159,"column":40},"end":{"line":159,"column":41}},"loc":{"start":{"line":159,"column":54},"end":{"line":161,"column":5}},"line":159},"17":{"name":"(anonymous_17)","decl":{"start":{"line":168,"column":44},"end":{"line":168,"column":45}},"loc":{"start":{"line":168,"column":66},"end":{"line":180,"column":1}},"line":168},"18":{"name":"(anonymous_18)","decl":{"start":{"line":173,"column":50},"end":{"line":173,"column":51}},"loc":{"start":{"line":173,"column":64},"end":{"line":179,"column":5}},"line":173}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},{"start":{"line":17,"column":4},"end":{"line":17,"column":131}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},{"start":{"line":17,"column":40},"end":{"line":17,"column":131}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":97}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":97}}],"line":17},"12":{"loc":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"type":"binary-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":27}},{"start":{"line":21,"column":31},"end":{"line":21,"column":51}},{"start":{"line":21,"column":56},"end":{"line":23,"column":1}}],"line":21},"13":{"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":61}},"type":"cond-expr","locations":[{"start":{"line":22,"column":37},"end":{"line":22,"column":40}},{"start":{"line":22,"column":43},"end":{"line":22,"column":61}}],"line":22},"14":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":15}},{"start":{"line":22,"column":19},"end":{"line":22,"column":33}}],"line":22}},"s":{"0":1,"1":10,"2":10,"3":10,"4":2,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":10,"18":10,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":2,"35":2,"36":4,"37":2,"38":1,"39":2,"40":2,"41":4,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":2,"59":1,"60":1,"61":1,"62":1,"63":2,"64":1,"65":1,"66":1},"f":{"0":10,"1":2,"2":0,"3":1,"4":0,"5":1,"6":1,"7":2,"8":4,"9":2,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":2,"17":1,"18":2},"b":{"0":[1,1,1],"1":[1,0],"2":[10,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[10,0],"11":[10,10],"12":[1,1,1],"13":[0,1],"14":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/posts/sql/index.ts","sources":["/Users/esra/projects/programming/bobaserver/server/posts/sql/index.ts"],"names":[],"mappings":"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","sourcesContent":["import pg, { QueryFile } from \"pg-promise\";\nimport path from \"path\";\n\nconst getRandomIdentity = `\n    SELECT \n        id as secret_identity_id ,\n        display_name as secret_identity_name,\n        avatar_reference_id as secret_identity_avatar\n    FROM secret_identities\n    LEFT JOIN user_thread_identities as uti\n        ON secret_identities.id = uti.identity_id AND uti.thread_id = $/thread_id/\n    WHERE uti.user_id is NULL\n    ORDER BY RANDOM()\n    LIMIT 1`;\n\nconst getRandomAccessory = `\n    SELECT \n        id as accessory_id ,\n        image_reference_id as accessory_avatar\n    FROM accessories\n    ORDER BY RANDOM()\n    LIMIT 1`;\n\nconst addIdentityToThread = `\n    INSERT INTO user_thread_identities(thread_id, user_id, identity_id, role_id)\n    VALUES(\n        $/thread_id/,\n        $/user_id/, \n        $/secret_identity_id/,\n        $/role_identity_id/\n    ) RETURNING *`;\n\nconst addAccessoryToIdentity = `\n    INSERT INTO identity_thread_accessories(thread_id, role_id, identity_id, accessory_id)\n    VALUES(\n        $/thread_id/,\n        $/role_id/, \n        $/identity_id/,\n        $/accessory_id/\n    ) RETURNING *`;\n\nconst makePost = `\n    INSERT INTO posts(string_id, parent_post, parent_thread, author, content, type, whisper_tags, anonymity_type, options)\n    VALUES(\n        $/post_string_id/,\n        $/parent_post/,\n        $/parent_thread/,\n        $/user_id/,\n        $/content/,\n        'text',\n        $/whisper_tags/,\n        $/anonymity_type/,\n        $/options/\n    ) RETURNING *, TO_CHAR(posts.created, 'YYYY-MM-DD\"T\"HH24:MI:SS') as created_string\n    `;\n\nconst makeComment = `\n    INSERT INTO comments(string_id, parent_post, parent_thread, author, content, anonymity_type, chain_parent_comment, parent_comment)\n    VALUES(\n        $/comment_string_id/,\n        $/parent_post/,\n        $/parent_thread/,\n        $/user_id/,\n        $/content/,\n        $/anonymity_type/,\n        $/chain_parent_comment/,\n        $/parent_comment/\n    ) RETURNING *, TO_CHAR(comments.created, 'YYYY-MM-DD\"T\"HH24:MI:SS') as created_string`;\n\nconst pgInstance = pg();\nconst createAddTagsQuery = (tags: string[]) => {\n  const tagsColumn = new pgInstance.helpers.ColumnSet([\"tag\"], {\n    table: \"tags\",\n  });\n  const tagsValues = tags.map((tag) => ({ tag: tag.toLowerCase() }));\n  // NOTE: ON CONFLICT DO NOTHING DOESN'T WORK WITH RETURNING\n  // this means unfortunately that we have to always call select to get\n  // back the tag id.\n  return (\n    pgInstance.helpers.insert(tagsValues, tagsColumn) +\n    \" ON CONFLICT DO NOTHING RETURNING id, tag\"\n  );\n};\n\nconst createAddTagsToPostQuery = (postId: number, tags: string[]) => {\n  const insertTagQuery = `INSERT INTO post_tags(post_id, tag_id) VALUES($/post_id/, (SELECT id FROM tags WHERE tag = $/tag/)) RETURNING $/tag/;`;\n  return pgInstance.helpers.concat(\n    tags.map((tag) => ({\n      query: insertTagQuery,\n      values: {\n        post_id: postId,\n        tag: tag.toLowerCase(),\n      },\n    }))\n  );\n};\n\nconst deleteTagsFromPost = `\n  DELETE FROM post_tags\n  WHERE post_tags.post_id = $/post_id/\n    AND post_tags.tag_id IN (SELECT id FROM tags WHERE tag = ANY($/tags/))\n`;\n\nconst deleteCategoriesFromPost = `\n  DELETE FROM post_categories\n  WHERE post_categories.post_id = $/post_id/\n    AND post_categories.category_id IN (SELECT id FROM categories WHERE category = ANY($/categories/))\n`;\n\nconst deleteContentWarningsFromPost = `\n  DELETE FROM post_warnings\n  WHERE post_warnings.post_id = $/post_id/\n    AND post_warnings.warning_id IN (SELECT id FROM content_warnings WHERE warning = ANY($/warnings/))\n`;\n\nconst updatePostWhisperTags = `\n  UPDATE posts\n    SET whisper_tags = $/whisper_tags/\n  WHERE posts.id = $/post_id/\n`;\n\nconst createAddCategoriesQuery = (categories: string[]) => {\n  const categoriesColumn = new pgInstance.helpers.ColumnSet([\"category\"], {\n    table: \"categories\",\n  });\n  const categoriesValues = categories.map((category) => ({\n    category: category.toLowerCase(),\n  }));\n  // NOTE: ON CONFLICT DO NOTHING DOESN'T WORK WITH RETURNING\n  // this means unfortunately that we have to always call select to get\n  // back the tag id.\n  return (\n    pgInstance.helpers.insert(categoriesValues, categoriesColumn) +\n    \" ON CONFLICT DO NOTHING RETURNING id, category\"\n  );\n};\n\nconst createAddCategoriesToPostQuery = (\n  postId: number,\n  categories: string[]\n) => {\n  const insertCategoryQuery = `\n    INSERT INTO post_categories(post_id, category_id) \n    VALUES($/post_id/, (SELECT id FROM categories WHERE category = $/category/)) \n    RETURNING $/category/;`;\n  return pgInstance.helpers.concat(\n    categories.map((category) => ({\n      query: insertCategoryQuery,\n      values: {\n        post_id: postId,\n        category: category.toLowerCase(),\n      },\n    }))\n  );\n};\n\nconst createAddContentWarningsQuery = (warnings: string[]) => {\n  const warningsColumn = new pgInstance.helpers.ColumnSet([\"warning\"], {\n    table: \"content_warnings\",\n  });\n  const warningsValues = warnings.map((warning) => ({\n    warning: warning.toLowerCase(),\n  }));\n  // NOTE: ON CONFLICT DO NOTHING DOESN'T WORK WITH RETURNING\n  // this means unfortunately that we have to always call select to get\n  // back the tag id.\n  return (\n    pgInstance.helpers.insert(warningsValues, warningsColumn) +\n    \" ON CONFLICT DO NOTHING RETURNING id, warning\"\n  );\n};\n\nconst createAddContentWarningsToPostQuery = (\n  postId: number,\n  warnings: string[]\n) => {\n  const insertWarningQuery = `\n    INSERT INTO post_warnings(post_id, warning_id) \n    VALUES($/post_id/, (SELECT id FROM content_warnings WHERE warning = $/warning/)) \n    RETURNING $/warning/;`;\n  return pgInstance.helpers.concat(\n    warnings.map((warning) => ({\n      query: insertWarningQuery,\n      values: {\n        post_id: postId,\n        warning: warning.toLowerCase(),\n      },\n    }))\n  );\n};\n\nconst getPostIdFromStringId = `\n  SELECT id FROM posts WHERE string_id = $/post_string_id/;\n`;\n\nconst isPostOwner = `\n    SELECT\n      users.firebase_id = $/firebase_id/ as is_post_owner\n    FROM posts\n      LEFT JOIN users ON posts.author = users.id\n    WHERE posts.string_id = $/post_string_id/\n`;\n\nexport default {\n  postByStringId: new QueryFile(path.join(__dirname, \"post-by-string-id.sql\")),\n  getThreadDetails: new QueryFile(\n    path.join(__dirname, \"get-thread-details.sql\")\n  ),\n  getRandomIdentity,\n  getRandomAccessory,\n  makePost,\n  makeComment,\n  addIdentityToThread,\n  addAccessoryToIdentity,\n  createAddTagsQuery,\n  createAddCategoriesQuery,\n  createAddTagsToPostQuery,\n  createAddCategoriesToPostQuery,\n  createAddContentWarningsQuery,\n  createAddContentWarningsToPostQuery,\n  deleteTagsFromPost,\n  deleteCategoriesFromPost,\n  deleteContentWarningsFromPost,\n  updatePostWhisperTags,\n  getPostIdFromStringId,\n  isPostOwner,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dbaa95bf7469a4ca96baa2545d69d3d4e72d4d51","contentHash":"97a50fe4e825ce9dca87f9bd9157b0f23be6f10fe142e3a8642c64bf6304d1f8"},"/Users/esra/projects/programming/bobaserver/server/boards/utils.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/boards/utils.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":86}},"16":{"start":{"line":16,"column":16},"end":{"line":16,"column":35}},"17":{"start":{"line":17,"column":18},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":16},"end":{"line":18,"column":49}},"19":{"start":{"line":19,"column":25},"end":{"line":19,"column":53}},"20":{"start":{"line":20,"column":13},"end":{"line":20,"column":59}},"21":{"start":{"line":21,"column":12},"end":{"line":21,"column":57}},"22":{"start":{"line":25,"column":0},"end":{"line":72,"column":2}},"23":{"start":{"line":27,"column":21},"end":{"line":27,"column":138}},"24":{"start":{"line":27,"column":111},"end":{"line":27,"column":130}},"25":{"start":{"line":28,"column":31},"end":{"line":28,"column":159}},"26":{"start":{"line":28,"column":121},"end":{"line":28,"column":151}},"27":{"start":{"line":29,"column":21},"end":{"line":29,"column":83}},"28":{"start":{"line":29,"column":63},"end":{"line":29,"column":82}},"29":{"start":{"line":30,"column":31},"end":{"line":30,"column":104}},"30":{"start":{"line":30,"column":73},"end":{"line":30,"column":103}},"31":{"start":{"line":32,"column":25},"end":{"line":32,"column":108}},"32":{"start":{"line":32,"column":54},"end":{"line":32,"column":107}},"33":{"start":{"line":32,"column":82},"end":{"line":32,"column":106}},"34":{"start":{"line":34,"column":31},"end":{"line":34,"column":39}},"35":{"start":{"line":36,"column":27},"end":{"line":36,"column":138}},"36":{"start":{"line":36,"column":68},"end":{"line":36,"column":137}},"37":{"start":{"line":36,"column":108},"end":{"line":36,"column":136}},"38":{"start":{"line":37,"column":33},"end":{"line":53,"column":6}},"39":{"start":{"line":38,"column":26},"end":{"line":38,"column":94}},"40":{"start":{"line":38,"column":65},"end":{"line":38,"column":93}},"41":{"start":{"line":41,"column":34},"end":{"line":43,"column":16}},"42":{"start":{"line":42,"column":59},"end":{"line":42,"column":158}},"43":{"start":{"line":42,"column":103},"end":{"line":42,"column":157}},"44":{"start":{"line":46,"column":30},"end":{"line":48,"column":34}},"45":{"start":{"line":47,"column":59},"end":{"line":47,"column":158}},"46":{"start":{"line":47,"column":103},"end":{"line":47,"column":157}},"47":{"start":{"line":49,"column":8},"end":{"line":52,"column":17}},"48":{"start":{"line":54,"column":4},"end":{"line":71,"column":6}},"49":{"start":{"line":62,"column":49},"end":{"line":62,"column":64}},"50":{"start":{"line":66,"column":53},"end":{"line":66,"column":70}},"51":{"start":{"line":73,"column":0},"end":{"line":98,"column":3}},"52":{"start":{"line":73,"column":54},"end":{"line":98,"column":2}},"53":{"start":{"line":74,"column":4},"end":{"line":80,"column":5}},"54":{"start":{"line":75,"column":28},"end":{"line":75,"column":85}},"55":{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},"56":{"start":{"line":77,"column":12},"end":{"line":77,"column":59}},"57":{"start":{"line":78,"column":12},"end":{"line":78,"column":43}},"58":{"start":{"line":81,"column":18},"end":{"line":84,"column":6}},"59":{"start":{"line":85,"column":4},"end":{"line":85,"column":31}},"60":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"61":{"start":{"line":87,"column":8},"end":{"line":87,"column":15}},"62":{"start":{"line":89,"column":26},"end":{"line":92,"column":6}},"63":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"64":{"start":{"line":94,"column":8},"end":{"line":94,"column":91}},"65":{"start":{"line":96,"column":4},"end":{"line":96,"column":69}},"66":{"start":{"line":97,"column":4},"end":{"line":97,"column":25}},"67":{"start":{"line":99,"column":0},"end":{"line":107,"column":3}},"68":{"start":{"line":99,"column":52},"end":{"line":107,"column":2}},"69":{"start":{"line":101,"column":26},"end":{"line":101,"column":66}},"70":{"start":{"line":102,"column":4},"end":{"line":102,"column":24}},"71":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"72":{"start":{"line":104,"column":8},"end":{"line":104,"column":28}},"73":{"start":{"line":106,"column":4},"end":{"line":106,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":25,"column":27},"end":{"line":25,"column":28}},"loc":{"start":{"line":25,"column":62},"end":{"line":72,"column":1}},"line":25},"9":{"name":"(anonymous_9)","decl":{"start":{"line":27,"column":101},"end":{"line":27,"column":102}},"loc":{"start":{"line":27,"column":111},"end":{"line":27,"column":130}},"line":27},"10":{"name":"(anonymous_10)","decl":{"start":{"line":28,"column":111},"end":{"line":28,"column":112}},"loc":{"start":{"line":28,"column":121},"end":{"line":28,"column":151}},"line":28},"11":{"name":"(anonymous_11)","decl":{"start":{"line":29,"column":53},"end":{"line":29,"column":54}},"loc":{"start":{"line":29,"column":63},"end":{"line":29,"column":82}},"line":29},"12":{"name":"(anonymous_12)","decl":{"start":{"line":30,"column":63},"end":{"line":30,"column":64}},"loc":{"start":{"line":30,"column":73},"end":{"line":30,"column":103}},"line":30},"13":{"name":"(anonymous_13)","decl":{"start":{"line":32,"column":41},"end":{"line":32,"column":42}},"loc":{"start":{"line":32,"column":54},"end":{"line":32,"column":107}},"line":32},"14":{"name":"(anonymous_14)","decl":{"start":{"line":32,"column":69},"end":{"line":32,"column":70}},"loc":{"start":{"line":32,"column":82},"end":{"line":32,"column":106}},"line":32},"15":{"name":"(anonymous_15)","decl":{"start":{"line":36,"column":53},"end":{"line":36,"column":54}},"loc":{"start":{"line":36,"column":68},"end":{"line":36,"column":137}},"line":36},"16":{"name":"(anonymous_16)","decl":{"start":{"line":36,"column":93},"end":{"line":36,"column":94}},"loc":{"start":{"line":36,"column":108},"end":{"line":36,"column":136}},"line":36},"17":{"name":"(anonymous_17)","decl":{"start":{"line":37,"column":56},"end":{"line":37,"column":57}},"loc":{"start":{"line":37,"column":71},"end":{"line":53,"column":5}},"line":37},"18":{"name":"(anonymous_18)","decl":{"start":{"line":38,"column":50},"end":{"line":38,"column":51}},"loc":{"start":{"line":38,"column":65},"end":{"line":38,"column":93}},"line":38},"19":{"name":"(anonymous_19)","decl":{"start":{"line":42,"column":42},"end":{"line":42,"column":43}},"loc":{"start":{"line":42,"column":59},"end":{"line":42,"column":158}},"line":42},"20":{"name":"(anonymous_20)","decl":{"start":{"line":42,"column":86},"end":{"line":42,"column":87}},"loc":{"start":{"line":42,"column":103},"end":{"line":42,"column":157}},"line":42},"21":{"name":"(anonymous_21)","decl":{"start":{"line":47,"column":42},"end":{"line":47,"column":43}},"loc":{"start":{"line":47,"column":59},"end":{"line":47,"column":158}},"line":47},"22":{"name":"(anonymous_22)","decl":{"start":{"line":47,"column":86},"end":{"line":47,"column":87}},"loc":{"start":{"line":47,"column":103},"end":{"line":47,"column":157}},"line":47},"23":{"name":"(anonymous_23)","decl":{"start":{"line":62,"column":38},"end":{"line":62,"column":39}},"loc":{"start":{"line":62,"column":49},"end":{"line":62,"column":64}},"line":62},"24":{"name":"(anonymous_24)","decl":{"start":{"line":66,"column":40},"end":{"line":66,"column":41}},"loc":{"start":{"line":66,"column":53},"end":{"line":66,"column":70}},"line":66},"25":{"name":"(anonymous_25)","decl":{"start":{"line":73,"column":27},"end":{"line":73,"column":28}},"loc":{"start":{"line":73,"column":54},"end":{"line":98,"column":2}},"line":73},"26":{"name":"(anonymous_26)","decl":{"start":{"line":73,"column":88},"end":{"line":73,"column":89}},"loc":{"start":{"line":73,"column":101},"end":{"line":98,"column":1}},"line":73},"27":{"name":"(anonymous_27)","decl":{"start":{"line":99,"column":25},"end":{"line":99,"column":26}},"loc":{"start":{"line":99,"column":52},"end":{"line":107,"column":2}},"line":99},"28":{"name":"(anonymous_28)","decl":{"start":{"line":99,"column":86},"end":{"line":99,"column":87}},"loc":{"start":{"line":99,"column":99},"end":{"line":107,"column":1}},"line":99}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":27,"column":21},"end":{"line":27,"column":138}},"type":"binary-expr","locations":[{"start":{"line":27,"column":22},"end":{"line":27,"column":131}},{"start":{"line":27,"column":136},"end":{"line":27,"column":138}}],"line":27},"9":{"loc":{"start":{"line":27,"column":22},"end":{"line":27,"column":131}},"type":"cond-expr","locations":[{"start":{"line":27,"column":82},"end":{"line":27,"column":88}},{"start":{"line":27,"column":91},"end":{"line":27,"column":131}}],"line":27},"10":{"loc":{"start":{"line":27,"column":22},"end":{"line":27,"column":79}},"type":"binary-expr","locations":[{"start":{"line":27,"column":22},"end":{"line":27,"column":62}},{"start":{"line":27,"column":66},"end":{"line":27,"column":79}}],"line":27},"11":{"loc":{"start":{"line":28,"column":31},"end":{"line":28,"column":159}},"type":"binary-expr","locations":[{"start":{"line":28,"column":32},"end":{"line":28,"column":152}},{"start":{"line":28,"column":157},"end":{"line":28,"column":159}}],"line":28},"12":{"loc":{"start":{"line":28,"column":32},"end":{"line":28,"column":152}},"type":"cond-expr","locations":[{"start":{"line":28,"column":92},"end":{"line":28,"column":98}},{"start":{"line":28,"column":101},"end":{"line":28,"column":152}}],"line":28},"13":{"loc":{"start":{"line":28,"column":32},"end":{"line":28,"column":89}},"type":"binary-expr","locations":[{"start":{"line":28,"column":32},"end":{"line":28,"column":72}},{"start":{"line":28,"column":76},"end":{"line":28,"column":89}}],"line":28},"14":{"loc":{"start":{"line":41,"column":34},"end":{"line":43,"column":16}},"type":"cond-expr","locations":[{"start":{"line":42,"column":14},"end":{"line":42,"column":159}},{"start":{"line":43,"column":14},"end":{"line":43,"column":16}}],"line":41},"15":{"loc":{"start":{"line":46,"column":30},"end":{"line":48,"column":34}},"type":"cond-expr","locations":[{"start":{"line":47,"column":14},"end":{"line":47,"column":159}},{"start":{"line":48,"column":14},"end":{"line":48,"column":34}}],"line":46},"16":{"loc":{"start":{"line":55,"column":21},"end":{"line":57,"column":23}},"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":46}},{"start":{"line":57,"column":14},"end":{"line":57,"column":23}}],"line":55},"17":{"loc":{"start":{"line":58,"column":17},"end":{"line":60,"column":23}},"type":"cond-expr","locations":[{"start":{"line":59,"column":14},"end":{"line":59,"column":33}},{"start":{"line":60,"column":14},"end":{"line":60,"column":23}}],"line":58},"18":{"loc":{"start":{"line":74,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":80,"column":5}},{"start":{"line":74,"column":4},"end":{"line":80,"column":5}}],"line":74},"19":{"loc":{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},{"start":{"line":76,"column":8},"end":{"line":79,"column":9}}],"line":76},"20":{"loc":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},{"start":{"line":86,"column":4},"end":{"line":88,"column":5}}],"line":86},"21":{"loc":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},{"start":{"line":93,"column":4},"end":{"line":95,"column":5}}],"line":93},"22":{"loc":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},{"start":{"line":103,"column":4},"end":{"line":105,"column":5}}],"line":103}},"s":{"0":1,"1":13,"2":5,"3":8,"4":13,"5":13,"6":0,"7":0,"8":0,"9":0,"10":21,"11":8,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":5,"25":1,"26":5,"27":1,"28":5,"29":1,"30":5,"31":1,"32":2,"33":4,"34":1,"35":1,"36":3,"37":5,"38":1,"39":2,"40":5,"41":2,"42":6,"43":11,"44":2,"45":6,"46":13,"47":2,"48":1,"49":0,"50":1,"51":1,"52":5,"53":5,"54":5,"55":5,"56":0,"57":0,"58":5,"59":5,"60":5,"61":0,"62":5,"63":5,"64":5,"65":5,"66":5,"67":1,"68":3,"69":3,"70":3,"71":3,"72":1,"73":2},"f":{"0":8,"1":13,"2":5,"3":8,"4":13,"5":0,"6":21,"7":1,"8":1,"9":5,"10":5,"11":5,"12":5,"13":2,"14":4,"15":3,"16":5,"17":2,"18":5,"19":6,"20":11,"21":6,"22":13,"23":0,"24":1,"25":5,"26":5,"27":3,"28":3},"b":{"0":[1,1,1],"1":[8,5],"2":[8,8],"3":[8,13],"4":[8,8],"5":[1,1,1],"6":[0,1],"7":[1,1],"8":[1,0],"9":[0,1],"10":[1,1],"11":[1,0],"12":[0,1],"13":[1,1],"14":[2,0],"15":[2,0],"16":[1,0],"17":[1,0],"18":[5,0],"19":[0,5],"20":[0,5],"21":[5,0],"22":[1,2]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/boards/utils.ts","sources":["/Users/esra/projects/programming/bobaserver/server/boards/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { BoardDescription, DbBoardMetadata } from \"../../Types\";\nimport { cache, CacheKeys } from \"../cache\";\nimport { getBoardBySlug } from \"./queries\";\nimport debug from \"debug\";\nimport { processBoardMetadata } from \"../response-utils\";\nconst info = debug(\"bobaserver:board:utils-info\");\nconst log = debug(\"bobaserver:board:utils-log\");\n\n/**\n * Returns a delta between the old metadata of a Board and the new one.\n */\nexport const getMetadataDelta = ({\n  oldMetadata,\n  newMetadata,\n}: {\n  oldMetadata: Partial<DbBoardMetadata>;\n  newMetadata: Partial<DbBoardMetadata>;\n}): {\n  tagline?: string;\n  accentColor?: string;\n  texts: {\n    deleted: { id: string }[];\n    newAndUpdated: BoardDescription[];\n  };\n  categoryFilters: {\n    deleted: { id: string }[];\n    newAndUpdated: {\n      id: string;\n      index: number;\n      title: string;\n      type: \"text\" | \"category_filter\";\n      description?: string;\n      categories: {\n        deleted: string[];\n        new: string[];\n      };\n    }[];\n  };\n} => {\n  const oldTexts =\n    oldMetadata.descriptions?.filter((desc) => desc.type == \"text\") || [];\n  const oldCategoryFilters =\n    oldMetadata.descriptions?.filter(\n      (desc) => desc.type == \"category_filter\"\n    ) || [];\n  const newTexts = newMetadata.descriptions.filter(\n    (desc) => desc.type == \"text\"\n  );\n  const newCategoryFilters = newMetadata.descriptions.filter(\n    (desc) => desc.type == \"category_filter\"\n  );\n\n  // Deleted texts will be in oldTexts but not newTexts\n  const deletedTexts = oldTexts.filter(\n    (oldText) => !newTexts.some((newText) => newText.id == oldText.id)\n  );\n  // There's no special handling needed for new and updated texts.\n  const newAndUpdatedTexts = newTexts;\n\n  // Deleted filters will be in oldCategoryFilters but not newCategoryFilters\n  const deletedFilters = oldCategoryFilters.filter(\n    (oldFilter) =>\n      !newCategoryFilters.some((newFilter) => newFilter.id == oldFilter.id)\n  );\n\n  const newAndUpdatedFilters = newCategoryFilters.map((newFilter) => {\n    const oldFilter = oldCategoryFilters.find(\n      (oldFilter) => oldFilter.id == newFilter.id\n    );\n\n    // Deleted categories will be in oldFilter's but not newFilter's.\n    // If there's no oldFilter, by definition nothing will have been deleted.\n    const deletedCategories = oldFilter\n      ? oldFilter.categories.filter(\n          (oldCategory) =>\n            !newFilter.categories.some(\n              (newCategory) =>\n                oldCategory.toLowerCase() == newCategory.toLowerCase()\n            )\n        )\n      : [];\n\n    // New categories will be in newFilter's but not oldFilter's.\n    // If there's no oldFilter, by definition everything will be new\n    const newCategories = oldFilter\n      ? newFilter.categories.filter(\n          (newCategory) =>\n            !oldFilter.categories.some(\n              (oldCategory) =>\n                oldCategory.toLowerCase() == newCategory.toLowerCase()\n            )\n        )\n      : newFilter.categories;\n\n    return {\n      ...newFilter,\n      categories: {\n        deleted: deletedCategories,\n        new: newCategories,\n      },\n    };\n  });\n\n  return {\n    accentColor:\n      oldMetadata.settings.accentColor != newMetadata.settings.accentColor\n        ? newMetadata.settings.accentColor\n        : undefined,\n    tagline:\n      oldMetadata.tagline != newMetadata.tagline\n        ? newMetadata.tagline\n        : undefined,\n    texts: {\n      deleted: deletedTexts.map((text) => ({ id: text.id })),\n      newAndUpdated: newAndUpdatedTexts,\n    },\n    categoryFilters: {\n      deleted: deletedFilters.map((filter) => ({ id: filter.id })),\n      // TODO: type this correctly\n      // @ts-ignore\n      newAndUpdated: newAndUpdatedFilters,\n    },\n  };\n};\n\nexport const getBoardMetadata = async ({\n  slug,\n  firebaseId,\n}: {\n  slug: string;\n  firebaseId?: string;\n}) => {\n  if (!firebaseId) {\n    const cachedBoard = await cache().hget(CacheKeys.BOARD, slug);\n    if (cachedBoard) {\n      log(`Found cached metadata for board ${slug}`);\n      return JSON.parse(cachedBoard);\n    }\n  }\n\n  const board = await getBoardBySlug({\n    firebaseId,\n    slug,\n  });\n  info(`Found board`, board);\n\n  if (!board) {\n    return;\n  }\n\n  const boardMetadata = processBoardMetadata({\n    metadata: board,\n    isLoggedIn: !!firebaseId,\n  });\n  if (!firebaseId) {\n    cache().hset(CacheKeys.BOARD, slug, JSON.stringify(boardMetadata));\n  }\n  log(`Processed board metadata (${slug}) for user ${firebaseId}`);\n  return boardMetadata;\n};\n\nexport const canAccessBoard = async ({\n  slug,\n  firebaseId,\n}: {\n  slug: string;\n  firebaseId?: string;\n}) => {\n  // We use the logged out one because it hits cache.\n  const boardMetadata = await getBoardMetadata({ slug });\n  info(boardMetadata);\n  if (boardMetadata.loggedInOnly) {\n    return !!firebaseId;\n  }\n  return true;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"daf9f50820a77b334452fa5bbab59cbe265cd89c","contentHash":"889a787f5cff257d0e5559134116152c9c487861026c63d1c2510e9af7aa2533"},"/Users/esra/projects/programming/bobaserver/server/cache.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/cache.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":63}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":32}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":30}},"7":{"start":{"line":10,"column":14},"end":{"line":10,"column":55}},"8":{"start":{"line":11,"column":12},"end":{"line":11,"column":51}},"9":{"start":{"line":12,"column":13},"end":{"line":12,"column":53}},"10":{"start":{"line":14,"column":0},"end":{"line":40,"column":2}},"11":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":15}},"13":{"start":{"line":19,"column":4},"end":{"line":22,"column":5}},"14":{"start":{"line":20,"column":8},"end":{"line":20,"column":38}},"15":{"start":{"line":21,"column":8},"end":{"line":21,"column":15}},"16":{"start":{"line":23,"column":22},"end":{"line":23,"column":100}},"17":{"start":{"line":24,"column":4},"end":{"line":24,"column":42}},"18":{"start":{"line":25,"column":4},"end":{"line":25,"column":118}},"19":{"start":{"line":26,"column":4},"end":{"line":28,"column":7}},"20":{"start":{"line":27,"column":8},"end":{"line":27,"column":50}},"21":{"start":{"line":29,"column":4},"end":{"line":31,"column":7}},"22":{"start":{"line":30,"column":8},"end":{"line":30,"column":41}},"23":{"start":{"line":32,"column":4},"end":{"line":39,"column":6}},"24":{"start":{"line":41,"column":0},"end":{"line":41,"column":29}},"25":{"start":{"line":41,"column":22},"end":{"line":41,"column":28}},"26":{"start":{"line":43,"column":0},"end":{"line":54,"column":62}},"27":{"start":{"line":45,"column":4},"end":{"line":45,"column":35}},"28":{"start":{"line":47,"column":4},"end":{"line":47,"column":33}},"29":{"start":{"line":49,"column":4},"end":{"line":49,"column":35}},"30":{"start":{"line":51,"column":4},"end":{"line":51,"column":47}},"31":{"start":{"line":53,"column":4},"end":{"line":53,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":20},"end":{"line":14,"column":21}},"loc":{"start":{"line":14,"column":44},"end":{"line":40,"column":1}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":30},"end":{"line":26,"column":31}},"loc":{"start":{"line":26,"column":36},"end":{"line":28,"column":5}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":28},"end":{"line":29,"column":29}},"loc":{"start":{"line":29,"column":37},"end":{"line":31,"column":5}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":16},"end":{"line":41,"column":17}},"loc":{"start":{"line":41,"column":22},"end":{"line":41,"column":28}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":43,"column":1},"end":{"line":43,"column":2}},"loc":{"start":{"line":43,"column":22},"end":{"line":54,"column":1}},"line":43}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},{"start":{"line":15,"column":4},"end":{"line":17,"column":5}}],"line":15},"4":{"loc":{"start":{"line":19,"column":4},"end":{"line":22,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":22,"column":5}},{"start":{"line":19,"column":4},"end":{"line":22,"column":5}}],"line":19},"5":{"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":60}},"type":"binary-expr","locations":[{"start":{"line":54,"column":15},"end":{"line":54,"column":32}},{"start":{"line":54,"column":37},"end":{"line":54,"column":59}}],"line":54}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/cache.ts","sources":["/Users/esra/projects/programming/bobaserver/server/cache.ts"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAE1B,iCAAkD;AAClD,+BAAiC;AAEjC,MAAM,KAAK,GAAG,eAAK,CAAC,wBAAwB,CAAC,CAAC;AAC9C,MAAM,GAAG,GAAG,eAAK,CAAC,sBAAsB,CAAC,CAAC;AAC1C,MAAM,IAAI,GAAG,eAAK,CAAC,uBAAuB,CAAC,CAAC;AAE5C,IAAI,MAOH,CAAC;AAEW,QAAA,SAAS,GAAG,CAAC,kBAAwB,EAAE,EAAE;IACpD,IAAI,MAAM,EAAE;QACV,OAAO;KACR;IACD,mEAAmE;IACnE,IAAI,kBAAkB,EAAE;QACtB,MAAM,GAAG,kBAAkB,EAAE,CAAC;QAC9B,OAAO;KACR;IACD,IAAI,WAAW,GAAgB,oBAAY,CACzC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAChC,OAAO,CAAC,GAAG,CAAC,UAAU,CACvB,CAAC;IACF,GAAG,CAAC,gCAAgC,CAAC,CAAC;IACtC,GAAG,CACD,iDAAiD,OAAO,CAAC,GAAG,CAAC,UAAU,aAAa,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,CAC7G,CAAC;IAEF,WAAW,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;QAC7B,GAAG,CAAC,oCAAoC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IACH,WAAW,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;QAC9B,KAAK,CAAC,yBAAyB,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,MAAM,GAAG;QACP,GAAG,EAAE,gBAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QACjD,GAAG,EAAE,gBAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QACjD,GAAG,EAAE,gBAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QACjD,IAAI,EAAE,gBAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QACnD,IAAI,EAAE,gBAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QACnD,IAAI,EAAE,gBAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;KACpD,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,KAAK,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;AAElC,IAAY,SAWX;AAXD,WAAY,SAAS;IACnB,mBAAmB;IACnB,8BAAiB,CAAA;IACjB,8DAA8D;IAC9D,4BAAe,CAAA;IACf,2DAA2D;IAC3D,8BAAiB,CAAA;IACjB,uEAAuE;IACvE,0CAA6B,CAAA;IAC7B,gEAAgE;IAChE,0BAAa,CAAA;AACf,CAAC,EAXW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAWpB","sourcesContent":["import debug from \"debug\";\n\nimport { createClient, RedisClient } from \"redis\";\nimport { promisify } from \"util\";\n\nconst error = debug(\"bobaserver:cache-error\");\nconst log = debug(\"bobaserver:cache-log\");\nconst info = debug(\"bobaserver:cache-info\");\n\nlet client: {\n  set: (key: CacheKeys, value: string) => Promise<void>;\n  get: (key: CacheKeys) => Promise<string>;\n  del: (key: CacheKeys) => Promise<void>;\n  hset: (key: CacheKeys, objectKey: string, value: string) => Promise<void>;\n  hget: (key: CacheKeys, objectKey: string) => Promise<string>;\n  hdel: (key: CacheKeys, objectKey: string) => Promise<void>;\n};\n\nexport const initCache = (createClientMethod?: any) => {\n  if (client) {\n    return;\n  }\n  // This is mostly used for testing so we can pass stubbed instances\n  if (createClientMethod) {\n    client = createClientMethod();\n    return;\n  }\n  let innerClient: RedisClient = createClient(\n    parseInt(process.env.REDIS_PORT),\n    process.env.REDIS_HOST\n  );\n  log(`Attempting cache connection...`);\n  log(\n    `Attempting connection to redis client on host ${process.env.REDIS_HOST} and port ${process.env.REDIS_PORT}`\n  );\n\n  innerClient.on(\"connect\", () => {\n    log(\"You are now connected to the cache\");\n  });\n  innerClient.on(\"error\", (err) => {\n    error(\"Redis connection failed\");\n  });\n\n  client = {\n    set: promisify(innerClient.set).bind(innerClient),\n    get: promisify(innerClient.get).bind(innerClient),\n    del: promisify(innerClient.del).bind(innerClient),\n    hset: promisify(innerClient.hset).bind(innerClient),\n    hget: promisify(innerClient.hget).bind(innerClient),\n    hdel: promisify(innerClient.hdel).bind(innerClient),\n  };\n};\n\nexport const cache = () => client;\n\nexport enum CacheKeys {\n  // All boards data.\n  BOARDS = \"BOARDS\",\n  // Data pertaining to a single board, keyed by the board slug.\n  BOARD = \"BOARD\",\n  // Data pertaining to a thread. Cached by thread string id.\n  THREAD = \"THREAD\",\n  // Data pertaining to a subscription. Cached by subscription string id.\n  SUBSCRIPTION = \"SUBSCRIPTION\",\n  // Data pertaining to the user, keyed by the user's firebase id.\n  USER = \"USER\",\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0090264f7ebab175525932ac5d1c0685a8651968","contentHash":"defb457f88cbeccb982ac302c19b123ef3d726edde40f80613bd7d7a25258e33"},"/Users/esra/projects/programming/bobaserver/server/response-utils.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/response-utils.ts","statementMap":{"0":{"start":{"line":2,"column":13},"end":{"line":12,"column":1}},"1":{"start":{"line":3,"column":12},"end":{"line":3,"column":14}},"2":{"start":{"line":4,"column":4},"end":{"line":5,"column":20}},"3":{"start":{"line":4,"column":21},"end":{"line":5,"column":20}},"4":{"start":{"line":5,"column":8},"end":{"line":5,"column":20}},"5":{"start":{"line":6,"column":4},"end":{"line":10,"column":9}},"6":{"start":{"line":7,"column":8},"end":{"line":10,"column":9}},"7":{"start":{"line":7,"column":21},"end":{"line":7,"column":22}},"8":{"start":{"line":7,"column":28},"end":{"line":7,"column":59}},"9":{"start":{"line":8,"column":12},"end":{"line":9,"column":34}},"10":{"start":{"line":9,"column":16},"end":{"line":9,"column":34}},"11":{"start":{"line":11,"column":4},"end":{"line":11,"column":13}},"12":{"start":{"line":13,"column":22},"end":{"line":15,"column":1}},"13":{"start":{"line":14,"column":4},"end":{"line":14,"column":62}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"15":{"start":{"line":17,"column":0},"end":{"line":17,"column":243}},"16":{"start":{"line":18,"column":16},"end":{"line":18,"column":49}},"17":{"start":{"line":19,"column":16},"end":{"line":19,"column":35}},"18":{"start":{"line":20,"column":28},"end":{"line":20,"column":58}},"19":{"start":{"line":21,"column":13},"end":{"line":21,"column":62}},"20":{"start":{"line":22,"column":12},"end":{"line":22,"column":61}},"21":{"start":{"line":23,"column":23},"end":{"line":26,"column":1}},"22":{"start":{"line":33,"column":0},"end":{"line":48,"column":2}},"23":{"start":{"line":34,"column":4},"end":{"line":46,"column":7}},"24":{"start":{"line":35,"column":8},"end":{"line":42,"column":9}},"25":{"start":{"line":36,"column":12},"end":{"line":41,"column":13}},"26":{"start":{"line":37,"column":16},"end":{"line":37,"column":52}},"27":{"start":{"line":40,"column":16},"end":{"line":40,"column":58}},"28":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"29":{"start":{"line":44,"column":12},"end":{"line":44,"column":28}},"30":{"start":{"line":47,"column":4},"end":{"line":47,"column":15}},"31":{"start":{"line":50,"column":0},"end":{"line":69,"column":2}},"32":{"start":{"line":51,"column":4},"end":{"line":51,"column":40}},"33":{"start":{"line":52,"column":4},"end":{"line":52,"column":17}},"34":{"start":{"line":53,"column":133},"end":{"line":53,"column":139}},"35":{"start":{"line":53,"column":148},"end":{"line":53,"column":296}},"36":{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},"37":{"start":{"line":56,"column":8},"end":{"line":59,"column":11}},"38":{"start":{"line":61,"column":26},"end":{"line":66,"column":6}},"39":{"start":{"line":67,"column":4},"end":{"line":68,"column":27}},"40":{"start":{"line":70,"column":0},"end":{"line":73,"column":2}},"41":{"start":{"line":72,"column":4},"end":{"line":72,"column":168}},"42":{"start":{"line":72,"column":135},"end":{"line":72,"column":163}},"43":{"start":{"line":74,"column":0},"end":{"line":87,"column":2}},"44":{"start":{"line":76,"column":23},"end":{"line":81,"column":12}},"45":{"start":{"line":82,"column":4},"end":{"line":82,"column":35}},"46":{"start":{"line":83,"column":4},"end":{"line":83,"column":33}},"47":{"start":{"line":84,"column":4},"end":{"line":84,"column":36}},"48":{"start":{"line":85,"column":4},"end":{"line":85,"column":39}},"49":{"start":{"line":86,"column":4},"end":{"line":86,"column":22}},"50":{"start":{"line":88,"column":0},"end":{"line":90,"column":2}},"51":{"start":{"line":89,"column":4},"end":{"line":89,"column":48}},"52":{"start":{"line":91,"column":0},"end":{"line":100,"column":2}},"53":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"54":{"start":{"line":94,"column":8},"end":{"line":94,"column":50}},"55":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"56":{"start":{"line":97,"column":8},"end":{"line":97,"column":50}},"57":{"start":{"line":99,"column":4},"end":{"line":99,"column":128}},"58":{"start":{"line":99,"column":86},"end":{"line":99,"column":126}},"59":{"start":{"line":101,"column":35},"end":{"line":109,"column":1}},"60":{"start":{"line":102,"column":4},"end":{"line":108,"column":6}},"61":{"start":{"line":110,"column":0},"end":{"line":122,"column":2}},"62":{"start":{"line":111,"column":24},"end":{"line":112,"column":190}},"63":{"start":{"line":111,"column":211},"end":{"line":111,"column":247}},"64":{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},"65":{"start":{"line":116,"column":8},"end":{"line":116,"column":66}},"66":{"start":{"line":118,"column":4},"end":{"line":118,"column":49}},"67":{"start":{"line":119,"column":4},"end":{"line":119,"column":53}},"68":{"start":{"line":120,"column":4},"end":{"line":120,"column":44}},"69":{"start":{"line":121,"column":4},"end":{"line":121,"column":53}},"70":{"start":{"line":123,"column":0},"end":{"line":149,"column":2}},"71":{"start":{"line":124,"column":19},"end":{"line":147,"column":6}},"72":{"start":{"line":125,"column":26},"end":{"line":125,"column":31}},"73":{"start":{"line":127,"column":8},"end":{"line":131,"column":98}},"74":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"75":{"start":{"line":136,"column":12},"end":{"line":136,"column":24}},"76":{"start":{"line":138,"column":8},"end":{"line":138,"column":113}},"77":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"78":{"start":{"line":142,"column":12},"end":{"line":142,"column":60}},"79":{"start":{"line":144,"column":8},"end":{"line":144,"column":45}},"80":{"start":{"line":145,"column":8},"end":{"line":145,"column":49}},"81":{"start":{"line":146,"column":8},"end":{"line":146,"column":55}},"82":{"start":{"line":148,"column":4},"end":{"line":148,"column":51}},"83":{"start":{"line":148,"column":36},"end":{"line":148,"column":49}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":38},"end":{"line":2,"column":39}},"loc":{"start":{"line":2,"column":54},"end":{"line":12,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":56},"end":{"line":13,"column":57}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":33,"column":29},"end":{"line":33,"column":30}},"loc":{"start":{"line":33,"column":38},"end":{"line":48,"column":1}},"line":33},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":40},"end":{"line":34,"column":41}},"loc":{"start":{"line":34,"column":49},"end":{"line":46,"column":5}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":50,"column":30},"end":{"line":50,"column":31}},"loc":{"start":{"line":50,"column":42},"end":{"line":69,"column":1}},"line":50},"5":{"name":"(anonymous_5)","decl":{"start":{"line":70,"column":27},"end":{"line":70,"column":28}},"loc":{"start":{"line":70,"column":39},"end":{"line":73,"column":1}},"line":70},"6":{"name":"(anonymous_6)","decl":{"start":{"line":72,"column":125},"end":{"line":72,"column":126}},"loc":{"start":{"line":72,"column":135},"end":{"line":72,"column":163}},"line":72},"7":{"name":"(anonymous_7)","decl":{"start":{"line":74,"column":25},"end":{"line":74,"column":26}},"loc":{"start":{"line":74,"column":35},"end":{"line":87,"column":1}},"line":74},"8":{"name":"(anonymous_8)","decl":{"start":{"line":88,"column":28},"end":{"line":88,"column":29}},"loc":{"start":{"line":88,"column":41},"end":{"line":90,"column":1}},"line":88},"9":{"name":"(anonymous_9)","decl":{"start":{"line":91,"column":34},"end":{"line":91,"column":35}},"loc":{"start":{"line":91,"column":44},"end":{"line":100,"column":1}},"line":91},"10":{"name":"(anonymous_10)","decl":{"start":{"line":99,"column":73},"end":{"line":99,"column":74}},"loc":{"start":{"line":99,"column":86},"end":{"line":99,"column":126}},"line":99},"11":{"name":"(anonymous_11)","decl":{"start":{"line":101,"column":35},"end":{"line":101,"column":36}},"loc":{"start":{"line":101,"column":49},"end":{"line":109,"column":1}},"line":101},"12":{"name":"(anonymous_12)","decl":{"start":{"line":110,"column":31},"end":{"line":110,"column":32}},"loc":{"start":{"line":110,"column":62},"end":{"line":122,"column":1}},"line":110},"13":{"name":"(anonymous_13)","decl":{"start":{"line":111,"column":197},"end":{"line":111,"column":198}},"loc":{"start":{"line":111,"column":211},"end":{"line":111,"column":247}},"line":111},"14":{"name":"(anonymous_14)","decl":{"start":{"line":123,"column":32},"end":{"line":123,"column":33}},"loc":{"start":{"line":123,"column":61},"end":{"line":149,"column":1}},"line":123},"15":{"name":"(anonymous_15)","decl":{"start":{"line":124,"column":30},"end":{"line":124,"column":31}},"loc":{"start":{"line":124,"column":41},"end":{"line":147,"column":5}},"line":124},"16":{"name":"(anonymous_16)","decl":{"start":{"line":148,"column":25},"end":{"line":148,"column":26}},"loc":{"start":{"line":148,"column":36},"end":{"line":148,"column":49}},"line":148}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":13},"end":{"line":12,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":14},"end":{"line":2,"column":18}},{"start":{"line":2,"column":22},"end":{"line":2,"column":33}},{"start":{"line":2,"column":38},"end":{"line":12,"column":1}}],"line":2},"1":{"loc":{"start":{"line":4,"column":21},"end":{"line":5,"column":20}},"type":"if","locations":[{"start":{"line":4,"column":21},"end":{"line":5,"column":20}},{"start":{"line":4,"column":21},"end":{"line":5,"column":20}}],"line":4},"2":{"loc":{"start":{"line":4,"column":25},"end":{"line":4,"column":87}},"type":"binary-expr","locations":[{"start":{"line":4,"column":25},"end":{"line":4,"column":67}},{"start":{"line":4,"column":71},"end":{"line":4,"column":87}}],"line":4},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":10,"column":9}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":10,"column":9}},{"start":{"line":6,"column":4},"end":{"line":10,"column":9}}],"line":6},"4":{"loc":{"start":{"line":6,"column":8},"end":{"line":6,"column":71}},"type":"binary-expr","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":17}},{"start":{"line":6,"column":21},"end":{"line":6,"column":71}}],"line":6},"5":{"loc":{"start":{"line":8,"column":12},"end":{"line":9,"column":34}},"type":"if","locations":[{"start":{"line":8,"column":12},"end":{"line":9,"column":34}},{"start":{"line":8,"column":12},"end":{"line":9,"column":34}}],"line":8},"6":{"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":90}},"type":"binary-expr","locations":[{"start":{"line":8,"column":16},"end":{"line":8,"column":35}},{"start":{"line":8,"column":39},"end":{"line":8,"column":90}}],"line":8},"7":{"loc":{"start":{"line":13,"column":22},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":23},"end":{"line":13,"column":27}},{"start":{"line":13,"column":31},"end":{"line":13,"column":51}},{"start":{"line":13,"column":56},"end":{"line":15,"column":1}}],"line":13},"8":{"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":61}},"type":"cond-expr","locations":[{"start":{"line":14,"column":37},"end":{"line":14,"column":40}},{"start":{"line":14,"column":43},"end":{"line":14,"column":61}}],"line":14},"9":{"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":33}},"type":"binary-expr","locations":[{"start":{"line":14,"column":12},"end":{"line":14,"column":15}},{"start":{"line":14,"column":19},"end":{"line":14,"column":33}}],"line":14},"10":{"loc":{"start":{"line":35,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":42,"column":9}},{"start":{"line":35,"column":8},"end":{"line":42,"column":9}}],"line":35},"11":{"loc":{"start":{"line":36,"column":12},"end":{"line":41,"column":13}},"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":41,"column":13}},{"start":{"line":36,"column":12},"end":{"line":41,"column":13}}],"line":36},"12":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"13":{"loc":{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},{"start":{"line":55,"column":4},"end":{"line":60,"column":5}}],"line":55},"14":{"loc":{"start":{"line":55,"column":8},"end":{"line":55,"column":36}},"type":"binary-expr","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":21}},{"start":{"line":55,"column":25},"end":{"line":55,"column":36}}],"line":55},"15":{"loc":{"start":{"line":72,"column":61},"end":{"line":72,"column":164}},"type":"cond-expr","locations":[{"start":{"line":72,"column":109},"end":{"line":72,"column":115}},{"start":{"line":72,"column":118},"end":{"line":72,"column":164}}],"line":72},"16":{"loc":{"start":{"line":72,"column":61},"end":{"line":72,"column":106}},"type":"binary-expr","locations":[{"start":{"line":72,"column":61},"end":{"line":72,"column":89}},{"start":{"line":72,"column":93},"end":{"line":72,"column":106}}],"line":72},"17":{"loc":{"start":{"line":76,"column":103},"end":{"line":76,"column":204}},"type":"binary-expr","locations":[{"start":{"line":76,"column":104},"end":{"line":76,"column":195}},{"start":{"line":76,"column":200},"end":{"line":76,"column":204}}],"line":76},"18":{"loc":{"start":{"line":76,"column":104},"end":{"line":76,"column":195}},"type":"cond-expr","locations":[{"start":{"line":76,"column":153},"end":{"line":76,"column":159}},{"start":{"line":76,"column":162},"end":{"line":76,"column":195}}],"line":76},"19":{"loc":{"start":{"line":76,"column":104},"end":{"line":76,"column":150}},"type":"binary-expr","locations":[{"start":{"line":76,"column":104},"end":{"line":76,"column":133}},{"start":{"line":76,"column":137},"end":{"line":76,"column":150}}],"line":76},"20":{"loc":{"start":{"line":77,"column":26},"end":{"line":77,"column":49}},"type":"binary-expr","locations":[{"start":{"line":77,"column":26},"end":{"line":77,"column":43}},{"start":{"line":77,"column":47},"end":{"line":77,"column":49}}],"line":77},"21":{"loc":{"start":{"line":78,"column":24},"end":{"line":78,"column":45}},"type":"binary-expr","locations":[{"start":{"line":78,"column":24},"end":{"line":78,"column":39}},{"start":{"line":78,"column":43},"end":{"line":78,"column":45}}],"line":78},"22":{"loc":{"start":{"line":79,"column":27},"end":{"line":79,"column":51}},"type":"binary-expr","locations":[{"start":{"line":79,"column":27},"end":{"line":79,"column":45}},{"start":{"line":79,"column":49},"end":{"line":79,"column":51}}],"line":79},"23":{"loc":{"start":{"line":80,"column":30},"end":{"line":80,"column":57}},"type":"binary-expr","locations":[{"start":{"line":80,"column":30},"end":{"line":80,"column":51}},{"start":{"line":80,"column":55},"end":{"line":80,"column":57}}],"line":80},"24":{"loc":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},{"start":{"line":93,"column":4},"end":{"line":95,"column":5}}],"line":93},"25":{"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":56}},"type":"binary-expr","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":20}},{"start":{"line":93,"column":24},"end":{"line":93,"column":34}},{"start":{"line":93,"column":38},"end":{"line":93,"column":56}}],"line":93},"26":{"loc":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},{"start":{"line":96,"column":4},"end":{"line":98,"column":5}}],"line":96},"27":{"loc":{"start":{"line":96,"column":8},"end":{"line":96,"column":72}},"type":"binary-expr","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":19}},{"start":{"line":96,"column":23},"end":{"line":96,"column":35}},{"start":{"line":96,"column":39},"end":{"line":96,"column":52}},{"start":{"line":96,"column":56},"end":{"line":96,"column":72}}],"line":96},"28":{"loc":{"start":{"line":99,"column":4},"end":{"line":99,"column":127}},"type":"cond-expr","locations":[{"start":{"line":99,"column":53},"end":{"line":99,"column":59}},{"start":{"line":99,"column":62},"end":{"line":99,"column":127}}],"line":99},"29":{"loc":{"start":{"line":99,"column":4},"end":{"line":99,"column":50}},"type":"binary-expr","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":33}},{"start":{"line":99,"column":37},"end":{"line":99,"column":50}}],"line":99},"30":{"loc":{"start":{"line":111,"column":260},"end":{"line":112,"column":91}},"type":"binary-expr","locations":[{"start":{"line":111,"column":260},"end":{"line":111,"column":335}},{"start":{"line":112,"column":12},"end":{"line":112,"column":91}}],"line":111},"31":{"loc":{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},{"start":{"line":115,"column":4},"end":{"line":117,"column":5}}],"line":115},"32":{"loc":{"start":{"line":115,"column":8},"end":{"line":115,"column":49}},"type":"binary-expr","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":19}},{"start":{"line":115,"column":23},"end":{"line":115,"column":49}}],"line":115},"33":{"loc":{"start":{"line":128,"column":12},"end":{"line":131,"column":97}},"type":"binary-expr","locations":[{"start":{"line":128,"column":13},"end":{"line":128,"column":24}},{"start":{"line":129,"column":16},"end":{"line":129,"column":88}},{"start":{"line":130,"column":17},"end":{"line":130,"column":27}},{"start":{"line":131,"column":20},"end":{"line":131,"column":96}}],"line":128},"34":{"loc":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},{"start":{"line":135,"column":8},"end":{"line":137,"column":9}}],"line":135},"35":{"loc":{"start":{"line":135,"column":12},"end":{"line":135,"column":55}},"type":"binary-expr","locations":[{"start":{"line":135,"column":12},"end":{"line":135,"column":32}},{"start":{"line":135,"column":36},"end":{"line":135,"column":55}}],"line":135},"36":{"loc":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},{"start":{"line":141,"column":8},"end":{"line":143,"column":9}}],"line":141},"37":{"loc":{"start":{"line":141,"column":12},"end":{"line":141,"column":51}},"type":"binary-expr","locations":[{"start":{"line":141,"column":12},"end":{"line":141,"column":23}},{"start":{"line":141,"column":27},"end":{"line":141,"column":51}}],"line":141}},"s":{"0":1,"1":8,"2":8,"3":204,"4":148,"5":8,"6":8,"7":8,"8":8,"9":0,"10":0,"11":8,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":22,"24":44,"25":22,"26":12,"27":10,"28":44,"29":22,"30":22,"31":1,"32":8,"33":8,"34":8,"35":8,"36":8,"37":0,"38":8,"39":8,"40":1,"41":1,"42":3,"43":1,"44":3,"45":3,"46":3,"47":3,"48":3,"49":3,"50":1,"51":2,"52":1,"53":4,"54":0,"55":4,"56":0,"57":4,"58":0,"59":1,"60":3,"61":1,"62":5,"63":0,"64":5,"65":2,"66":5,"67":5,"68":5,"69":5,"70":1,"71":1,"72":8,"73":8,"74":8,"75":1,"76":7,"77":7,"78":1,"79":7,"80":7,"81":7,"82":1,"83":8},"f":{"0":8,"1":1,"2":22,"3":44,"4":8,"5":1,"6":3,"7":3,"8":2,"9":4,"10":0,"11":3,"12":5,"13":0,"14":1,"15":8,"16":8},"b":{"0":[1,1,1],"1":[148,56],"2":[204,204],"3":[8,0],"4":[8,8],"5":[0,0],"6":[0,0],"7":[1,1,1],"8":[0,1],"9":[1,1],"10":[22,22],"11":[12,10],"12":[22,22],"13":[0,8],"14":[8,8],"15":[0,1],"16":[1,1],"17":[3,2],"18":[2,1],"19":[3,1],"20":[3,0],"21":[3,0],"22":[3,0],"23":[3,0],"24":[0,4],"25":[4,4,4],"26":[0,4],"27":[4,4,4,4],"28":[4,0],"29":[4,4],"30":[5,5],"31":[2,3],"32":[5,5],"33":[8,8,7,0],"34":[1,7],"35":[8,1],"36":[1,6],"37":[7,7]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/response-utils.ts","sources":["/Users/esra/projects/programming/bobaserver/server/response-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import debug from \"debug\";\nimport {\n  DbPostType,\n  DbThreadType,\n  ServerThreadType,\n  ServerCommentType,\n  ServerPostType,\n  DbCommentType,\n  DbBoardMetadata,\n  restriction_types,\n} from \"../Types\";\nimport { transformPermissions } from \"./permissions-utils\";\n\nconst info = debug(\"bobaserver:response-utils-info\");\nconst log = debug(\"bobaserver::response-utils-log\");\n\nconst TRANSFORM_DICT: { [key: string]: string } = {\n  avatar_reference_id: \"avatarUrl\",\n  avatar: \"avatar\",\n};\n/* Uses TRANSFORM_DICT to look up which keys in an object\n * should have their urls transformed into full paths, and\n * what should be the destination key in the resulting object.\n *\n * Removes the original key from the dict (if different).\n */\nexport const transformImageUrls = (obj: any) => {\n  Object.keys(TRANSFORM_DICT).forEach((key) => {\n    if (obj[key]) {\n      if (obj[key].startsWith(\"http\")) {\n        obj[TRANSFORM_DICT[key]] = obj[key];\n      } else {\n        obj[TRANSFORM_DICT[key]] = `/${obj[key]}`;\n      }\n    }\n    if (key != TRANSFORM_DICT[key]) {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\n\n// Merges the identity contain within a single object (rather than a map).\nexport const mergeObjectIdentity = <T>(\n  object: T & {\n    author: number;\n    username: string;\n    user_avatar: string;\n    secret_identity_name: string;\n    secret_identity_avatar: string;\n    secret_identity_color?: string;\n    accessory_avatar?: string;\n    friend: boolean;\n    self: boolean;\n  }\n): T & {\n  secret_identity: {\n    name: string;\n    avatar: string;\n    color?: string;\n    accessory?: string;\n  };\n  user_identity?: {\n    name: string;\n    avatar: string;\n  };\n} => {\n  info(`Merging activity of object:`);\n  info(object);\n\n  const {\n    author,\n    username,\n    user_avatar,\n    secret_identity_name,\n    secret_identity_avatar,\n    secret_identity_color,\n    accessory_avatar,\n    ...rest\n  } = object;\n  let user_identity;\n  if (object.friend || object.self) {\n    user_identity = transformImageUrls({\n      name: username,\n      avatar: user_avatar,\n    });\n  }\n  let secret_identity = transformImageUrls({\n    name: secret_identity_name,\n    avatar: secret_identity_avatar,\n    color: secret_identity_color,\n    accessory: accessory_avatar,\n  });\n\n  return {\n    ...rest,\n    user_identity,\n    secret_identity,\n  } as any;\n};\n\nexport const makeServerThread = (thread: DbThreadType): ServerThreadType => {\n  return {\n    ...thread,\n    posts: thread.posts?.map((post: DbPostType) => makeServerPost(post)),\n  };\n};\n\nexport const makeServerPost = (post: DbPostType): ServerPostType => {\n  const serverPost = {\n    ...mergeObjectIdentity<DbPostType>(post),\n    comments: post.comments?.map(makeServerComment) || null,\n    tags: {\n      whisper_tags: post.whisper_tags || [],\n      index_tags: post.index_tags || [],\n      category_tags: post.category_tags || [],\n      content_warnings: post.content_warnings || [],\n    },\n  };\n  delete serverPost.whisper_tags;\n  delete serverPost.index_tags;\n  delete serverPost.category_tags;\n  delete serverPost.content_warnings;\n\n  return serverPost;\n};\n\nexport const makeServerComment = (\n  comment: DbCommentType\n): ServerCommentType => {\n  return mergeObjectIdentity<DbCommentType>(comment);\n};\n\nexport const ensureNoIdentityLeakage = (post: any) => {\n  if (!post.friend && !post.self && post.user_identity) {\n    throw Error(\"Identity leakage detected.\");\n  }\n  if (post.author || post.user_id || post.username || post.user_avatar) {\n    throw Error(\"Identity leakage detected.\");\n  }\n  post.comments?.forEach((comment: any) => ensureNoIdentityLeakage(comment));\n};\n\nconst extractLockedBoardMetadata = (metadata: any) => {\n  return {\n    slug: metadata.slug,\n    avatar_reference_id: metadata.avatar_reference_id,\n    tagline: metadata.tagline,\n    settings: metadata.settings,\n    loggedInOnly: metadata.loggedInOnly,\n  };\n};\n\nexport const processBoardMetadata = ({\n  metadata,\n  isLoggedIn,\n}: {\n  metadata: DbBoardMetadata;\n  isLoggedIn: boolean;\n}) => {\n  let finalMetadata = {\n    ...metadata,\n    permissions: transformPermissions(metadata.permissions),\n    postingIdentities: metadata.posting_identities.map((identity: any) =>\n      transformImageUrls(identity)\n    ),\n    delisted:\n      metadata.logged_out_restrictions.includes(restriction_types.DELIST) ||\n      metadata.logged_in_base_restrictions.includes(restriction_types.DELIST),\n    loggedInOnly: metadata.logged_out_restrictions.includes(\n      restriction_types.LOCK_ACCESS\n    ),\n    // TODO: remove this cast\n  } as any;\n  // Remove details from list if the board is locked and the user doesn't have access\n  // (right now we keep only avatar, color & description)\n  if (!isLoggedIn && finalMetadata.loggedInOnly) {\n    finalMetadata = extractLockedBoardMetadata(finalMetadata);\n  }\n\n  delete finalMetadata.logged_out_restrictions;\n  delete finalMetadata.logged_in_base_restrictions;\n  delete finalMetadata.posting_identities;\n\n  return transformImageUrls(finalMetadata);\n};\n\nexport const processBoardsMetadata = ({\n  boards,\n  isLoggedIn,\n}: {\n  boards: any[];\n  isLoggedIn: boolean;\n}) => {\n  const result = boards.map((board: any) => {\n    let boardResult = board;\n\n    // Remove from list if the board shouldn't be visible in the sidebar\n    boardResult.delisted =\n      (!isLoggedIn &&\n        board.logged_out_restrictions.includes(restriction_types.DELIST)) ||\n      (isLoggedIn &&\n        board.logged_in_base_restrictions.includes(restriction_types.DELIST));\n    // Pinned boards should still return their value here, even if delisted.\n    // Note that the existence of a pinned order implies that the user is\n    // logged in.\n    if (boardResult.delisted && !board.pinned_order) {\n      return null;\n    }\n\n    boardResult.loggedInOnly = board.logged_out_restrictions.includes(\n      restriction_types.LOCK_ACCESS\n    );\n\n    // Remove details from list if the board is locked and the user doesn't have access\n    // (right now we keep only avatar, color & description)\n    if (!isLoggedIn && boardResult.loggedInOnly) {\n      boardResult = extractLockedBoardMetadata(board);\n    }\n\n    delete board.logged_out_restrictions;\n    delete board.logged_in_base_restrictions;\n    return transformImageUrls(boardResult);\n  });\n\n  return result.filter((board) => board != null);\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0d5b2e60cf6272c1b1b6bf0d2c8d85779258be8e","contentHash":"451876c072afd6c80c99b7b40d60ed01c706197e92cf36e4af877e2a9aff49c7"},"/Users/esra/projects/programming/bobaserver/Types.ts":{"path":"/Users/esra/projects/programming/bobaserver/Types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":117}},"2":{"start":{"line":5,"column":0},"end":{"line":11,"column":86}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":60}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":90}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":78}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":90}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":94}},"8":{"start":{"line":13,"column":0},"end":{"line":15,"column":86}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":84}},"10":{"start":{"line":17,"column":0},"end":{"line":23,"column":80}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":52}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":61}},"13":{"start":{"line":20,"column":4},"end":{"line":20,"column":63}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":57}},"15":{"start":{"line":22,"column":4},"end":{"line":22,"column":67}},"16":{"start":{"line":25,"column":0},"end":{"line":28,"column":86}},"17":{"start":{"line":26,"column":4},"end":{"line":26,"column":53}},"18":{"start":{"line":27,"column":4},"end":{"line":27,"column":43}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":30},"end":{"line":11,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":1},"end":{"line":13,"column":2}},"loc":{"start":{"line":13,"column":30},"end":{"line":15,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":1},"end":{"line":17,"column":2}},"loc":{"start":{"line":17,"column":28},"end":{"line":23,"column":1}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":1},"end":{"line":25,"column":2}},"loc":{"start":{"line":25,"column":30},"end":{"line":28,"column":1}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":23},"end":{"line":11,"column":84}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":48}},{"start":{"line":11,"column":53},"end":{"line":11,"column":83}}],"line":11},"1":{"loc":{"start":{"line":15,"column":23},"end":{"line":15,"column":84}},"type":"binary-expr","locations":[{"start":{"line":15,"column":23},"end":{"line":15,"column":48}},{"start":{"line":15,"column":53},"end":{"line":15,"column":83}}],"line":15},"2":{"loc":{"start":{"line":23,"column":21},"end":{"line":23,"column":78}},"type":"binary-expr","locations":[{"start":{"line":23,"column":21},"end":{"line":23,"column":44}},{"start":{"line":23,"column":49},"end":{"line":23,"column":77}}],"line":23},"3":{"loc":{"start":{"line":28,"column":23},"end":{"line":28,"column":84}},"type":"binary-expr","locations":[{"start":{"line":28,"column":23},"end":{"line":28,"column":48}},{"start":{"line":28,"column":53},"end":{"line":28,"column":83}}],"line":28}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"f":{"0":1,"1":1,"2":1,"3":1},"b":{"0":[1,1],"1":[1,1],"2":[1,1],"3":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/Types.ts","sources":["/Users/esra/projects/programming/bobaserver/Types.ts"],"names":[],"mappings":";;;AAiLA,IAAY,iBAMX;AAND,WAAY,iBAAiB;IAC3B,uDAAG,CAAA;IACH,qFAAkB,CAAA;IAClB,yEAAY,CAAA;IACZ,qFAAkB,CAAA;IAClB,yFAAoB,CAAA;AACtB,CAAC,EANW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAM5B;AAOD,IAAY,iBAEX;AAFD,WAAY,iBAAiB;IAC3B,+EAAe,CAAA;AACjB,CAAC,EAFW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAE5B;AAED,IAAY,eAMX;AAND,WAAY,eAAe;IACzB,+CAA4B,CAAA;IAC5B,wDAAqC,CAAA;IACrC,0DAAuC,CAAA;IACvC,oDAAiC,CAAA;IACjC,8DAA2C,CAAA;AAC7C,CAAC,EANW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAM1B;AAWD,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IAC3B,gDAA2B,CAAA;IAC3B,sCAAiB,CAAA;AACnB,CAAC,EAHW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAG5B","sourcesContent":["export interface ServerCommentType {\n  comment_id: string;\n  parent_comment: string;\n  secret_identity: {\n    name: string;\n    avatar: string;\n  };\n  user_identity?: {\n    name: string;\n    avatar: string;\n  };\n  accessory_avatar?: string;\n  content: string;\n  created: string;\n  chain_parent_id: string | null;\n}\n\nexport interface ServerPostType {\n  post_id: string;\n  parent_thread_id: string;\n  parent_post_id: string;\n  secret_identity: {\n    name: string;\n    avatar: string;\n    color?: string;\n    accessory?: string;\n  };\n  user_identity?: {\n    name: string;\n    avatar: string;\n  };\n  accessory_avatar?: string;\n  self: boolean;\n  friend: boolean;\n  created: string;\n  content: string;\n  options: {\n    wide?: boolean;\n  };\n  tags?: {\n    index_tags: string[];\n    whisper_tags: string[];\n    category_tags: string[];\n    content_warnings: string[];\n  };\n  comments?: ServerCommentType[];\n  total_comments_amount: number;\n  new_comments_amount: number;\n  is_new: boolean;\n}\n\nexport interface ServerThreadType {\n  posts: ServerPostType[];\n  thread_id: string;\n  board_slug: string;\n  thread_direct_threads_amount: number;\n  thread_new_posts_amount: number;\n  thread_new_comments_amount: number;\n  thread_total_comments_amount: number;\n  thread_total_posts_amount: number;\n  thread_last_activity: string;\n  muted: boolean;\n  default_view: \"thread\" | \"gallery\" | \"timeline\";\n  hidden: boolean;\n}\n\nexport interface DbIdentityType {\n  id: string;\n  username: string;\n  user_avatar_reference_id: string;\n  display_name: string;\n  secret_identity_avatar_reference_id: string;\n  friend: boolean;\n  self: boolean;\n}\n\nexport interface DbPostType {\n  post_id: string;\n  parent_thread_id: string;\n  parent_post_id: string;\n  parent_board_slug: string;\n  author: number;\n  username: string;\n  user_avatar: string;\n  secret_identity_name: string;\n  secret_identity_avatar: string;\n  accessory_avatar?: string;\n  friend: boolean;\n  self: boolean;\n  created: string;\n  content: string;\n  options: {\n    wide?: boolean;\n  };\n  type: string;\n  whisper_tags: string[];\n  index_tags: string[];\n  category_tags: string[];\n  content_warnings: string[];\n  anonymity_type: \"everyone\" | \"strangers\";\n  total_comments_amount: number;\n  new_comments_amount: number;\n  comments: DbCommentType[] | null;\n  is_new: boolean;\n  is_own: boolean;\n}\n\nexport interface DbCommentType {\n  comment_id: string;\n  parent_post: string;\n  parent_comment: string;\n  author: number;\n  username: string;\n  user_avatar: string;\n  secret_identity_name: string;\n  secret_identity_avatar: string;\n  secret_identity_color: string | null;\n  accessory_avatar?: string;\n  chain_parent_id: string | null;\n  friend: boolean;\n  self: boolean;\n  content: string;\n  created: string;\n  anonymity_type: \"everyone\" | \"strangers\";\n  is_new: boolean;\n  is_own: boolean;\n}\n\nexport interface DbThreadType {\n  thread_id: string;\n  board_slug: string;\n  posts: DbPostType[];\n  thread_direct_threads_amount: number;\n  thread_new_posts_amount: number;\n  thread_new_comments_amount: number;\n  thread_total_posts_amount: number;\n  thread_total_comments_amount: number;\n  thread_last_activity: string;\n  default_view: \"thread\" | \"gallery\" | \"timeline\";\n  muted: boolean;\n  hidden: boolean;\n}\n\nexport interface DbActivityThreadType {\n  post_id: string;\n  parent_post_id: null;\n  thread_id: string;\n  board_slug: string;\n  author: number;\n  username: string;\n  user_avatar: string;\n  secret_identity_name: string;\n  secret_identity_avatar: string;\n  accessory_avatar?: string;\n  created: string;\n  content: string;\n  index_tags: string[];\n  whisper_tags: string[];\n  category_tags: string[];\n  content_warnings: string[];\n  muted: boolean;\n  hidden: boolean;\n  options: {\n    wide?: boolean;\n  };\n  posts_amount: number;\n  threads_amount: number;\n  friend: boolean;\n  self: boolean;\n  new_posts_amount: number;\n  new_comments_amount: number;\n  is_new: boolean;\n  comments_amount: number;\n  thread_last_activity: string;\n  default_view: \"thread\" | \"gallery\" | \"timeline\";\n}\n\nexport enum DbRolePermissions {\n  all,\n  edit_board_details,\n  post_as_role,\n  edit_category_tags,\n  edit_content_notices,\n}\n\nexport interface BoardPermissions {\n  canEditBoardData: boolean;\n  postsPermissions: PostPermissions[];\n}\n\nexport enum ThreadPermissions {\n  editDefaultView,\n}\n\nexport enum PostPermissions {\n  editContent = \"edit_content\",\n  editWhisperTags = \"edit_whisper_tags\",\n  editCategoryTags = \"edit_category_tags\",\n  editIndexTags = \"edit_index_tags\",\n  editContentNotices = \"edit_content_notices\",\n}\n\nexport interface BoardDescription {\n  id?: string;\n  index: number;\n  title: string;\n  type: \"text\" | \"category_filter\";\n  description?: string;\n  categories?: string[];\n}\n\nexport enum restriction_types {\n  LOCK_ACCESS = \"lock_access\",\n  DELIST = \"delist\",\n}\n\nexport interface DbBoardMetadata {\n  slug: string;\n  avatarUrl: string;\n  tagline: string;\n  settings: {\n    accentColor: string;\n  };\n  descriptions: BoardDescription[];\n  posting_identities: {\n    id: string;\n    avatar_reference_id: string;\n    color: string | undefined;\n    accessory: string | undefined;\n    name: string;\n  }[];\n  permissions: string[];\n  logged_out_restrictions: restriction_types[];\n  logged_in_base_restrictions: restriction_types[];\n}\n\nexport interface QueryTagsType {\n  whisperTags: string[];\n  indexTags: string[];\n  categoryTags: string[];\n  contentWarnings: string[];\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eb75381237812a894ba037c2c1bf26e6257dd163","contentHash":"ce71b41ee4fff0e99619ec5b2cac0b9c625644a509c66a17fb77d11bf8ecd0a4"},"/Users/esra/projects/programming/bobaserver/server/permissions-utils.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/permissions-utils.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":164}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":35}},"6":{"start":{"line":9,"column":12},"end":{"line":9,"column":64}},"7":{"start":{"line":10,"column":0},"end":{"line":13,"column":2}},"8":{"start":{"line":11,"column":4},"end":{"line":12,"column":82}},"9":{"start":{"line":11,"column":35},"end":{"line":12,"column":80}},"10":{"start":{"line":14,"column":0},"end":{"line":18,"column":2}},"11":{"start":{"line":15,"column":4},"end":{"line":17,"column":82}},"12":{"start":{"line":15,"column":35},"end":{"line":17,"column":80}},"13":{"start":{"line":19,"column":0},"end":{"line":23,"column":2}},"14":{"start":{"line":20,"column":4},"end":{"line":22,"column":82}},"15":{"start":{"line":20,"column":35},"end":{"line":22,"column":80}},"16":{"start":{"line":24,"column":0},"end":{"line":33,"column":2}},"17":{"start":{"line":25,"column":29},"end":{"line":25,"column":31}},"18":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"19":{"start":{"line":27,"column":8},"end":{"line":27,"column":72}},"20":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"21":{"start":{"line":30,"column":8},"end":{"line":30,"column":74}},"22":{"start":{"line":32,"column":4},"end":{"line":32,"column":28}},"23":{"start":{"line":34,"column":0},"end":{"line":40,"column":2}},"24":{"start":{"line":35,"column":4},"end":{"line":35,"column":71}},"25":{"start":{"line":36,"column":4},"end":{"line":39,"column":6}},"26":{"start":{"line":41,"column":0},"end":{"line":58,"column":2}},"27":{"start":{"line":42,"column":37},"end":{"line":43,"column":52}},"28":{"start":{"line":44,"column":31},"end":{"line":45,"column":46}},"29":{"start":{"line":46,"column":34},"end":{"line":47,"column":49}},"30":{"start":{"line":48,"column":33},"end":{"line":49,"column":48}},"31":{"start":{"line":50,"column":4},"end":{"line":57,"column":77}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":24},"end":{"line":10,"column":25}},"loc":{"start":{"line":10,"column":53},"end":{"line":13,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":28},"end":{"line":11,"column":29}},"loc":{"start":{"line":11,"column":35},"end":{"line":12,"column":80}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":23},"end":{"line":14,"column":24}},"loc":{"start":{"line":14,"column":40},"end":{"line":18,"column":1}},"line":14},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":28},"end":{"line":15,"column":29}},"loc":{"start":{"line":15,"column":35},"end":{"line":17,"column":80}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":19,"column":20},"end":{"line":19,"column":21}},"loc":{"start":{"line":19,"column":37},"end":{"line":23,"column":1}},"line":19},"6":{"name":"(anonymous_6)","decl":{"start":{"line":20,"column":28},"end":{"line":20,"column":29}},"loc":{"start":{"line":20,"column":35},"end":{"line":22,"column":80}},"line":20},"7":{"name":"(anonymous_7)","decl":{"start":{"line":24,"column":35},"end":{"line":24,"column":36}},"loc":{"start":{"line":24,"column":52},"end":{"line":33,"column":1}},"line":24},"8":{"name":"(anonymous_8)","decl":{"start":{"line":34,"column":31},"end":{"line":34,"column":32}},"loc":{"start":{"line":34,"column":48},"end":{"line":40,"column":1}},"line":34},"9":{"name":"(anonymous_9)","decl":{"start":{"line":41,"column":24},"end":{"line":41,"column":25}},"loc":{"start":{"line":41,"column":52},"end":{"line":58,"column":1}},"line":41}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":11,"column":35},"end":{"line":12,"column":80}},"type":"binary-expr","locations":[{"start":{"line":11,"column":35},"end":{"line":11,"column":88}},{"start":{"line":12,"column":8},"end":{"line":12,"column":80}}],"line":11},"4":{"loc":{"start":{"line":15,"column":35},"end":{"line":17,"column":80}},"type":"binary-expr","locations":[{"start":{"line":15,"column":35},"end":{"line":16,"column":63}},{"start":{"line":17,"column":8},"end":{"line":17,"column":80}}],"line":15},"5":{"loc":{"start":{"line":20,"column":35},"end":{"line":22,"column":80}},"type":"binary-expr","locations":[{"start":{"line":20,"column":35},"end":{"line":21,"column":57}},{"start":{"line":22,"column":8},"end":{"line":22,"column":80}}],"line":20},"6":{"loc":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},{"start":{"line":26,"column":4},"end":{"line":28,"column":5}}],"line":26},"7":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{"line":29,"column":4},"end":{"line":31,"column":5}}],"line":29},"8":{"loc":{"start":{"line":42,"column":37},"end":{"line":43,"column":52}},"type":"binary-expr","locations":[{"start":{"line":42,"column":37},"end":{"line":42,"column":79}},{"start":{"line":43,"column":8},"end":{"line":43,"column":52}}],"line":42},"9":{"loc":{"start":{"line":44,"column":31},"end":{"line":45,"column":46}},"type":"binary-expr","locations":[{"start":{"line":44,"column":31},"end":{"line":44,"column":67}},{"start":{"line":45,"column":8},"end":{"line":45,"column":46}}],"line":44},"10":{"loc":{"start":{"line":46,"column":34},"end":{"line":47,"column":49}},"type":"binary-expr","locations":[{"start":{"line":46,"column":34},"end":{"line":46,"column":73}},{"start":{"line":47,"column":8},"end":{"line":47,"column":49}}],"line":46},"11":{"loc":{"start":{"line":48,"column":33},"end":{"line":49,"column":48}},"type":"binary-expr","locations":[{"start":{"line":48,"column":33},"end":{"line":48,"column":71}},{"start":{"line":49,"column":8},"end":{"line":49,"column":48}}],"line":48},"12":{"loc":{"start":{"line":50,"column":13},"end":{"line":57,"column":75}},"type":"binary-expr","locations":[{"start":{"line":50,"column":14},"end":{"line":50,"column":38}},{"start":{"line":51,"column":8},"end":{"line":51,"column":73}},{"start":{"line":52,"column":9},"end":{"line":52,"column":27}},{"start":{"line":53,"column":12},"end":{"line":53,"column":72}},{"start":{"line":54,"column":9},"end":{"line":54,"column":30}},{"start":{"line":55,"column":12},"end":{"line":55,"column":75}},{"start":{"line":56,"column":9},"end":{"line":56,"column":29}},{"start":{"line":57,"column":12},"end":{"line":57,"column":74}}],"line":50}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":10,"9":0,"10":1,"11":5,"12":0,"13":1,"14":0,"15":0,"16":1,"17":5,"18":5,"19":0,"20":5,"21":0,"22":5,"23":1,"24":5,"25":5,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0},"f":{"0":1,"1":10,"2":0,"3":5,"4":0,"5":0,"6":0,"7":5,"8":5,"9":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,5],"7":[0,5],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0,0,0,0,0]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/permissions-utils.ts","sources":["/Users/esra/projects/programming/bobaserver/server/permissions-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import debug from \"debug\";\n\nimport {\n  DbRolePermissions,\n  BoardPermissions,\n  QueryTagsType,\n  PostPermissions,\n} from \"../Types\";\n\nconst log = debug(\"bobaserver::permissions-utils-log\");\n\nexport const hasPermission = (\n  permission: DbRolePermissions,\n  permissions?: string[]\n) => {\n  return permissions.some(\n    (p) =>\n      (<any>DbRolePermissions)[p] == permission.toString() ||\n      (<any>DbRolePermissions)[p] == DbRolePermissions.all.toString()\n  );\n};\n\nexport const canEditBoard = (permissions?: string[]) => {\n  return permissions.some(\n    (p) =>\n      (<any>DbRolePermissions)[p] ==\n        DbRolePermissions.edit_board_details.toString() ||\n      (<any>DbRolePermissions)[p] == DbRolePermissions.all.toString()\n  );\n};\n\nexport const canPostAs = (permissions?: string[]) => {\n  return permissions.some(\n    (p) =>\n      (<any>DbRolePermissions)[p] ==\n        DbRolePermissions.post_as_role.toString() ||\n      (<any>DbRolePermissions)[p] == DbRolePermissions.all.toString()\n  );\n};\n\nexport const transformPostPermissions = (permissions?: string[]) => {\n  const postsPermissions = [];\n  if (hasPermission(DbRolePermissions.edit_category_tags, permissions)) {\n    postsPermissions.push(PostPermissions.editCategoryTags);\n  }\n  if (hasPermission(DbRolePermissions.edit_content_notices, permissions)) {\n    postsPermissions.push(PostPermissions.editContentNotices);\n  }\n  return postsPermissions;\n};\n\nexport const transformPermissions = (\n  permissions?: string[]\n): BoardPermissions => {\n  log(`Transforming the following user permissions: ${permissions}`);\n\n  return {\n    canEditBoardData: canEditBoard(permissions),\n    postsPermissions: transformPostPermissions(permissions),\n  };\n};\n\nexport const canDoTagsEdit = (\n  tagsDelta: { added: QueryTagsType; removed: QueryTagsType },\n  permissions: PostPermissions[]\n) => {\n  const isEditingContentWarnings =\n    tagsDelta.added.contentWarnings.length > 0 ||\n    tagsDelta.removed.contentWarnings.length > 0;\n  const isEditingIndexTags =\n    tagsDelta.added.indexTags.length > 0 ||\n    tagsDelta.removed.indexTags.length > 0;\n  const isEditingCategoryTags =\n    tagsDelta.added.categoryTags.length > 0 ||\n    tagsDelta.removed.categoryTags.length > 0;\n  const isEditingWhisperTags =\n    tagsDelta.added.whisperTags.length > 0 ||\n    tagsDelta.removed.whisperTags.length > 0;\n\n  return !(\n    (isEditingContentWarnings &&\n      !permissions.includes(PostPermissions.editContentNotices)) ||\n    (isEditingIndexTags &&\n      !permissions.includes(PostPermissions.editIndexTags)) ||\n    (isEditingCategoryTags &&\n      !permissions.includes(PostPermissions.editCategoryTags)) ||\n    (isEditingWhisperTags &&\n      !permissions.includes(PostPermissions.editWhisperTags))\n  );\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e0409be18f5a7231c2ae52f51e70582cc625fbb4","contentHash":"555a565903711dd67185088402f6a152e1b44db808f811d070f8a8a2d10458c8"},"/Users/esra/projects/programming/bobaserver/server/queries-utils.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/queries-utils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"2":{"start":{"line":4,"column":0},"end":{"line":6,"column":2}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":66}},"4":{"start":{"line":7,"column":0},"end":{"line":9,"column":2}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":64}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":23},"end":{"line":4,"column":24}},"loc":{"start":{"line":4,"column":35},"end":{"line":6,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":23},"end":{"line":7,"column":24}},"loc":{"start":{"line":7,"column":35},"end":{"line":9,"column":1}},"line":7}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":5,"4":1,"5":6},"f":{"0":5,"1":6},"b":{},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/queries-utils.ts","sources":["/Users/esra/projects/programming/bobaserver/server/queries-utils.ts"],"names":[],"mappings":";;;AAAa,QAAA,YAAY,GAAG,CAAC,MAG5B,EAAE,EAAE;IACH,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAChE,CAAC,CAAC;AAEW,QAAA,YAAY,GAAG,CAC1B,MAAc,EAId,EAAE;IACF,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAQ,CAAC;AACrE,CAAC,CAAC","sourcesContent":["export const encodeCursor = (cursor: {\n  last_activity_cursor: string;\n  page_size: number;\n}) => {\n  return Buffer.from(JSON.stringify(cursor)).toString(\"base64\");\n};\n\nexport const decodeCursor = (\n  cursor: string\n): {\n  last_activity_cursor: string;\n  page_size: number;\n} => {\n  return JSON.parse(Buffer.from(cursor, \"base64\").toString()) as any;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"21f9854c1855dcf00ff46471cb241a10bafec37a","contentHash":"902f7152a66c85a8e5832a30eb62b460e74c4dd95ed58489fda95367e710e6a9"},"/Users/esra/projects/programming/bobaserver/server/boards/routes.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/boards/routes.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":16},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":18},"end":{"line":16,"column":53}},"17":{"start":{"line":17,"column":16},"end":{"line":17,"column":35}},"18":{"start":{"line":18,"column":18},"end":{"line":18,"column":38}},"19":{"start":{"line":19,"column":23},"end":{"line":19,"column":49}},"20":{"start":{"line":20,"column":25},"end":{"line":20,"column":53}},"21":{"start":{"line":21,"column":28},"end":{"line":21,"column":59}},"22":{"start":{"line":22,"column":16},"end":{"line":22,"column":34}},"23":{"start":{"line":23,"column":13},"end":{"line":23,"column":60}},"24":{"start":{"line":24,"column":12},"end":{"line":24,"column":54}},"25":{"start":{"line":25,"column":15},"end":{"line":25,"column":41}},"26":{"start":{"line":26,"column":0},"end":{"line":47,"column":4}},"27":{"start":{"line":26,"column":62},"end":{"line":47,"column":2}},"28":{"start":{"line":28,"column":21},"end":{"line":28,"column":31}},"29":{"start":{"line":29,"column":4},"end":{"line":29,"column":54}},"30":{"start":{"line":30,"column":4},"end":{"line":36,"column":5}},"31":{"start":{"line":31,"column":28},"end":{"line":31,"column":85}},"32":{"start":{"line":32,"column":8},"end":{"line":35,"column":9}},"33":{"start":{"line":33,"column":12},"end":{"line":33,"column":59}},"34":{"start":{"line":34,"column":12},"end":{"line":34,"column":65}},"35":{"start":{"line":37,"column":26},"end":{"line":40,"column":6}},"36":{"start":{"line":41,"column":4},"end":{"line":44,"column":5}},"37":{"start":{"line":42,"column":8},"end":{"line":42,"column":28}},"38":{"start":{"line":43,"column":8},"end":{"line":43,"column":15}},"39":{"start":{"line":45,"column":4},"end":{"line":45,"column":124}},"40":{"start":{"line":46,"column":4},"end":{"line":46,"column":40}},"41":{"start":{"line":48,"column":0},"end":{"line":86,"column":4}},"42":{"start":{"line":48,"column":79},"end":{"line":86,"column":2}},"43":{"start":{"line":50,"column":21},"end":{"line":50,"column":31}},"44":{"start":{"line":51,"column":51},"end":{"line":51,"column":59}},"45":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"46":{"start":{"line":54,"column":8},"end":{"line":54,"column":35}},"47":{"start":{"line":56,"column":18},"end":{"line":60,"column":6}},"48":{"start":{"line":61,"column":4},"end":{"line":61,"column":30}},"49":{"start":{"line":62,"column":4},"end":{"line":65,"column":5}},"50":{"start":{"line":64,"column":8},"end":{"line":64,"column":35}},"51":{"start":{"line":66,"column":4},"end":{"line":69,"column":5}},"52":{"start":{"line":68,"column":8},"end":{"line":68,"column":35}},"53":{"start":{"line":70,"column":24},"end":{"line":76,"column":6}},"54":{"start":{"line":77,"column":4},"end":{"line":80,"column":5}},"55":{"start":{"line":78,"column":8},"end":{"line":78,"column":28}},"56":{"start":{"line":79,"column":8},"end":{"line":79,"column":15}},"57":{"start":{"line":81,"column":4},"end":{"line":81,"column":62}},"58":{"start":{"line":82,"column":4},"end":{"line":85,"column":8}},"59":{"start":{"line":87,"column":0},"end":{"line":105,"column":4}},"60":{"start":{"line":87,"column":68},"end":{"line":105,"column":2}},"61":{"start":{"line":88,"column":21},"end":{"line":88,"column":31}},"62":{"start":{"line":90,"column":4},"end":{"line":93,"column":5}},"63":{"start":{"line":92,"column":8},"end":{"line":92,"column":35}},"64":{"start":{"line":94,"column":4},"end":{"line":94,"column":56}},"65":{"start":{"line":95,"column":4},"end":{"line":102,"column":5}},"66":{"start":{"line":100,"column":8},"end":{"line":100,"column":28}},"67":{"start":{"line":101,"column":8},"end":{"line":101,"column":15}},"68":{"start":{"line":103,"column":4},"end":{"line":103,"column":56}},"69":{"start":{"line":104,"column":4},"end":{"line":104,"column":27}},"70":{"start":{"line":106,"column":0},"end":{"line":124,"column":4}},"71":{"start":{"line":106,"column":68},"end":{"line":124,"column":2}},"72":{"start":{"line":107,"column":21},"end":{"line":107,"column":31}},"73":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"74":{"start":{"line":110,"column":8},"end":{"line":110,"column":35}},"75":{"start":{"line":112,"column":4},"end":{"line":112,"column":40}},"76":{"start":{"line":113,"column":4},"end":{"line":120,"column":5}},"77":{"start":{"line":118,"column":8},"end":{"line":118,"column":28}},"78":{"start":{"line":119,"column":8},"end":{"line":119,"column":15}},"79":{"start":{"line":122,"column":4},"end":{"line":122,"column":66}},"80":{"start":{"line":123,"column":4},"end":{"line":123,"column":27}},"81":{"start":{"line":125,"column":0},"end":{"line":143,"column":4}},"82":{"start":{"line":125,"column":70},"end":{"line":143,"column":2}},"83":{"start":{"line":126,"column":21},"end":{"line":126,"column":31}},"84":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"85":{"start":{"line":129,"column":8},"end":{"line":129,"column":35}},"86":{"start":{"line":131,"column":4},"end":{"line":131,"column":42}},"87":{"start":{"line":132,"column":4},"end":{"line":139,"column":5}},"88":{"start":{"line":137,"column":8},"end":{"line":137,"column":28}},"89":{"start":{"line":138,"column":8},"end":{"line":138,"column":15}},"90":{"start":{"line":141,"column":4},"end":{"line":141,"column":68}},"91":{"start":{"line":142,"column":4},"end":{"line":142,"column":27}},"92":{"start":{"line":144,"column":0},"end":{"line":162,"column":4}},"93":{"start":{"line":144,"column":67},"end":{"line":162,"column":2}},"94":{"start":{"line":145,"column":21},"end":{"line":145,"column":31}},"95":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"96":{"start":{"line":148,"column":8},"end":{"line":148,"column":35}},"97":{"start":{"line":150,"column":4},"end":{"line":150,"column":41}},"98":{"start":{"line":151,"column":4},"end":{"line":158,"column":5}},"99":{"start":{"line":156,"column":8},"end":{"line":156,"column":28}},"100":{"start":{"line":157,"column":8},"end":{"line":157,"column":15}},"101":{"start":{"line":160,"column":4},"end":{"line":160,"column":67}},"102":{"start":{"line":161,"column":4},"end":{"line":161,"column":27}},"103":{"start":{"line":163,"column":0},"end":{"line":179,"column":4}},"104":{"start":{"line":163,"column":69},"end":{"line":179,"column":2}},"105":{"start":{"line":165,"column":21},"end":{"line":165,"column":31}},"106":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"107":{"start":{"line":167,"column":8},"end":{"line":167,"column":35}},"108":{"start":{"line":169,"column":4},"end":{"line":169,"column":42}},"109":{"start":{"line":170,"column":4},"end":{"line":176,"column":5}},"110":{"start":{"line":174,"column":8},"end":{"line":174,"column":28}},"111":{"start":{"line":175,"column":8},"end":{"line":175,"column":15}},"112":{"start":{"line":177,"column":4},"end":{"line":177,"column":116}},"113":{"start":{"line":178,"column":4},"end":{"line":178,"column":27}},"114":{"start":{"line":180,"column":0},"end":{"line":200,"column":4}},"115":{"start":{"line":180,"column":85},"end":{"line":200,"column":2}},"116":{"start":{"line":182,"column":21},"end":{"line":182,"column":31}},"117":{"start":{"line":184,"column":24},"end":{"line":184,"column":90}},"118":{"start":{"line":185,"column":4},"end":{"line":188,"column":5}},"119":{"start":{"line":186,"column":8},"end":{"line":186,"column":28}},"120":{"start":{"line":187,"column":8},"end":{"line":187,"column":15}},"121":{"start":{"line":189,"column":4},"end":{"line":189,"column":78}},"122":{"start":{"line":190,"column":30},"end":{"line":193,"column":6}},"123":{"start":{"line":194,"column":4},"end":{"line":197,"column":5}},"124":{"start":{"line":195,"column":8},"end":{"line":195,"column":30}},"125":{"start":{"line":196,"column":8},"end":{"line":196,"column":35}},"126":{"start":{"line":198,"column":4},"end":{"line":198,"column":31}},"127":{"start":{"line":199,"column":4},"end":{"line":199,"column":24}},"128":{"start":{"line":201,"column":0},"end":{"line":273,"column":4}},"129":{"start":{"line":201,"column":78},"end":{"line":273,"column":2}},"130":{"start":{"line":203,"column":21},"end":{"line":203,"column":31}},"131":{"start":{"line":204,"column":39},"end":{"line":204,"column":48}},"132":{"start":{"line":205,"column":4},"end":{"line":205,"column":126}},"133":{"start":{"line":206,"column":4},"end":{"line":209,"column":5}},"134":{"start":{"line":208,"column":8},"end":{"line":208,"column":35}},"135":{"start":{"line":210,"column":19},"end":{"line":215,"column":6}},"136":{"start":{"line":216,"column":4},"end":{"line":216,"column":54}},"137":{"start":{"line":217,"column":4},"end":{"line":220,"column":5}},"138":{"start":{"line":218,"column":8},"end":{"line":218,"column":28}},"139":{"start":{"line":219,"column":8},"end":{"line":219,"column":15}},"140":{"start":{"line":221,"column":4},"end":{"line":224,"column":5}},"141":{"start":{"line":222,"column":8},"end":{"line":222,"column":28}},"142":{"start":{"line":223,"column":8},"end":{"line":223,"column":15}},"143":{"start":{"line":225,"column":4},"end":{"line":228,"column":5}},"144":{"start":{"line":226,"column":8},"end":{"line":226,"column":28}},"145":{"start":{"line":227,"column":8},"end":{"line":227,"column":15}},"146":{"start":{"line":229,"column":32},"end":{"line":268,"column":6}},"147":{"start":{"line":230,"column":35},"end":{"line":230,"column":79}},"148":{"start":{"line":231,"column":8},"end":{"line":267,"column":10}},"149":{"start":{"line":269,"column":21},"end":{"line":269,"column":87}},"150":{"start":{"line":270,"column":4},"end":{"line":270,"column":84}},"151":{"start":{"line":270,"column":36},"end":{"line":270,"column":82}},"152":{"start":{"line":271,"column":4},"end":{"line":271,"column":139}},"153":{"start":{"line":272,"column":4},"end":{"line":272,"column":35}},"154":{"start":{"line":274,"column":0},"end":{"line":302,"column":4}},"155":{"start":{"line":274,"column":57},"end":{"line":302,"column":2}},"156":{"start":{"line":276,"column":4},"end":{"line":285,"column":5}},"157":{"start":{"line":279,"column":29},"end":{"line":279,"column":80}},"158":{"start":{"line":280,"column":8},"end":{"line":284,"column":9}},"159":{"start":{"line":281,"column":12},"end":{"line":281,"column":60}},"160":{"start":{"line":282,"column":12},"end":{"line":282,"column":59}},"161":{"start":{"line":283,"column":12},"end":{"line":283,"column":19}},"162":{"start":{"line":286,"column":19},"end":{"line":289,"column":6}},"163":{"start":{"line":290,"column":4},"end":{"line":292,"column":5}},"164":{"start":{"line":291,"column":8},"end":{"line":291,"column":24}},"165":{"start":{"line":293,"column":27},"end":{"line":296,"column":6}},"166":{"start":{"line":297,"column":4},"end":{"line":297,"column":111}},"167":{"start":{"line":298,"column":4},"end":{"line":298,"column":41}},"168":{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},"169":{"start":{"line":300,"column":8},"end":{"line":300,"column":86}},"170":{"start":{"line":303,"column":0},"end":{"line":303,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":26,"column":48},"end":{"line":26,"column":49}},"loc":{"start":{"line":26,"column":62},"end":{"line":47,"column":2}},"line":26},"9":{"name":"(anonymous_9)","decl":{"start":{"line":26,"column":96},"end":{"line":26,"column":97}},"loc":{"start":{"line":26,"column":109},"end":{"line":47,"column":1}},"line":26},"10":{"name":"(anonymous_10)","decl":{"start":{"line":48,"column":65},"end":{"line":48,"column":66}},"loc":{"start":{"line":48,"column":79},"end":{"line":86,"column":2}},"line":48},"11":{"name":"(anonymous_11)","decl":{"start":{"line":48,"column":113},"end":{"line":48,"column":114}},"loc":{"start":{"line":48,"column":126},"end":{"line":86,"column":1}},"line":48},"12":{"name":"(anonymous_12)","decl":{"start":{"line":87,"column":54},"end":{"line":87,"column":55}},"loc":{"start":{"line":87,"column":68},"end":{"line":105,"column":2}},"line":87},"13":{"name":"(anonymous_13)","decl":{"start":{"line":87,"column":102},"end":{"line":87,"column":103}},"loc":{"start":{"line":87,"column":115},"end":{"line":105,"column":1}},"line":87},"14":{"name":"(anonymous_14)","decl":{"start":{"line":106,"column":54},"end":{"line":106,"column":55}},"loc":{"start":{"line":106,"column":68},"end":{"line":124,"column":2}},"line":106},"15":{"name":"(anonymous_15)","decl":{"start":{"line":106,"column":102},"end":{"line":106,"column":103}},"loc":{"start":{"line":106,"column":115},"end":{"line":124,"column":1}},"line":106},"16":{"name":"(anonymous_16)","decl":{"start":{"line":125,"column":56},"end":{"line":125,"column":57}},"loc":{"start":{"line":125,"column":70},"end":{"line":143,"column":2}},"line":125},"17":{"name":"(anonymous_17)","decl":{"start":{"line":125,"column":104},"end":{"line":125,"column":105}},"loc":{"start":{"line":125,"column":117},"end":{"line":143,"column":1}},"line":125},"18":{"name":"(anonymous_18)","decl":{"start":{"line":144,"column":53},"end":{"line":144,"column":54}},"loc":{"start":{"line":144,"column":67},"end":{"line":162,"column":2}},"line":144},"19":{"name":"(anonymous_19)","decl":{"start":{"line":144,"column":101},"end":{"line":144,"column":102}},"loc":{"start":{"line":144,"column":114},"end":{"line":162,"column":1}},"line":144},"20":{"name":"(anonymous_20)","decl":{"start":{"line":163,"column":55},"end":{"line":163,"column":56}},"loc":{"start":{"line":163,"column":69},"end":{"line":179,"column":2}},"line":163},"21":{"name":"(anonymous_21)","decl":{"start":{"line":163,"column":103},"end":{"line":163,"column":104}},"loc":{"start":{"line":163,"column":116},"end":{"line":179,"column":1}},"line":163},"22":{"name":"(anonymous_22)","decl":{"start":{"line":180,"column":71},"end":{"line":180,"column":72}},"loc":{"start":{"line":180,"column":85},"end":{"line":200,"column":2}},"line":180},"23":{"name":"(anonymous_23)","decl":{"start":{"line":180,"column":119},"end":{"line":180,"column":120}},"loc":{"start":{"line":180,"column":132},"end":{"line":200,"column":1}},"line":180},"24":{"name":"(anonymous_24)","decl":{"start":{"line":201,"column":64},"end":{"line":201,"column":65}},"loc":{"start":{"line":201,"column":78},"end":{"line":273,"column":2}},"line":201},"25":{"name":"(anonymous_25)","decl":{"start":{"line":201,"column":112},"end":{"line":201,"column":113}},"loc":{"start":{"line":201,"column":125},"end":{"line":273,"column":1}},"line":201},"26":{"name":"(anonymous_26)","decl":{"start":{"line":229,"column":52},"end":{"line":229,"column":53}},"loc":{"start":{"line":229,"column":64},"end":{"line":268,"column":5}},"line":229},"27":{"name":"(anonymous_27)","decl":{"start":{"line":270,"column":26},"end":{"line":270,"column":27}},"loc":{"start":{"line":270,"column":36},"end":{"line":270,"column":82}},"line":270},"28":{"name":"(anonymous_28)","decl":{"start":{"line":274,"column":43},"end":{"line":274,"column":44}},"loc":{"start":{"line":274,"column":57},"end":{"line":302,"column":2}},"line":274},"29":{"name":"(anonymous_29)","decl":{"start":{"line":274,"column":91},"end":{"line":274,"column":92}},"loc":{"start":{"line":274,"column":104},"end":{"line":302,"column":1}},"line":274}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":30,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":36,"column":5}},{"start":{"line":30,"column":4},"end":{"line":36,"column":5}}],"line":30},"9":{"loc":{"start":{"line":30,"column":10},"end":{"line":30,"column":76}},"type":"cond-expr","locations":[{"start":{"line":30,"column":61},"end":{"line":30,"column":67}},{"start":{"line":30,"column":70},"end":{"line":30,"column":76}}],"line":30},"10":{"loc":{"start":{"line":30,"column":10},"end":{"line":30,"column":58}},"type":"binary-expr","locations":[{"start":{"line":30,"column":10},"end":{"line":30,"column":41}},{"start":{"line":30,"column":45},"end":{"line":30,"column":58}}],"line":30},"11":{"loc":{"start":{"line":32,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":35,"column":9}},{"start":{"line":32,"column":8},"end":{"line":35,"column":9}}],"line":32},"12":{"loc":{"start":{"line":38,"column":20},"end":{"line":38,"column":86}},"type":"cond-expr","locations":[{"start":{"line":38,"column":71},"end":{"line":38,"column":77}},{"start":{"line":38,"column":80},"end":{"line":38,"column":86}}],"line":38},"13":{"loc":{"start":{"line":38,"column":20},"end":{"line":38,"column":68}},"type":"binary-expr","locations":[{"start":{"line":38,"column":20},"end":{"line":38,"column":51}},{"start":{"line":38,"column":55},"end":{"line":38,"column":68}}],"line":38},"14":{"loc":{"start":{"line":41,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":44,"column":5}},{"start":{"line":41,"column":4},"end":{"line":44,"column":5}}],"line":41},"15":{"loc":{"start":{"line":45,"column":53},"end":{"line":45,"column":119}},"type":"cond-expr","locations":[{"start":{"line":45,"column":104},"end":{"line":45,"column":110}},{"start":{"line":45,"column":113},"end":{"line":45,"column":119}}],"line":45},"16":{"loc":{"start":{"line":45,"column":53},"end":{"line":45,"column":101}},"type":"binary-expr","locations":[{"start":{"line":45,"column":53},"end":{"line":45,"column":84}},{"start":{"line":45,"column":88},"end":{"line":45,"column":101}}],"line":45},"17":{"loc":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},{"start":{"line":53,"column":4},"end":{"line":55,"column":5}}],"line":53},"18":{"loc":{"start":{"line":58,"column":20},"end":{"line":58,"column":86}},"type":"cond-expr","locations":[{"start":{"line":58,"column":71},"end":{"line":58,"column":77}},{"start":{"line":58,"column":80},"end":{"line":58,"column":86}}],"line":58},"19":{"loc":{"start":{"line":58,"column":20},"end":{"line":58,"column":68}},"type":"binary-expr","locations":[{"start":{"line":58,"column":20},"end":{"line":58,"column":51}},{"start":{"line":58,"column":55},"end":{"line":58,"column":68}}],"line":58},"20":{"loc":{"start":{"line":62,"column":4},"end":{"line":65,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":65,"column":5}},{"start":{"line":62,"column":4},"end":{"line":65,"column":5}}],"line":62},"21":{"loc":{"start":{"line":66,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":69,"column":5}},{"start":{"line":66,"column":4},"end":{"line":69,"column":5}}],"line":66},"22":{"loc":{"start":{"line":73,"column":20},"end":{"line":73,"column":86}},"type":"cond-expr","locations":[{"start":{"line":73,"column":71},"end":{"line":73,"column":77}},{"start":{"line":73,"column":80},"end":{"line":73,"column":86}}],"line":73},"23":{"loc":{"start":{"line":73,"column":20},"end":{"line":73,"column":68}},"type":"binary-expr","locations":[{"start":{"line":73,"column":20},"end":{"line":73,"column":51}},{"start":{"line":73,"column":55},"end":{"line":73,"column":68}}],"line":73},"24":{"loc":{"start":{"line":77,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":80,"column":5}},{"start":{"line":77,"column":4},"end":{"line":80,"column":5}}],"line":77},"25":{"loc":{"start":{"line":84,"column":23},"end":{"line":84,"column":89}},"type":"cond-expr","locations":[{"start":{"line":84,"column":74},"end":{"line":84,"column":80}},{"start":{"line":84,"column":83},"end":{"line":84,"column":89}}],"line":84},"26":{"loc":{"start":{"line":84,"column":23},"end":{"line":84,"column":71}},"type":"binary-expr","locations":[{"start":{"line":84,"column":23},"end":{"line":84,"column":54}},{"start":{"line":84,"column":58},"end":{"line":84,"column":71}}],"line":84},"27":{"loc":{"start":{"line":90,"column":4},"end":{"line":93,"column":5}},"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":93,"column":5}},{"start":{"line":90,"column":4},"end":{"line":93,"column":5}}],"line":90},"28":{"loc":{"start":{"line":95,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":102,"column":5}},{"start":{"line":95,"column":4},"end":{"line":102,"column":5}}],"line":95},"29":{"loc":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},{"start":{"line":109,"column":4},"end":{"line":111,"column":5}}],"line":109},"30":{"loc":{"start":{"line":113,"column":4},"end":{"line":120,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":120,"column":5}},{"start":{"line":113,"column":4},"end":{"line":120,"column":5}}],"line":113},"31":{"loc":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},{"start":{"line":128,"column":4},"end":{"line":130,"column":5}}],"line":128},"32":{"loc":{"start":{"line":132,"column":4},"end":{"line":139,"column":5}},"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":139,"column":5}},{"start":{"line":132,"column":4},"end":{"line":139,"column":5}}],"line":132},"33":{"loc":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},{"start":{"line":147,"column":4},"end":{"line":149,"column":5}}],"line":147},"34":{"loc":{"start":{"line":151,"column":4},"end":{"line":158,"column":5}},"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":158,"column":5}},{"start":{"line":151,"column":4},"end":{"line":158,"column":5}}],"line":151},"35":{"loc":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},{"start":{"line":166,"column":4},"end":{"line":168,"column":5}}],"line":166},"36":{"loc":{"start":{"line":170,"column":4},"end":{"line":176,"column":5}},"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":176,"column":5}},{"start":{"line":170,"column":4},"end":{"line":176,"column":5}}],"line":170},"37":{"loc":{"start":{"line":171,"column":20},"end":{"line":171,"column":86}},"type":"cond-expr","locations":[{"start":{"line":171,"column":71},"end":{"line":171,"column":77}},{"start":{"line":171,"column":80},"end":{"line":171,"column":86}}],"line":171},"38":{"loc":{"start":{"line":171,"column":20},"end":{"line":171,"column":68}},"type":"binary-expr","locations":[{"start":{"line":171,"column":20},"end":{"line":171,"column":51}},{"start":{"line":171,"column":55},"end":{"line":171,"column":68}}],"line":171},"39":{"loc":{"start":{"line":177,"column":45},"end":{"line":177,"column":111}},"type":"cond-expr","locations":[{"start":{"line":177,"column":96},"end":{"line":177,"column":102}},{"start":{"line":177,"column":105},"end":{"line":177,"column":111}}],"line":177},"40":{"loc":{"start":{"line":177,"column":45},"end":{"line":177,"column":93}},"type":"binary-expr","locations":[{"start":{"line":177,"column":45},"end":{"line":177,"column":76}},{"start":{"line":177,"column":80},"end":{"line":177,"column":93}}],"line":177},"41":{"loc":{"start":{"line":184,"column":24},"end":{"line":184,"column":90}},"type":"cond-expr","locations":[{"start":{"line":184,"column":75},"end":{"line":184,"column":81}},{"start":{"line":184,"column":84},"end":{"line":184,"column":90}}],"line":184},"42":{"loc":{"start":{"line":184,"column":24},"end":{"line":184,"column":72}},"type":"binary-expr","locations":[{"start":{"line":184,"column":24},"end":{"line":184,"column":55}},{"start":{"line":184,"column":59},"end":{"line":184,"column":72}}],"line":184},"43":{"loc":{"start":{"line":185,"column":4},"end":{"line":188,"column":5}},"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":188,"column":5}},{"start":{"line":185,"column":4},"end":{"line":188,"column":5}}],"line":185},"44":{"loc":{"start":{"line":194,"column":4},"end":{"line":197,"column":5}},"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":197,"column":5}},{"start":{"line":194,"column":4},"end":{"line":197,"column":5}}],"line":194},"45":{"loc":{"start":{"line":206,"column":4},"end":{"line":209,"column":5}},"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":209,"column":5}},{"start":{"line":206,"column":4},"end":{"line":209,"column":5}}],"line":206},"46":{"loc":{"start":{"line":206,"column":59},"end":{"line":206,"column":125}},"type":"cond-expr","locations":[{"start":{"line":206,"column":110},"end":{"line":206,"column":116}},{"start":{"line":206,"column":119},"end":{"line":206,"column":125}}],"line":206},"47":{"loc":{"start":{"line":206,"column":59},"end":{"line":206,"column":107}},"type":"binary-expr","locations":[{"start":{"line":206,"column":59},"end":{"line":206,"column":90}},{"start":{"line":206,"column":94},"end":{"line":206,"column":107}}],"line":206},"48":{"loc":{"start":{"line":212,"column":20},"end":{"line":212,"column":86}},"type":"cond-expr","locations":[{"start":{"line":212,"column":71},"end":{"line":212,"column":77}},{"start":{"line":212,"column":80},"end":{"line":212,"column":86}}],"line":212},"49":{"loc":{"start":{"line":212,"column":20},"end":{"line":212,"column":68}},"type":"binary-expr","locations":[{"start":{"line":212,"column":20},"end":{"line":212,"column":51}},{"start":{"line":212,"column":55},"end":{"line":212,"column":68}}],"line":212},"50":{"loc":{"start":{"line":213,"column":24},"end":{"line":213,"column":46}},"type":"binary-expr","locations":[{"start":{"line":213,"column":24},"end":{"line":213,"column":38}},{"start":{"line":213,"column":42},"end":{"line":213,"column":46}}],"line":213},"51":{"loc":{"start":{"line":214,"column":16},"end":{"line":214,"column":30}},"type":"binary-expr","locations":[{"start":{"line":214,"column":16},"end":{"line":214,"column":22}},{"start":{"line":214,"column":26},"end":{"line":214,"column":30}}],"line":214},"52":{"loc":{"start":{"line":217,"column":4},"end":{"line":220,"column":5}},"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":220,"column":5}},{"start":{"line":217,"column":4},"end":{"line":220,"column":5}}],"line":217},"53":{"loc":{"start":{"line":221,"column":4},"end":{"line":224,"column":5}},"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":224,"column":5}},{"start":{"line":221,"column":4},"end":{"line":224,"column":5}}],"line":221},"54":{"loc":{"start":{"line":225,"column":4},"end":{"line":228,"column":5}},"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":228,"column":5}},{"start":{"line":225,"column":4},"end":{"line":228,"column":5}}],"line":225},"55":{"loc":{"start":{"line":271,"column":68},"end":{"line":271,"column":134}},"type":"cond-expr","locations":[{"start":{"line":271,"column":119},"end":{"line":271,"column":125}},{"start":{"line":271,"column":128},"end":{"line":271,"column":134}}],"line":271},"56":{"loc":{"start":{"line":271,"column":68},"end":{"line":271,"column":116}},"type":"binary-expr","locations":[{"start":{"line":271,"column":68},"end":{"line":271,"column":99}},{"start":{"line":271,"column":103},"end":{"line":271,"column":116}}],"line":271},"57":{"loc":{"start":{"line":276,"column":4},"end":{"line":285,"column":5}},"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":285,"column":5}},{"start":{"line":276,"column":4},"end":{"line":285,"column":5}}],"line":276},"58":{"loc":{"start":{"line":276,"column":10},"end":{"line":276,"column":76}},"type":"cond-expr","locations":[{"start":{"line":276,"column":61},"end":{"line":276,"column":67}},{"start":{"line":276,"column":70},"end":{"line":276,"column":76}}],"line":276},"59":{"loc":{"start":{"line":276,"column":10},"end":{"line":276,"column":58}},"type":"binary-expr","locations":[{"start":{"line":276,"column":10},"end":{"line":276,"column":41}},{"start":{"line":276,"column":45},"end":{"line":276,"column":58}}],"line":276},"60":{"loc":{"start":{"line":280,"column":8},"end":{"line":284,"column":9}},"type":"if","locations":[{"start":{"line":280,"column":8},"end":{"line":284,"column":9}},{"start":{"line":280,"column":8},"end":{"line":284,"column":9}}],"line":280},"61":{"loc":{"start":{"line":288,"column":20},"end":{"line":288,"column":86}},"type":"cond-expr","locations":[{"start":{"line":288,"column":71},"end":{"line":288,"column":77}},{"start":{"line":288,"column":80},"end":{"line":288,"column":86}}],"line":288},"62":{"loc":{"start":{"line":288,"column":20},"end":{"line":288,"column":68}},"type":"binary-expr","locations":[{"start":{"line":288,"column":20},"end":{"line":288,"column":51}},{"start":{"line":288,"column":55},"end":{"line":288,"column":68}}],"line":288},"63":{"loc":{"start":{"line":290,"column":4},"end":{"line":292,"column":5}},"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":292,"column":5}},{"start":{"line":290,"column":4},"end":{"line":292,"column":5}}],"line":290},"64":{"loc":{"start":{"line":295,"column":23},"end":{"line":295,"column":89}},"type":"cond-expr","locations":[{"start":{"line":295,"column":74},"end":{"line":295,"column":80}},{"start":{"line":295,"column":83},"end":{"line":295,"column":89}}],"line":295},"65":{"loc":{"start":{"line":295,"column":23},"end":{"line":295,"column":71}},"type":"binary-expr","locations":[{"start":{"line":295,"column":23},"end":{"line":295,"column":54}},{"start":{"line":295,"column":58},"end":{"line":295,"column":71}}],"line":295},"66":{"loc":{"start":{"line":297,"column":41},"end":{"line":297,"column":107}},"type":"cond-expr","locations":[{"start":{"line":297,"column":92},"end":{"line":297,"column":98}},{"start":{"line":297,"column":101},"end":{"line":297,"column":107}}],"line":297},"67":{"loc":{"start":{"line":297,"column":41},"end":{"line":297,"column":89}},"type":"binary-expr","locations":[{"start":{"line":297,"column":41},"end":{"line":297,"column":72}},{"start":{"line":297,"column":76},"end":{"line":297,"column":89}}],"line":297},"68":{"loc":{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},{"start":{"line":299,"column":4},"end":{"line":301,"column":5}}],"line":299},"69":{"loc":{"start":{"line":299,"column":10},"end":{"line":299,"column":76}},"type":"cond-expr","locations":[{"start":{"line":299,"column":61},"end":{"line":299,"column":67}},{"start":{"line":299,"column":70},"end":{"line":299,"column":76}}],"line":299},"70":{"loc":{"start":{"line":299,"column":10},"end":{"line":299,"column":58}},"type":"binary-expr","locations":[{"start":{"line":299,"column":10},"end":{"line":299,"column":41}},{"start":{"line":299,"column":45},"end":{"line":299,"column":58}}],"line":299}},"s":{"0":1,"1":9,"2":3,"3":5,"4":9,"5":9,"6":0,"7":0,"8":0,"9":0,"10":14,"11":5,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":2,"28":2,"29":2,"30":2,"31":2,"32":2,"33":0,"34":0,"35":2,"36":2,"37":0,"38":0,"39":2,"40":2,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":2,"130":2,"131":2,"132":2,"133":2,"134":1,"135":1,"136":1,"137":1,"138":0,"139":0,"140":1,"141":0,"142":0,"143":1,"144":0,"145":0,"146":1,"147":3,"148":3,"149":1,"150":1,"151":3,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":0,"160":0,"161":0,"162":1,"163":1,"164":0,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1},"f":{"0":5,"1":9,"2":3,"3":5,"4":9,"5":0,"6":14,"7":2,"8":2,"9":2,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":2,"25":2,"26":3,"27":3,"28":1,"29":1},"b":{"0":[1,1,1],"1":[6,3],"2":[5,5],"3":[5,9],"4":[5,5],"5":[1,1,1],"6":[0,2],"7":[2,2],"8":[2,0],"9":[2,0],"10":[2,2],"11":[0,2],"12":[2,0],"13":[2,2],"14":[0,2],"15":[2,0],"16":[2,2],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[1,1],"46":[2,0],"47":[2,2],"48":[1,0],"49":[1,1],"50":[1,1],"51":[1,1],"52":[0,1],"53":[0,1],"54":[0,1],"55":[1,0],"56":[1,1],"57":[1,0],"58":[1,0],"59":[1,1],"60":[0,1],"61":[1,0],"62":[1,1],"63":[0,1],"64":[1,0],"65":[1,1],"66":[1,0],"67":[1,1],"68":[1,0],"69":[1,0],"70":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/boards/routes.ts","sources":["/Users/esra/projects/programming/bobaserver/server/boards/routes.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,kDAA0B;AAC1B,sDAA8B;AAC9B,oCAA4C;AAC5C,uCAWmB;AACnB,kDAA6C;AAC7C,sDAK2B;AAC3B,4DAAoD;AAEpD,mCAA2D;AAE3D,MAAM,IAAI,GAAG,eAAK,CAAC,8BAA8B,CAAC,CAAC;AACnD,MAAM,GAAG,GAAG,eAAK,CAAC,yBAAyB,CAAC,CAAC;AAE7C,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,yBAAU,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;;IAClD,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC5B,GAAG,CAAC,qCAAqC,IAAI,GAAG,CAAC,CAAC;IAElD,IAAI,QAAC,GAAG,CAAC,WAAW,0CAAE,GAAG,CAAA,EAAE;QACzB,MAAM,WAAW,GAAG,MAAM,aAAK,EAAE,CAAC,IAAI,CAAC,iBAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,WAAW,EAAE;YACf,GAAG,CAAC,mCAAmC,IAAI,EAAE,CAAC,CAAC;YAC/C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;SACtD;KACF;IAED,MAAM,aAAa,GAAG,MAAM,wBAAgB,CAAC;QAC3C,UAAU,QAAE,GAAG,CAAC,WAAW,0CAAE,GAAG;QAChC,IAAI;KACL,CAAC,CAAC;IAEH,IAAI,CAAC,aAAa,EAAE;QAClB,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO;KACR;IAED,GAAG,CAAC,4BAA4B,IAAI,aAAa,MAAA,GAAG,CAAC,WAAW,0CAAE,GAAG,GAAG,CAAC,CAAC;IAC1E,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACtC,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,yBAAU,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;;IACnE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC5B,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAExD,aAAa;IACb,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;QACpB,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC5B;IAED,MAAM,KAAK,GAAG,MAAM,wBAAc,CAAC;QACjC,aAAa;QACb,UAAU,QAAE,GAAG,CAAC,WAAW,0CAAE,GAAG;QAChC,IAAI;KACL,CAAC,CAAC;IACH,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IAE1B,IAAI,CAAC,KAAK,EAAE;QACV,sBAAsB;QACtB,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC5B;IAED,IAAI,CAAC,gCAAY,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;QACpC,sBAAsB;QACtB,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC5B;IAED,MAAM,WAAW,GAAG,MAAM,6BAAmB,CAAC;QAC5C,IAAI;QACJ,aAAa;QACb,UAAU,QAAE,GAAG,CAAC,WAAW,0CAAE,GAAG;QAChC,WAAW,EAAE,KAAK;QAClB,WAAW,EAAE,EAAE,YAAY,EAAE,QAAQ,EAAE,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE;KAClE,CAAC,CAAC;IAEH,IAAI,CAAC,WAAW,EAAE;QAChB,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO;KACR;IAED,MAAM,aAAK,EAAE,CAAC,IAAI,CAAC,iBAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC1C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAClB,qCAAoB,CAAC;QACnB,QAAQ,EAAE,WAAW;QACrB,UAAU,EAAE,CAAC,QAAC,GAAG,CAAC,WAAW,0CAAE,GAAG,CAAA;KACnC,CAAC,CACH,CAAC;AACJ,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,yBAAU,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACxD,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC5B,aAAa;IACb,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;QACpB,yBAAyB;QACzB,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC5B;IACD,GAAG,CAAC,wCAAwC,IAAI,EAAE,CAAC,CAAC;IAEpD,IACE,CAAC,CAAC,MAAM,wBAAc,CAAC;QACrB,aAAa;QACb,UAAU,EAAE,GAAG,CAAC,WAAW,CAAC,GAAG;QAC/B,IAAI;KACL,CAAC,CAAC,EACH;QACA,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO;KACR;IAED,GAAG,CAAC,uCAAuC,IAAI,GAAG,CAAC,CAAC;IACpD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AACzB,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,yBAAU,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACxD,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC5B,aAAa;IACb,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;QACpB,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC5B;IACD,GAAG,CAAC,wBAAwB,IAAI,EAAE,CAAC,CAAC;IAEpC,IACE,CAAC,CAAC,MAAM,mBAAS,CAAC;QAChB,aAAa;QACb,UAAU,EAAE,GAAG,CAAC,WAAW,CAAC,GAAG;QAC/B,IAAI;KACL,CAAC,CAAC,EACH;QACA,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO;KACR;IAED,aAAa;IACb,IAAI,CAAC,gBAAgB,IAAI,aAAa,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;IAC9D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AACzB,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,yBAAU,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC1D,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC5B,aAAa;IACb,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;QACpB,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC5B;IACD,GAAG,CAAC,0BAA0B,IAAI,EAAE,CAAC,CAAC;IAEtC,IACE,CAAC,CAAC,MAAM,qBAAW,CAAC;QAClB,aAAa;QACb,UAAU,EAAE,GAAG,CAAC,WAAW,CAAC,GAAG;QAC/B,IAAI;KACL,CAAC,CAAC,EACH;QACA,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO;KACR;IAED,aAAa;IACb,IAAI,CAAC,kBAAkB,IAAI,aAAa,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;IAChE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AACzB,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,yBAAU,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACvD,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC5B,aAAa;IACb,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;QACpB,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC5B;IACD,GAAG,CAAC,yBAAyB,IAAI,EAAE,CAAC,CAAC;IAErC,IACE,CAAC,CAAC,MAAM,kBAAQ,CAAC;QACf,aAAa;QACb,UAAU,EAAE,GAAG,CAAC,WAAW,CAAC,GAAG;QAC/B,IAAI;KACL,CAAC,CAAC,EACH;QACA,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO;KACR;IAED,aAAa;IACb,IAAI,CAAC,iBAAiB,IAAI,aAAa,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;IAC/D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AACzB,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,yBAAU,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;;IACzD,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC5B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;QACpB,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC5B;IACD,GAAG,CAAC,0BAA0B,IAAI,EAAE,CAAC,CAAC;IAEtC,IACE,CAAC,CAAC,MAAM,oBAAU,CAAC;QACjB,UAAU,QAAE,GAAG,CAAC,WAAW,0CAAE,GAAG;QAChC,IAAI;KACL,CAAC,CAAC,EACH;QACA,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO;KACR;IAED,IAAI,CAAC,mBAAmB,IAAI,aAAa,MAAA,GAAG,CAAC,WAAW,0CAAE,GAAG,GAAG,CAAC,CAAC;IAClE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AACzB,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,8BAA8B,EAAE,yBAAU,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;;IACzE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC5B,aAAa;IACb,IAAI,aAAa,SAAW,GAAG,CAAC,WAAW,0CAAE,GAAG,CAAC;IACjD,IAAI,CAAC,aAAa,EAAE;QAClB,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO;KACR;IACD,GAAG,CAAC,cAAc,IAAI,mCAAmC,aAAa,EAAE,CAAC,CAAC;IAC1E,MAAM,iBAAiB,GAAG,MAAM,mCAAyB,CAAC;QACxD,IAAI;QACJ,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;IAEH,IAAI,CAAC,iBAAiB,EAAE;QACtB,GAAG,CAAC,gBAAgB,CAAC,CAAC;QACtB,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC5B;IAED,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAE3B,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACtB,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,wBAAwB,EAAE,yBAAU,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;;IAClE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC5B,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC;IAC7C,GAAG,CACD,8CAA8C,IAAI,gBAAgB,MAAM,2BAA2B,cAAc,GAAG,CACrH,CAAC;IAEF,IAAI,CAAC,CAAC,MAAM,sBAAc,CAAC,EAAE,IAAI,EAAE,UAAU,QAAE,GAAG,CAAC,WAAW,0CAAE,GAAG,EAAE,CAAC,CAAC,EAAE;QACvE,sBAAsB;QACtB,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC5B;IAED,MAAM,MAAM,GAAG,MAAM,gCAAsB,CAAC;QAC1C,IAAI;QACJ,UAAU,QAAE,GAAG,CAAC,WAAW,0CAAE,GAAG;QAChC,cAAc,EAAG,cAAyB,IAAI,IAAI;QAClD,MAAM,EAAG,MAAiB,IAAI,IAAI;KACnC,CAAC,CAAC;IACH,IAAI,CAAC,4BAA4B,IAAI,GAAG,EAAE,MAAM,CAAC,CAAC;IAElD,IAAI,MAAM,KAAK,KAAK,EAAE;QACpB,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO;KACR;IACD,IAAI,CAAC,MAAM,EAAE;QACX,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO;KACR;IACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;QAC3B,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO;KACR;IAED,MAAM,mBAAmB,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAC7C,CAAC,MAAM,EAAoB,EAAE;QAC3B,MAAM,kBAAkB,GAAG,oCAAmB,CAC5C,MAAM,CACP,CAAC;QACF,OAAO;YACL,KAAK,EAAE;gBACL;oBACE,OAAO,EAAE,kBAAkB,CAAC,OAAO;oBACnC,gBAAgB,EAAE,kBAAkB,CAAC,SAAS;oBAC9C,cAAc,EAAE,kBAAkB,CAAC,cAAc;oBACjD,eAAe,EAAE,kBAAkB,CAAC,eAAe;oBACnD,aAAa,EAAE,kBAAkB,CAAC,aAAa;oBAC/C,gBAAgB,EAAE,kBAAkB,CAAC,gBAAgB;oBACrD,IAAI,EAAE,kBAAkB,CAAC,IAAI;oBAC7B,MAAM,EAAE,kBAAkB,CAAC,MAAM;oBACjC,OAAO,EAAE,kBAAkB,CAAC,OAAO;oBACnC,OAAO,EAAE,kBAAkB,CAAC,OAAO;oBACnC,OAAO,EAAE,kBAAkB,CAAC,OAAO;oBACnC,IAAI,EAAE;wBACJ,YAAY,EAAE,kBAAkB,CAAC,YAAY;wBAC7C,UAAU,EAAE,kBAAkB,CAAC,UAAU;wBACzC,aAAa,EAAE,kBAAkB,CAAC,aAAa;wBAC/C,gBAAgB,EAAE,kBAAkB,CAAC,gBAAgB;qBACtD;oBACD,qBAAqB,EAAE,kBAAkB,CAAC,eAAe;oBACzD,mBAAmB,EAAE,kBAAkB,CAAC,mBAAmB;oBAC3D,MAAM,EAAE,kBAAkB,CAAC,MAAM;iBAClC;aACF;YACD,YAAY,EAAE,kBAAkB,CAAC,YAAY;YAC7C,SAAS,EAAE,kBAAkB,CAAC,SAAS;YACvC,UAAU,EAAE,IAAI;YAChB,uBAAuB,EAAE,kBAAkB,CAAC,gBAAgB;YAC5D,0BAA0B,EAAE,kBAAkB,CAAC,mBAAmB;YAClE,4BAA4B,EAAE,kBAAkB,CAAC,eAAe;YAChE,yBAAyB,EAAE,kBAAkB,CAAC,YAAY;YAC1D,oBAAoB,EAAE,kBAAkB,CAAC,oBAAoB;YAC7D,4BAA4B,EAAE,kBAAkB,CAAC,cAAc;YAC/D,KAAK,EAAE,kBAAkB,CAAC,KAAK;YAC/B,MAAM,EAAE,kBAAkB,CAAC,MAAM;SAClC,CAAC;IACJ,CAAC,CACF,CAAC;IACF,MAAM,QAAQ,GAGV,EAAE,gBAAgB,EAAE,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,mBAAmB,EAAE,CAAC;IAEvE,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,wCAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/D,GAAG,CACD,2CAA2C,IAAI,aAAa,MAAA,GAAG,CAAC,WAAW,0CAAE,GAAG,GAAG,CACpF,CAAC;IACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACjC,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,yBAAU,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;;IAC7C,IAAI,QAAC,GAAG,CAAC,WAAW,0CAAE,GAAG,CAAA,EAAE;QACzB,2EAA2E;QAC3E,+BAA+B;QAC/B,MAAM,YAAY,GAAG,MAAM,aAAK,EAAE,CAAC,GAAG,CAAC,iBAAS,CAAC,MAAM,CAAC,CAAC;QACzD,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,yCAAyC,CAAC,CAAC;YAChD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;YAC/C,OAAO;SACR;KACF;IAED,MAAM,MAAM,GAAG,MAAM,mBAAS,CAAC;QAC7B,aAAa;QACb,UAAU,QAAE,GAAG,CAAC,WAAW,0CAAE,GAAG;KACjC,CAAC,CAAC;IACH,IAAI,CAAC,MAAM,EAAE;QACX,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KACjB;IAED,MAAM,cAAc,GAAG,sCAAqB,CAAC;QAC3C,MAAM;QACN,UAAU,EAAE,CAAC,QAAC,GAAG,CAAC,WAAW,0CAAE,GAAG,CAAA;KACnC,CAAC,CAAC;IACH,GAAG,CAAC,iCAAiC,MAAA,GAAG,CAAC,WAAW,0CAAE,GAAG,EAAE,CAAC,CAAC;IAC7D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAErC,IAAI,QAAC,GAAG,CAAC,WAAW,0CAAE,GAAG,CAAA,EAAE;QACzB,aAAK,EAAE,CAAC,GAAG,CAAC,iBAAS,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;KAC/D;AACH,CAAC,CAAA,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import debug from \"debug\";\nimport express from \"express\";\nimport { cache, CacheKeys } from \"../cache\";\nimport {\n  getBoardBySlug,\n  getBoardActivityBySlug,\n  getBoards,\n  markBoardVisit,\n  updateBoardMetadata,\n  muteBoard,\n  unmuteBoard,\n  dismissBoardNotifications,\n  pinBoard,\n  unpinBoard,\n} from \"./queries\";\nimport { isLoggedIn } from \"../auth-handler\";\nimport {\n  mergeObjectIdentity,\n  ensureNoIdentityLeakage,\n  processBoardMetadata,\n  processBoardsMetadata,\n} from \"../response-utils\";\nimport { canEditBoard } from \"../permissions-utils\";\nimport { DbActivityThreadType, ServerThreadType } from \"../../Types\";\nimport { canAccessBoard, getBoardMetadata } from \"./utils\";\n\nconst info = debug(\"bobaserver:board:routes-info\");\nconst log = debug(\"bobaserver:board:routes\");\n\nconst router = express.Router();\n\nrouter.get(\"/:slug\", isLoggedIn, async (req, res) => {\n  const { slug } = req.params;\n  log(`Fetching data for board with slug ${slug}.`);\n\n  if (!req.currentUser?.uid) {\n    const cachedBoard = await cache().hget(CacheKeys.BOARD, slug);\n    if (cachedBoard) {\n      log(`Returning cached data for board ${slug}`);\n      return res.status(200).json(JSON.parse(cachedBoard));\n    }\n  }\n\n  const boardMetadata = await getBoardMetadata({\n    firebaseId: req.currentUser?.uid,\n    slug,\n  });\n\n  if (!boardMetadata) {\n    res.sendStatus(404);\n    return;\n  }\n\n  log(`Returning data for board ${slug} for user ${req.currentUser?.uid}.`);\n  res.status(200).json(boardMetadata);\n});\n\nrouter.post(\"/:slug/metadata/update\", isLoggedIn, async (req, res) => {\n  const { slug } = req.params;\n  const { descriptions, accentColor, tagline } = req.body;\n\n  // @ts-ignore\n  if (!req.currentUser) {\n    return res.sendStatus(401);\n  }\n\n  const board = await getBoardBySlug({\n    // @ts-ignore\n    firebaseId: req.currentUser?.uid,\n    slug,\n  });\n  log(`Found board`, board);\n\n  if (!board) {\n    // TOOD: add error log\n    return res.sendStatus(404);\n  }\n\n  if (!canEditBoard(board.permissions)) {\n    // TOOD: add error log\n    return res.sendStatus(403);\n  }\n\n  const newMetadata = await updateBoardMetadata({\n    slug,\n    // @ts-ignore\n    firebaseId: req.currentUser?.uid,\n    oldMetadata: board,\n    newMetadata: { descriptions, settings: { accentColor }, tagline },\n  });\n\n  if (!newMetadata) {\n    res.sendStatus(500);\n    return;\n  }\n\n  await cache().hdel(CacheKeys.BOARD, slug);\n  res.status(200).json(\n    processBoardMetadata({\n      metadata: newMetadata,\n      isLoggedIn: !!req.currentUser?.uid,\n    })\n  );\n});\n\nrouter.get(\"/:slug/visit\", isLoggedIn, async (req, res) => {\n  const { slug } = req.params;\n  // @ts-ignore\n  if (!req.currentUser) {\n    // TODO: fix wrong status\n    return res.sendStatus(401);\n  }\n  log(`Setting last visited time for board: ${slug}`);\n\n  if (\n    !(await markBoardVisit({\n      // @ts-ignore\n      firebaseId: req.currentUser.uid,\n      slug,\n    }))\n  ) {\n    res.sendStatus(500);\n    return;\n  }\n\n  log(`Marked last visited time for board: ${slug}.`);\n  res.status(200).json();\n});\n\nrouter.post(\"/:slug/mute\", isLoggedIn, async (req, res) => {\n  const { slug } = req.params;\n  // @ts-ignore\n  if (!req.currentUser) {\n    return res.sendStatus(401);\n  }\n  log(`Setting board muted: ${slug}`);\n\n  if (\n    !(await muteBoard({\n      // @ts-ignore\n      firebaseId: req.currentUser.uid,\n      slug,\n    }))\n  ) {\n    res.sendStatus(500);\n    return;\n  }\n\n  // @ts-ignore\n  info(`Muted board: ${slug} for user ${req.currentUser.uid}.`);\n  res.status(200).json();\n});\n\nrouter.post(\"/:slug/unmute\", isLoggedIn, async (req, res) => {\n  const { slug } = req.params;\n  // @ts-ignore\n  if (!req.currentUser) {\n    return res.sendStatus(401);\n  }\n  log(`Setting board unmuted: ${slug}`);\n\n  if (\n    !(await unmuteBoard({\n      // @ts-ignore\n      firebaseId: req.currentUser.uid,\n      slug,\n    }))\n  ) {\n    res.sendStatus(500);\n    return;\n  }\n\n  // @ts-ignore\n  info(`Unmuted board: ${slug} for user ${req.currentUser.uid}.`);\n  res.status(200).json();\n});\n\nrouter.post(\"/:slug/pin\", isLoggedIn, async (req, res) => {\n  const { slug } = req.params;\n  // @ts-ignore\n  if (!req.currentUser) {\n    return res.sendStatus(401);\n  }\n  log(`Setting board pinned: ${slug}`);\n\n  if (\n    !(await pinBoard({\n      // @ts-ignore\n      firebaseId: req.currentUser.uid,\n      slug,\n    }))\n  ) {\n    res.sendStatus(500);\n    return;\n  }\n\n  // @ts-ignore\n  info(`Pinned board: ${slug} for user ${req.currentUser.uid}.`);\n  res.status(200).json();\n});\n\nrouter.post(\"/:slug/unpin\", isLoggedIn, async (req, res) => {\n  const { slug } = req.params;\n  if (!req.currentUser) {\n    return res.sendStatus(401);\n  }\n  log(`Setting board unmuted: ${slug}`);\n\n  if (\n    !(await unpinBoard({\n      firebaseId: req.currentUser?.uid,\n      slug,\n    }))\n  ) {\n    res.sendStatus(500);\n    return;\n  }\n\n  info(`Unpinned board: ${slug} for user ${req.currentUser?.uid}.`);\n  res.status(200).json();\n});\n\nrouter.post(\"/:slug/notifications/dismiss\", isLoggedIn, async (req, res) => {\n  const { slug } = req.params;\n  // @ts-ignore\n  let currentUserId: string = req.currentUser?.uid;\n  if (!currentUserId) {\n    res.sendStatus(401);\n    return;\n  }\n  log(`Dismissing ${slug} notifications for firebase id: ${currentUserId}`);\n  const dismissSuccessful = await dismissBoardNotifications({\n    slug,\n    firebaseId: currentUserId,\n  });\n\n  if (!dismissSuccessful) {\n    log(`Dismiss failed`);\n    return res.sendStatus(500);\n  }\n\n  info(`Dismiss successful`);\n\n  res.sendStatus(204);\n});\n\nrouter.get(\"/:slug/activity/latest\", isLoggedIn, async (req, res) => {\n  const { slug } = req.params;\n  const { cursor, categoryFilter } = req.query;\n  log(\n    `Fetching activity data for board with slug ${slug} with cursor ${cursor} and filtered category \"${categoryFilter}\"`\n  );\n\n  if (!(await canAccessBoard({ slug, firebaseId: req.currentUser?.uid }))) {\n    // TOOD: add error log\n    return res.sendStatus(403);\n  }\n\n  const result = await getBoardActivityBySlug({\n    slug,\n    firebaseId: req.currentUser?.uid,\n    filterCategory: (categoryFilter as string) || null,\n    cursor: (cursor as string) || null,\n  });\n  info(`Found activity for board ${slug}:`, result);\n\n  if (result === false) {\n    res.sendStatus(500);\n    return;\n  }\n  if (!result) {\n    res.sendStatus(404);\n    return;\n  }\n  if (!result.activity.length) {\n    res.sendStatus(204);\n    return;\n  }\n\n  const threadsWithIdentity = result.activity.map(\n    (thread): ServerThreadType => {\n      const threadWithIdentity = mergeObjectIdentity<DbActivityThreadType>(\n        thread\n      );\n      return {\n        posts: [\n          {\n            post_id: threadWithIdentity.post_id,\n            parent_thread_id: threadWithIdentity.thread_id,\n            parent_post_id: threadWithIdentity.parent_post_id,\n            secret_identity: threadWithIdentity.secret_identity,\n            user_identity: threadWithIdentity.user_identity,\n            accessory_avatar: threadWithIdentity.accessory_avatar,\n            self: threadWithIdentity.self,\n            friend: threadWithIdentity.friend,\n            created: threadWithIdentity.created,\n            content: threadWithIdentity.content,\n            options: threadWithIdentity.options,\n            tags: {\n              whisper_tags: threadWithIdentity.whisper_tags,\n              index_tags: threadWithIdentity.index_tags,\n              category_tags: threadWithIdentity.category_tags,\n              content_warnings: threadWithIdentity.content_warnings,\n            },\n            total_comments_amount: threadWithIdentity.comments_amount,\n            new_comments_amount: threadWithIdentity.new_comments_amount,\n            is_new: threadWithIdentity.is_new,\n          },\n        ],\n        default_view: threadWithIdentity.default_view,\n        thread_id: threadWithIdentity.thread_id,\n        board_slug: slug,\n        thread_new_posts_amount: threadWithIdentity.new_posts_amount,\n        thread_new_comments_amount: threadWithIdentity.new_comments_amount,\n        thread_total_comments_amount: threadWithIdentity.comments_amount,\n        thread_total_posts_amount: threadWithIdentity.posts_amount,\n        thread_last_activity: threadWithIdentity.thread_last_activity,\n        thread_direct_threads_amount: threadWithIdentity.threads_amount,\n        muted: threadWithIdentity.muted,\n        hidden: threadWithIdentity.hidden,\n      };\n    }\n  );\n  const response: {\n    next_page_cursor: string;\n    activity: ServerThreadType[];\n  } = { next_page_cursor: result.cursor, activity: threadsWithIdentity };\n\n  response.activity.map((post) => ensureNoIdentityLeakage(post));\n  log(\n    `Returning board activity data for board ${slug} for user ${req.currentUser?.uid}.`\n  );\n  res.status(200).json(response);\n});\n\nrouter.get(\"/\", isLoggedIn, async (req, res) => {\n  if (!req.currentUser?.uid) {\n    // Only get cache for non-logged in users, because for logged in users this\n    // method also returns updates.\n    const cachedBoards = await cache().get(CacheKeys.BOARDS);\n    if (cachedBoards) {\n      info(`Returning cached result for all boards.`);\n      res.status(200).json(JSON.parse(cachedBoards));\n      return;\n    }\n  }\n\n  const boards = await getBoards({\n    // @ts-ignore\n    firebaseId: req.currentUser?.uid,\n  });\n  if (!boards) {\n    res.status(500);\n  }\n\n  const boardsResponse = processBoardsMetadata({\n    boards,\n    isLoggedIn: !!req.currentUser?.uid,\n  });\n  log(`Returning all boards for user ${req.currentUser?.uid}`);\n  res.status(200).json(boardsResponse);\n\n  if (!req.currentUser?.uid) {\n    cache().set(CacheKeys.BOARDS, JSON.stringify(boardsResponse));\n  }\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9dfcc552fbd28b17eda05c82bf2d84f3bc5a9223","contentHash":"a659601dcb4321a492ee9c48aac204b9c12894712399a7f9098d27c8fd96c20f"},"/Users/esra/projects/programming/bobaserver/server/auth-handler.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/auth-handler.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":67}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":49}},"6":{"start":{"line":9,"column":12},"end":{"line":9,"column":50}},"7":{"start":{"line":10,"column":14},"end":{"line":10,"column":54}},"8":{"start":{"line":11,"column":0},"end":{"line":38,"column":2}},"9":{"start":{"line":13,"column":20},"end":{"line":13,"column":92}},"10":{"start":{"line":14,"column":4},"end":{"line":18,"column":5}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":68}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":15}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":15}},"14":{"start":{"line":19,"column":4},"end":{"line":37,"column":7}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":62}},"16":{"start":{"line":25,"column":8},"end":{"line":25,"column":39}},"17":{"start":{"line":26,"column":8},"end":{"line":30,"column":9}},"18":{"start":{"line":27,"column":12},"end":{"line":27,"column":95}},"19":{"start":{"line":29,"column":12},"end":{"line":29,"column":58}},"20":{"start":{"line":31,"column":8},"end":{"line":31,"column":15}},"21":{"start":{"line":34,"column":8},"end":{"line":34,"column":57}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":17}},"23":{"start":{"line":36,"column":8},"end":{"line":36,"column":15}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":21},"end":{"line":11,"column":22}},"loc":{"start":{"line":11,"column":41},"end":{"line":38,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":14},"end":{"line":22,"column":15}},"loc":{"start":{"line":22,"column":32},"end":{"line":32,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":15},"end":{"line":33,"column":16}},"loc":{"start":{"line":33,"column":22},"end":{"line":37,"column":5}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":13,"column":20},"end":{"line":13,"column":92}},"type":"cond-expr","locations":[{"start":{"line":13,"column":67},"end":{"line":13,"column":73}},{"start":{"line":13,"column":76},"end":{"line":13,"column":92}}],"line":13},"4":{"loc":{"start":{"line":13,"column":20},"end":{"line":13,"column":64}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":47}},{"start":{"line":13,"column":51},"end":{"line":13,"column":64}}],"line":13},"5":{"loc":{"start":{"line":14,"column":4},"end":{"line":18,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":18,"column":5}},{"start":{"line":14,"column":4},"end":{"line":18,"column":5}}],"line":14},"6":{"loc":{"start":{"line":26,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":30,"column":9}},{"start":{"line":26,"column":8},"end":{"line":30,"column":9}}],"line":26},"7":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":75}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":48}},{"start":{"line":26,"column":52},"end":{"line":26,"column":75}}],"line":26}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":6,"10":6,"11":6,"12":6,"13":6,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"f":{"0":2,"1":6,"2":0,"3":0},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2],"3":[0,6],"4":[6,6],"5":[6,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/auth-handler.ts","sources":["/Users/esra/projects/programming/bobaserver/server/auth-handler.ts"],"names":[],"mappings":";;;;;;AAAA,oEAAoD;AAEpD,kDAA0B;AAE1B,MAAM,GAAG,GAAG,eAAK,CAAC,qBAAqB,CAAC,CAAC;AACzC,MAAM,KAAK,GAAG,eAAK,CAAC,uBAAuB,CAAC,CAAC;AAUhC,QAAA,UAAU,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;;IAC5E,MAAM,OAAO,SAAG,GAAG,CAAC,OAAO,0CAAE,aAAa,CAAC;IAC3C,IAAI,CAAC,OAAO,EAAE;QACZ,GAAG,CAAC,sDAAsD,CAAC,CAAC;QAC5D,IAAI,EAAE,CAAC;QACP,OAAO;KACR;IACD,wBAAY;SACT,IAAI,EAAE;SACN,aAAa,CAAC,OAAO,CAAC;SACtB,IAAI,CAAC,CAAC,YAAY,EAAE,EAAE;QACrB,GAAG,CAAC,8BAA8B,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC;QACtD,aAAa;QACb,GAAG,CAAC,WAAW,GAAG,YAAY,CAAC;QAC/B,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE;YACnE,GAAG,CACD,mDAAmD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAC9E,CAAC;YACF,aAAa;YACb,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;SAC/C;QACD,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;SACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;QACX,KAAK,CAAC,yCAAyC,CAAC,CAAC;QACjD,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;AACP,CAAC,CAAC","sourcesContent":["import firebaseAuth, { auth } from \"firebase-admin\";\nimport { Request, Response, NextFunction } from \"express\";\nimport debug from \"debug\";\n\nconst log = debug(\"bobaserver:auth-log\");\nconst error = debug(\"bobaserver:auth-error\");\n\ndeclare global {\n  namespace Express {\n    export interface Request {\n      currentUser?: auth.DecodedIdToken;\n    }\n  }\n}\n\nexport const isLoggedIn = (req: Request, res: Response, next: NextFunction) => {\n  const idToken = req.headers?.authorization;\n  if (!idToken) {\n    log(\"No id token found in request. User is not logged in.\");\n    next();\n    return;\n  }\n  firebaseAuth\n    .auth()\n    .verifyIdToken(idToken)\n    .then((decodedToken) => {\n      log(`Found id token in request: ${decodedToken.uid}`);\n      // @ts-ignore\n      req.currentUser = decodedToken;\n      if (process.env.NODE_ENV != \"production\" && process.env.FORCED_USER) {\n        log(\n          `Overriding user id with locally configured one (${process.env.FORCED_USER})`\n        );\n        // @ts-ignore\n        req.currentUser.uid = process.env.FORCED_USER;\n      }\n      next();\n    })\n    .catch((e) => {\n      error(\"Error during verification. No user set.\");\n      error(e);\n      next();\n    });\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eefb51300484270c52c8e5d2276c9b0d1c6ec7c1","contentHash":"94f9c8a85d12b10df8962ba52ac8e5ddd9161ba5d1cd6f9337a01364a4e8307f"},"/Users/esra/projects/programming/bobaserver/server/test-utils.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/test-utils.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":49}},"17":{"start":{"line":17,"column":0},"end":{"line":22,"column":3}},"18":{"start":{"line":17,"column":41},"end":{"line":22,"column":2}},"19":{"start":{"line":18,"column":4},"end":{"line":21,"column":8}},"20":{"start":{"line":18,"column":55},"end":{"line":21,"column":6}},"21":{"start":{"line":19,"column":8},"end":{"line":19,"column":22}},"22":{"start":{"line":20,"column":8},"end":{"line":20,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":31},"end":{"line":17,"column":32}},"loc":{"start":{"line":17,"column":41},"end":{"line":22,"column":2}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":17,"column":75},"end":{"line":17,"column":76}},"loc":{"start":{"line":17,"column":88},"end":{"line":22,"column":1}},"line":17},"10":{"name":"(anonymous_10)","decl":{"start":{"line":18,"column":48},"end":{"line":18,"column":49}},"loc":{"start":{"line":18,"column":55},"end":{"line":21,"column":6}},"line":18},"11":{"name":"(anonymous_11)","decl":{"start":{"line":18,"column":89},"end":{"line":18,"column":90}},"loc":{"start":{"line":18,"column":102},"end":{"line":21,"column":5}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":18,"2":0,"3":12,"4":18,"5":18,"6":0,"7":0,"8":0,"9":0,"10":30,"11":12,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":6,"19":6,"20":6,"21":6,"22":6},"f":{"0":12,"1":18,"2":0,"3":12,"4":18,"5":0,"6":30,"7":1,"8":6,"9":6,"10":6,"11":6},"b":{"0":[1,1,1],"1":[18,0],"2":[12,12],"3":[12,18],"4":[12,12],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/test-utils.ts","sources":["/Users/esra/projects/programming/bobaserver/server/test-utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,kDAA0B;AAEb,QAAA,oBAAoB,GAAG,CAClC,IAAuC,EACvC,EAAE;IACF,MAAM,cAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAO,CAAC,EAAE,EAAE;QAC5C,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC5B,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAA,CAAC","sourcesContent":["import { ITask } from \"pg-promise\";\nimport pool from \"./pool\";\n\nexport const runWithinTransaction = async (\n  test: (transaction: ITask<any>) => void\n) => {\n  await pool.tx(\"test-transaction\", async (t) => {\n    await test(t);\n    await t.none(\"ROLLBACK;\");\n  });\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c87e0bdfc16be4faed5612269858f8ceb8140fd6","contentHash":"48f0e3043015d3e45416d0eb4581f7cc80c939a8d9106bc34be138c268475968"},"/Users/esra/projects/programming/bobaserver/server/posts/queries.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/posts/queries.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":430}},"16":{"start":{"line":16,"column":16},"end":{"line":16,"column":49}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":50}},"18":{"start":{"line":18,"column":15},"end":{"line":18,"column":30}},"19":{"start":{"line":19,"column":14},"end":{"line":19,"column":47}},"20":{"start":{"line":20,"column":14},"end":{"line":20,"column":56}},"21":{"start":{"line":21,"column":16},"end":{"line":21,"column":38}},"22":{"start":{"line":22,"column":28},"end":{"line":22,"column":59}},"23":{"start":{"line":23,"column":18},"end":{"line":23,"column":46}},"24":{"start":{"line":24,"column":12},"end":{"line":24,"column":59}},"25":{"start":{"line":25,"column":14},"end":{"line":25,"column":63}},"26":{"start":{"line":26,"column":0},"end":{"line":37,"column":3}},"27":{"start":{"line":26,"column":69},"end":{"line":37,"column":2}},"28":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"29":{"start":{"line":28,"column":8},"end":{"line":28,"column":18}},"30":{"start":{"line":30,"column":17},"end":{"line":32,"column":33}},"31":{"start":{"line":31,"column":25},"end":{"line":31,"column":44}},"32":{"start":{"line":32,"column":22},"end":{"line":32,"column":32}},"33":{"start":{"line":33,"column":4},"end":{"line":33,"column":73}},"34":{"start":{"line":34,"column":4},"end":{"line":34,"column":27}},"35":{"start":{"line":35,"column":4},"end":{"line":35,"column":81}},"36":{"start":{"line":36,"column":4},"end":{"line":36,"column":48}},"37":{"start":{"line":36,"column":29},"end":{"line":36,"column":46}},"38":{"start":{"line":38,"column":0},"end":{"line":49,"column":3}},"39":{"start":{"line":38,"column":67},"end":{"line":49,"column":2}},"40":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"41":{"start":{"line":40,"column":8},"end":{"line":40,"column":15}},"42":{"start":{"line":42,"column":17},"end":{"line":44,"column":47}},"43":{"start":{"line":43,"column":25},"end":{"line":43,"column":44}},"44":{"start":{"line":44,"column":22},"end":{"line":44,"column":46}},"45":{"start":{"line":45,"column":4},"end":{"line":48,"column":7}},"46":{"start":{"line":50,"column":0},"end":{"line":61,"column":3}},"47":{"start":{"line":50,"column":75},"end":{"line":61,"column":2}},"48":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"49":{"start":{"line":52,"column":8},"end":{"line":52,"column":18}},"50":{"start":{"line":54,"column":17},"end":{"line":56,"column":33}},"51":{"start":{"line":55,"column":25},"end":{"line":55,"column":44}},"52":{"start":{"line":56,"column":22},"end":{"line":56,"column":32}},"53":{"start":{"line":57,"column":4},"end":{"line":57,"column":79}},"54":{"start":{"line":58,"column":4},"end":{"line":58,"column":27}},"55":{"start":{"line":59,"column":4},"end":{"line":59,"column":87}},"56":{"start":{"line":60,"column":4},"end":{"line":60,"column":48}},"57":{"start":{"line":60,"column":29},"end":{"line":60,"column":46}},"58":{"start":{"line":62,"column":0},"end":{"line":73,"column":3}},"59":{"start":{"line":62,"column":73},"end":{"line":73,"column":2}},"60":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"61":{"start":{"line":64,"column":8},"end":{"line":64,"column":15}},"62":{"start":{"line":66,"column":17},"end":{"line":68,"column":47}},"63":{"start":{"line":67,"column":25},"end":{"line":67,"column":44}},"64":{"start":{"line":68,"column":22},"end":{"line":68,"column":46}},"65":{"start":{"line":69,"column":4},"end":{"line":72,"column":7}},"66":{"start":{"line":74,"column":0},"end":{"line":85,"column":3}},"67":{"start":{"line":74,"column":84},"end":{"line":85,"column":2}},"68":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"69":{"start":{"line":76,"column":8},"end":{"line":76,"column":18}},"70":{"start":{"line":78,"column":17},"end":{"line":80,"column":33}},"71":{"start":{"line":79,"column":25},"end":{"line":79,"column":44}},"72":{"start":{"line":80,"column":22},"end":{"line":80,"column":32}},"73":{"start":{"line":81,"column":4},"end":{"line":81,"column":84}},"74":{"start":{"line":82,"column":4},"end":{"line":82,"column":27}},"75":{"start":{"line":83,"column":4},"end":{"line":83,"column":92}},"76":{"start":{"line":84,"column":4},"end":{"line":84,"column":48}},"77":{"start":{"line":84,"column":29},"end":{"line":84,"column":46}},"78":{"start":{"line":86,"column":0},"end":{"line":97,"column":3}},"79":{"start":{"line":86,"column":82},"end":{"line":97,"column":2}},"80":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"81":{"start":{"line":88,"column":8},"end":{"line":88,"column":15}},"82":{"start":{"line":90,"column":17},"end":{"line":92,"column":47}},"83":{"start":{"line":91,"column":25},"end":{"line":91,"column":44}},"84":{"start":{"line":92,"column":22},"end":{"line":92,"column":46}},"85":{"start":{"line":93,"column":4},"end":{"line":96,"column":7}},"86":{"start":{"line":98,"column":0},"end":{"line":103,"column":3}},"87":{"start":{"line":98,"column":71},"end":{"line":103,"column":2}},"88":{"start":{"line":99,"column":4},"end":{"line":102,"column":7}},"89":{"start":{"line":105,"column":25},"end":{"line":154,"column":2}},"90":{"start":{"line":105,"column":102},"end":{"line":154,"column":2}},"91":{"start":{"line":106,"column":233},"end":{"line":110,"column":6}},"92":{"start":{"line":111,"column":4},"end":{"line":111,"column":37}},"93":{"start":{"line":112,"column":4},"end":{"line":123,"column":7}},"94":{"start":{"line":124,"column":4},"end":{"line":139,"column":5}},"95":{"start":{"line":125,"column":8},"end":{"line":138,"column":12}},"96":{"start":{"line":140,"column":4},"end":{"line":153,"column":6}},"97":{"start":{"line":155,"column":0},"end":{"line":227,"column":3}},"98":{"start":{"line":155,"column":165},"end":{"line":227,"column":2}},"99":{"start":{"line":156,"column":4},"end":{"line":226,"column":7}},"100":{"start":{"line":157,"column":42},"end":{"line":221,"column":6}},"101":{"start":{"line":158,"column":187},"end":{"line":162,"column":10}},"102":{"start":{"line":163,"column":23},"end":{"line":174,"column":10}},"103":{"start":{"line":175,"column":8},"end":{"line":175,"column":62}},"104":{"start":{"line":176,"column":8},"end":{"line":176,"column":20}},"105":{"start":{"line":177,"column":28},"end":{"line":180,"column":10}},"106":{"start":{"line":181,"column":35},"end":{"line":184,"column":10}},"107":{"start":{"line":185,"column":38},"end":{"line":188,"column":10}},"108":{"start":{"line":189,"column":8},"end":{"line":220,"column":10}},"109":{"start":{"line":223,"column":8},"end":{"line":223,"column":52}},"110":{"start":{"line":224,"column":8},"end":{"line":224,"column":17}},"111":{"start":{"line":225,"column":8},"end":{"line":225,"column":21}},"112":{"start":{"line":228,"column":38},"end":{"line":279,"column":2}},"113":{"start":{"line":228,"column":154},"end":{"line":279,"column":2}},"114":{"start":{"line":229,"column":165},"end":{"line":234,"column":6}},"115":{"start":{"line":235,"column":4},"end":{"line":235,"column":57}},"116":{"start":{"line":236,"column":4},"end":{"line":245,"column":7}},"117":{"start":{"line":246,"column":19},"end":{"line":255,"column":6}},"118":{"start":{"line":256,"column":4},"end":{"line":278,"column":6}},"119":{"start":{"line":280,"column":0},"end":{"line":300,"column":3}},"120":{"start":{"line":280,"column":113},"end":{"line":300,"column":2}},"121":{"start":{"line":281,"column":4},"end":{"line":299,"column":7}},"122":{"start":{"line":282,"column":47},"end":{"line":294,"column":6}},"123":{"start":{"line":283,"column":23},"end":{"line":292,"column":10}},"124":{"start":{"line":293,"column":8},"end":{"line":293,"column":30}},"125":{"start":{"line":296,"column":8},"end":{"line":296,"column":47}},"126":{"start":{"line":297,"column":8},"end":{"line":297,"column":17}},"127":{"start":{"line":298,"column":8},"end":{"line":298,"column":21}},"128":{"start":{"line":301,"column":0},"end":{"line":330,"column":3}},"129":{"start":{"line":301,"column":123},"end":{"line":330,"column":2}},"130":{"start":{"line":302,"column":4},"end":{"line":329,"column":7}},"131":{"start":{"line":303,"column":53},"end":{"line":324,"column":6}},"132":{"start":{"line":304,"column":21},"end":{"line":304,"column":25}},"133":{"start":{"line":305,"column":27},"end":{"line":305,"column":31}},"134":{"start":{"line":306,"column":25},"end":{"line":306,"column":27}},"135":{"start":{"line":307,"column":8},"end":{"line":322,"column":9}},"136":{"start":{"line":308,"column":31},"end":{"line":317,"column":14}},"137":{"start":{"line":318,"column":12},"end":{"line":318,"column":62}},"138":{"start":{"line":319,"column":12},"end":{"line":319,"column":35}},"139":{"start":{"line":320,"column":12},"end":{"line":320,"column":57}},"140":{"start":{"line":321,"column":12},"end":{"line":321,"column":46}},"141":{"start":{"line":323,"column":8},"end":{"line":323,"column":24}},"142":{"start":{"line":326,"column":8},"end":{"line":326,"column":47}},"143":{"start":{"line":327,"column":8},"end":{"line":327,"column":17}},"144":{"start":{"line":328,"column":8},"end":{"line":328,"column":21}},"145":{"start":{"line":331,"column":31},"end":{"line":345,"column":2}},"146":{"start":{"line":331,"column":95},"end":{"line":345,"column":2}},"147":{"start":{"line":332,"column":4},"end":{"line":334,"column":5}},"148":{"start":{"line":333,"column":8},"end":{"line":333,"column":76}},"149":{"start":{"line":335,"column":22},"end":{"line":335,"column":77}},"150":{"start":{"line":336,"column":4},"end":{"line":341,"column":7}},"151":{"start":{"line":342,"column":4},"end":{"line":344,"column":6}},"152":{"start":{"line":346,"column":0},"end":{"line":409,"column":3}},"153":{"start":{"line":346,"column":111},"end":{"line":409,"column":2}},"154":{"start":{"line":347,"column":29},"end":{"line":347,"column":33}},"155":{"start":{"line":348,"column":27},"end":{"line":348,"column":31}},"156":{"start":{"line":352,"column":4},"end":{"line":376,"column":5}},"157":{"start":{"line":356,"column":27},"end":{"line":360,"column":10}},"158":{"start":{"line":361,"column":8},"end":{"line":363,"column":9}},"159":{"start":{"line":362,"column":12},"end":{"line":362,"column":101}},"160":{"start":{"line":364,"column":8},"end":{"line":364,"column":41}},"161":{"start":{"line":365,"column":8},"end":{"line":365,"column":47}},"162":{"start":{"line":366,"column":8},"end":{"line":366,"column":64}},"163":{"start":{"line":367,"column":8},"end":{"line":367,"column":49}},"164":{"start":{"line":370,"column":37},"end":{"line":372,"column":10}},"165":{"start":{"line":373,"column":8},"end":{"line":373,"column":69}},"166":{"start":{"line":374,"column":8},"end":{"line":374,"column":73}},"167":{"start":{"line":375,"column":8},"end":{"line":375,"column":77}},"168":{"start":{"line":379,"column":4},"end":{"line":379,"column":38}},"169":{"start":{"line":380,"column":4},"end":{"line":386,"column":7}},"170":{"start":{"line":387,"column":4},"end":{"line":392,"column":7}},"171":{"start":{"line":401,"column":4},"end":{"line":408,"column":6}},"172":{"start":{"line":410,"column":0},"end":{"line":436,"column":3}},"173":{"start":{"line":410,"column":65},"end":{"line":436,"column":2}},"174":{"start":{"line":411,"column":4},"end":{"line":435,"column":5}},"175":{"start":{"line":412,"column":21},"end":{"line":415,"column":10}},"176":{"start":{"line":416,"column":8},"end":{"line":418,"column":9}},"177":{"start":{"line":417,"column":12},"end":{"line":417,"column":22}},"178":{"start":{"line":419,"column":8},"end":{"line":426,"column":9}},"179":{"start":{"line":420,"column":12},"end":{"line":425,"column":14}},"180":{"start":{"line":427,"column":22},"end":{"line":430,"column":10}},"181":{"start":{"line":431,"column":8},"end":{"line":431,"column":79}},"182":{"start":{"line":434,"column":8},"end":{"line":434,"column":21}},"183":{"start":{"line":437,"column":0},"end":{"line":442,"column":3}},"184":{"start":{"line":437,"column":72},"end":{"line":442,"column":2}},"185":{"start":{"line":438,"column":4},"end":{"line":441,"column":7}},"186":{"start":{"line":443,"column":0},"end":{"line":491,"column":3}},"187":{"start":{"line":443,"column":78},"end":{"line":491,"column":2}},"188":{"start":{"line":444,"column":29},"end":{"line":481,"column":6}},"189":{"start":{"line":444,"column":46},"end":{"line":481,"column":6}},"190":{"start":{"line":445,"column":21},"end":{"line":445,"column":91}},"191":{"start":{"line":446,"column":26},"end":{"line":448,"column":14}},"192":{"start":{"line":449,"column":8},"end":{"line":452,"column":11}},"193":{"start":{"line":453,"column":8},"end":{"line":456,"column":11}},"194":{"start":{"line":457,"column":8},"end":{"line":460,"column":11}},"195":{"start":{"line":461,"column":8},"end":{"line":464,"column":11}},"196":{"start":{"line":465,"column":8},"end":{"line":468,"column":11}},"197":{"start":{"line":469,"column":8},"end":{"line":472,"column":11}},"198":{"start":{"line":473,"column":31},"end":{"line":475,"column":48}},"199":{"start":{"line":474,"column":29},"end":{"line":474,"column":73}},"200":{"start":{"line":476,"column":8},"end":{"line":479,"column":11}},"201":{"start":{"line":480,"column":8},"end":{"line":480,"column":86}},"202":{"start":{"line":482,"column":4},"end":{"line":490,"column":5}},"203":{"start":{"line":483,"column":8},"end":{"line":485,"column":66}},"204":{"start":{"line":488,"column":8},"end":{"line":488,"column":15}},"205":{"start":{"line":489,"column":8},"end":{"line":489,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":26,"column":28},"end":{"line":26,"column":29}},"loc":{"start":{"line":26,"column":69},"end":{"line":37,"column":2}},"line":26},"9":{"name":"(anonymous_9)","decl":{"start":{"line":26,"column":103},"end":{"line":26,"column":104}},"loc":{"start":{"line":26,"column":116},"end":{"line":37,"column":1}},"line":26},"10":{"name":"(anonymous_10)","decl":{"start":{"line":31,"column":16},"end":{"line":31,"column":17}},"loc":{"start":{"line":31,"column":25},"end":{"line":31,"column":44}},"line":31},"11":{"name":"(anonymous_11)","decl":{"start":{"line":32,"column":13},"end":{"line":32,"column":14}},"loc":{"start":{"line":32,"column":22},"end":{"line":32,"column":32}},"line":32},"12":{"name":"(anonymous_12)","decl":{"start":{"line":36,"column":20},"end":{"line":36,"column":21}},"loc":{"start":{"line":36,"column":29},"end":{"line":36,"column":46}},"line":36},"13":{"name":"(anonymous_13)","decl":{"start":{"line":38,"column":26},"end":{"line":38,"column":27}},"loc":{"start":{"line":38,"column":67},"end":{"line":49,"column":2}},"line":38},"14":{"name":"(anonymous_14)","decl":{"start":{"line":38,"column":101},"end":{"line":38,"column":102}},"loc":{"start":{"line":38,"column":114},"end":{"line":49,"column":1}},"line":38},"15":{"name":"(anonymous_15)","decl":{"start":{"line":43,"column":16},"end":{"line":43,"column":17}},"loc":{"start":{"line":43,"column":25},"end":{"line":43,"column":44}},"line":43},"16":{"name":"(anonymous_16)","decl":{"start":{"line":44,"column":13},"end":{"line":44,"column":14}},"loc":{"start":{"line":44,"column":22},"end":{"line":44,"column":46}},"line":44},"17":{"name":"(anonymous_17)","decl":{"start":{"line":50,"column":31},"end":{"line":50,"column":32}},"loc":{"start":{"line":50,"column":75},"end":{"line":61,"column":2}},"line":50},"18":{"name":"(anonymous_18)","decl":{"start":{"line":50,"column":109},"end":{"line":50,"column":110}},"loc":{"start":{"line":50,"column":122},"end":{"line":61,"column":1}},"line":50},"19":{"name":"(anonymous_19)","decl":{"start":{"line":55,"column":16},"end":{"line":55,"column":17}},"loc":{"start":{"line":55,"column":25},"end":{"line":55,"column":44}},"line":55},"20":{"name":"(anonymous_20)","decl":{"start":{"line":56,"column":13},"end":{"line":56,"column":14}},"loc":{"start":{"line":56,"column":22},"end":{"line":56,"column":32}},"line":56},"21":{"name":"(anonymous_21)","decl":{"start":{"line":60,"column":20},"end":{"line":60,"column":21}},"loc":{"start":{"line":60,"column":29},"end":{"line":60,"column":46}},"line":60},"22":{"name":"(anonymous_22)","decl":{"start":{"line":62,"column":29},"end":{"line":62,"column":30}},"loc":{"start":{"line":62,"column":73},"end":{"line":73,"column":2}},"line":62},"23":{"name":"(anonymous_23)","decl":{"start":{"line":62,"column":107},"end":{"line":62,"column":108}},"loc":{"start":{"line":62,"column":120},"end":{"line":73,"column":1}},"line":62},"24":{"name":"(anonymous_24)","decl":{"start":{"line":67,"column":16},"end":{"line":67,"column":17}},"loc":{"start":{"line":67,"column":25},"end":{"line":67,"column":44}},"line":67},"25":{"name":"(anonymous_25)","decl":{"start":{"line":68,"column":13},"end":{"line":68,"column":14}},"loc":{"start":{"line":68,"column":22},"end":{"line":68,"column":46}},"line":68},"26":{"name":"(anonymous_26)","decl":{"start":{"line":74,"column":37},"end":{"line":74,"column":38}},"loc":{"start":{"line":74,"column":84},"end":{"line":85,"column":2}},"line":74},"27":{"name":"(anonymous_27)","decl":{"start":{"line":74,"column":118},"end":{"line":74,"column":119}},"loc":{"start":{"line":74,"column":131},"end":{"line":85,"column":1}},"line":74},"28":{"name":"(anonymous_28)","decl":{"start":{"line":79,"column":16},"end":{"line":79,"column":17}},"loc":{"start":{"line":79,"column":25},"end":{"line":79,"column":44}},"line":79},"29":{"name":"(anonymous_29)","decl":{"start":{"line":80,"column":13},"end":{"line":80,"column":14}},"loc":{"start":{"line":80,"column":22},"end":{"line":80,"column":32}},"line":80},"30":{"name":"(anonymous_30)","decl":{"start":{"line":84,"column":20},"end":{"line":84,"column":21}},"loc":{"start":{"line":84,"column":29},"end":{"line":84,"column":46}},"line":84},"31":{"name":"(anonymous_31)","decl":{"start":{"line":86,"column":35},"end":{"line":86,"column":36}},"loc":{"start":{"line":86,"column":82},"end":{"line":97,"column":2}},"line":86},"32":{"name":"(anonymous_32)","decl":{"start":{"line":86,"column":116},"end":{"line":86,"column":117}},"loc":{"start":{"line":86,"column":129},"end":{"line":97,"column":1}},"line":86},"33":{"name":"(anonymous_33)","decl":{"start":{"line":91,"column":16},"end":{"line":91,"column":17}},"loc":{"start":{"line":91,"column":25},"end":{"line":91,"column":44}},"line":91},"34":{"name":"(anonymous_34)","decl":{"start":{"line":92,"column":13},"end":{"line":92,"column":14}},"loc":{"start":{"line":92,"column":22},"end":{"line":92,"column":46}},"line":92},"35":{"name":"(anonymous_35)","decl":{"start":{"line":98,"column":28},"end":{"line":98,"column":29}},"loc":{"start":{"line":98,"column":71},"end":{"line":103,"column":2}},"line":98},"36":{"name":"(anonymous_36)","decl":{"start":{"line":98,"column":105},"end":{"line":98,"column":106}},"loc":{"start":{"line":98,"column":118},"end":{"line":103,"column":1}},"line":98},"37":{"name":"(anonymous_37)","decl":{"start":{"line":105,"column":25},"end":{"line":105,"column":26}},"loc":{"start":{"line":105,"column":102},"end":{"line":154,"column":2}},"line":105},"38":{"name":"(anonymous_38)","decl":{"start":{"line":105,"column":136},"end":{"line":105,"column":137}},"loc":{"start":{"line":105,"column":149},"end":{"line":154,"column":1}},"line":105},"39":{"name":"(anonymous_39)","decl":{"start":{"line":155,"column":30},"end":{"line":155,"column":31}},"loc":{"start":{"line":155,"column":165},"end":{"line":227,"column":2}},"line":155},"40":{"name":"(anonymous_40)","decl":{"start":{"line":155,"column":199},"end":{"line":155,"column":200}},"loc":{"start":{"line":155,"column":212},"end":{"line":227,"column":1}},"line":155},"41":{"name":"(anonymous_41)","decl":{"start":{"line":157,"column":35},"end":{"line":157,"column":36}},"loc":{"start":{"line":157,"column":42},"end":{"line":221,"column":6}},"line":157},"42":{"name":"(anonymous_42)","decl":{"start":{"line":157,"column":76},"end":{"line":157,"column":77}},"loc":{"start":{"line":157,"column":89},"end":{"line":221,"column":5}},"line":157},"43":{"name":"(anonymous_43)","decl":{"start":{"line":222,"column":15},"end":{"line":222,"column":16}},"loc":{"start":{"line":222,"column":22},"end":{"line":226,"column":5}},"line":222},"44":{"name":"(anonymous_44)","decl":{"start":{"line":228,"column":38},"end":{"line":228,"column":39}},"loc":{"start":{"line":228,"column":154},"end":{"line":279,"column":2}},"line":228},"45":{"name":"(anonymous_45)","decl":{"start":{"line":228,"column":188},"end":{"line":228,"column":189}},"loc":{"start":{"line":228,"column":201},"end":{"line":279,"column":1}},"line":228},"46":{"name":"(anonymous_46)","decl":{"start":{"line":280,"column":25},"end":{"line":280,"column":26}},"loc":{"start":{"line":280,"column":113},"end":{"line":300,"column":2}},"line":280},"47":{"name":"(anonymous_47)","decl":{"start":{"line":280,"column":147},"end":{"line":280,"column":148}},"loc":{"start":{"line":280,"column":160},"end":{"line":300,"column":1}},"line":280},"48":{"name":"(anonymous_48)","decl":{"start":{"line":282,"column":30},"end":{"line":282,"column":31}},"loc":{"start":{"line":282,"column":47},"end":{"line":294,"column":6}},"line":282},"49":{"name":"(anonymous_49)","decl":{"start":{"line":282,"column":81},"end":{"line":282,"column":82}},"loc":{"start":{"line":282,"column":94},"end":{"line":294,"column":5}},"line":282},"50":{"name":"(anonymous_50)","decl":{"start":{"line":295,"column":15},"end":{"line":295,"column":16}},"loc":{"start":{"line":295,"column":22},"end":{"line":299,"column":5}},"line":295},"51":{"name":"(anonymous_51)","decl":{"start":{"line":301,"column":30},"end":{"line":301,"column":31}},"loc":{"start":{"line":301,"column":123},"end":{"line":330,"column":2}},"line":301},"52":{"name":"(anonymous_52)","decl":{"start":{"line":301,"column":157},"end":{"line":301,"column":158}},"loc":{"start":{"line":301,"column":170},"end":{"line":330,"column":1}},"line":301},"53":{"name":"(anonymous_53)","decl":{"start":{"line":303,"column":36},"end":{"line":303,"column":37}},"loc":{"start":{"line":303,"column":53},"end":{"line":324,"column":6}},"line":303},"54":{"name":"(anonymous_54)","decl":{"start":{"line":303,"column":87},"end":{"line":303,"column":88}},"loc":{"start":{"line":303,"column":100},"end":{"line":324,"column":5}},"line":303},"55":{"name":"(anonymous_55)","decl":{"start":{"line":325,"column":15},"end":{"line":325,"column":16}},"loc":{"start":{"line":325,"column":22},"end":{"line":329,"column":5}},"line":325},"56":{"name":"(anonymous_56)","decl":{"start":{"line":331,"column":31},"end":{"line":331,"column":32}},"loc":{"start":{"line":331,"column":95},"end":{"line":345,"column":2}},"line":331},"57":{"name":"(anonymous_57)","decl":{"start":{"line":331,"column":129},"end":{"line":331,"column":130}},"loc":{"start":{"line":331,"column":142},"end":{"line":345,"column":1}},"line":331},"58":{"name":"(anonymous_58)","decl":{"start":{"line":346,"column":33},"end":{"line":346,"column":34}},"loc":{"start":{"line":346,"column":111},"end":{"line":409,"column":2}},"line":346},"59":{"name":"(anonymous_59)","decl":{"start":{"line":346,"column":145},"end":{"line":346,"column":146}},"loc":{"start":{"line":346,"column":158},"end":{"line":409,"column":1}},"line":346},"60":{"name":"(anonymous_60)","decl":{"start":{"line":410,"column":36},"end":{"line":410,"column":37}},"loc":{"start":{"line":410,"column":65},"end":{"line":436,"column":2}},"line":410},"61":{"name":"(anonymous_61)","decl":{"start":{"line":410,"column":99},"end":{"line":410,"column":100}},"loc":{"start":{"line":410,"column":112},"end":{"line":436,"column":1}},"line":410},"62":{"name":"(anonymous_62)","decl":{"start":{"line":437,"column":30},"end":{"line":437,"column":31}},"loc":{"start":{"line":437,"column":72},"end":{"line":442,"column":2}},"line":437},"63":{"name":"(anonymous_63)","decl":{"start":{"line":437,"column":106},"end":{"line":437,"column":107}},"loc":{"start":{"line":437,"column":119},"end":{"line":442,"column":1}},"line":437},"64":{"name":"(anonymous_64)","decl":{"start":{"line":443,"column":25},"end":{"line":443,"column":26}},"loc":{"start":{"line":443,"column":78},"end":{"line":491,"column":2}},"line":443},"65":{"name":"(anonymous_65)","decl":{"start":{"line":443,"column":112},"end":{"line":443,"column":113}},"loc":{"start":{"line":443,"column":125},"end":{"line":491,"column":1}},"line":443},"66":{"name":"(anonymous_66)","decl":{"start":{"line":444,"column":29},"end":{"line":444,"column":30}},"loc":{"start":{"line":444,"column":46},"end":{"line":481,"column":6}},"line":444},"67":{"name":"(anonymous_67)","decl":{"start":{"line":444,"column":80},"end":{"line":444,"column":81}},"loc":{"start":{"line":444,"column":93},"end":{"line":481,"column":5}},"line":444},"68":{"name":"(anonymous_68)","decl":{"start":{"line":474,"column":20},"end":{"line":474,"column":21}},"loc":{"start":{"line":474,"column":29},"end":{"line":474,"column":73}},"line":474}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{"line":27,"column":4},"end":{"line":29,"column":5}}],"line":27},"9":{"loc":{"start":{"line":27,"column":10},"end":{"line":27,"column":80}},"type":"cond-expr","locations":[{"start":{"line":27,"column":55},"end":{"line":27,"column":61}},{"start":{"line":27,"column":64},"end":{"line":27,"column":80}}],"line":27},"10":{"loc":{"start":{"line":27,"column":10},"end":{"line":27,"column":52}},"type":"binary-expr","locations":[{"start":{"line":27,"column":10},"end":{"line":27,"column":28}},{"start":{"line":27,"column":32},"end":{"line":27,"column":52}}],"line":27},"11":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{"line":39,"column":4},"end":{"line":41,"column":5}}],"line":39},"12":{"loc":{"start":{"line":39,"column":10},"end":{"line":39,"column":80}},"type":"cond-expr","locations":[{"start":{"line":39,"column":55},"end":{"line":39,"column":61}},{"start":{"line":39,"column":64},"end":{"line":39,"column":80}}],"line":39},"13":{"loc":{"start":{"line":39,"column":10},"end":{"line":39,"column":52}},"type":"binary-expr","locations":[{"start":{"line":39,"column":10},"end":{"line":39,"column":28}},{"start":{"line":39,"column":32},"end":{"line":39,"column":52}}],"line":39},"14":{"loc":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},{"start":{"line":51,"column":4},"end":{"line":53,"column":5}}],"line":51},"15":{"loc":{"start":{"line":51,"column":10},"end":{"line":51,"column":89}},"type":"cond-expr","locations":[{"start":{"line":51,"column":61},"end":{"line":51,"column":67}},{"start":{"line":51,"column":70},"end":{"line":51,"column":89}}],"line":51},"16":{"loc":{"start":{"line":51,"column":10},"end":{"line":51,"column":58}},"type":"binary-expr","locations":[{"start":{"line":51,"column":10},"end":{"line":51,"column":31}},{"start":{"line":51,"column":35},"end":{"line":51,"column":58}}],"line":51},"17":{"loc":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},{"start":{"line":63,"column":4},"end":{"line":65,"column":5}}],"line":63},"18":{"loc":{"start":{"line":63,"column":10},"end":{"line":63,"column":89}},"type":"cond-expr","locations":[{"start":{"line":63,"column":61},"end":{"line":63,"column":67}},{"start":{"line":63,"column":70},"end":{"line":63,"column":89}}],"line":63},"19":{"loc":{"start":{"line":63,"column":10},"end":{"line":63,"column":58}},"type":"binary-expr","locations":[{"start":{"line":63,"column":10},"end":{"line":63,"column":31}},{"start":{"line":63,"column":35},"end":{"line":63,"column":58}}],"line":63},"20":{"loc":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},{"start":{"line":75,"column":4},"end":{"line":77,"column":5}}],"line":75},"21":{"loc":{"start":{"line":75,"column":10},"end":{"line":75,"column":98}},"type":"cond-expr","locations":[{"start":{"line":75,"column":67},"end":{"line":75,"column":73}},{"start":{"line":75,"column":76},"end":{"line":75,"column":98}}],"line":75},"22":{"loc":{"start":{"line":75,"column":10},"end":{"line":75,"column":64}},"type":"binary-expr","locations":[{"start":{"line":75,"column":10},"end":{"line":75,"column":34}},{"start":{"line":75,"column":38},"end":{"line":75,"column":64}}],"line":75},"23":{"loc":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},{"start":{"line":87,"column":4},"end":{"line":89,"column":5}}],"line":87},"24":{"loc":{"start":{"line":87,"column":10},"end":{"line":87,"column":98}},"type":"cond-expr","locations":[{"start":{"line":87,"column":67},"end":{"line":87,"column":73}},{"start":{"line":87,"column":76},"end":{"line":87,"column":98}}],"line":87},"25":{"loc":{"start":{"line":87,"column":10},"end":{"line":87,"column":64}},"type":"binary-expr","locations":[{"start":{"line":87,"column":10},"end":{"line":87,"column":34}},{"start":{"line":87,"column":38},"end":{"line":87,"column":64}}],"line":87},"26":{"loc":{"start":{"line":124,"column":4},"end":{"line":139,"column":5}},"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":139,"column":5}},{"start":{"line":124,"column":4},"end":{"line":139,"column":5}}],"line":124},"27":{"loc":{"start":{"line":124,"column":8},"end":{"line":124,"column":48}},"type":"binary-expr","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":25}},{"start":{"line":124,"column":29},"end":{"line":124,"column":48}}],"line":124},"28":{"loc":{"start":{"line":332,"column":4},"end":{"line":334,"column":5}},"type":"if","locations":[{"start":{"line":332,"column":4},"end":{"line":334,"column":5}},{"start":{"line":332,"column":4},"end":{"line":334,"column":5}}],"line":332},"29":{"loc":{"start":{"line":332,"column":8},"end":{"line":332,"column":41}},"type":"binary-expr","locations":[{"start":{"line":332,"column":8},"end":{"line":332,"column":20}},{"start":{"line":332,"column":24},"end":{"line":332,"column":41}}],"line":332},"30":{"loc":{"start":{"line":352,"column":4},"end":{"line":376,"column":5}},"type":"if","locations":[{"start":{"line":352,"column":4},"end":{"line":376,"column":5}},{"start":{"line":352,"column":4},"end":{"line":376,"column":5}}],"line":352},"31":{"loc":{"start":{"line":361,"column":8},"end":{"line":363,"column":9}},"type":"if","locations":[{"start":{"line":361,"column":8},"end":{"line":363,"column":9}},{"start":{"line":361,"column":8},"end":{"line":363,"column":9}}],"line":361},"32":{"loc":{"start":{"line":416,"column":8},"end":{"line":418,"column":9}},"type":"if","locations":[{"start":{"line":416,"column":8},"end":{"line":418,"column":9}},{"start":{"line":416,"column":8},"end":{"line":418,"column":9}}],"line":416},"33":{"loc":{"start":{"line":419,"column":8},"end":{"line":426,"column":9}},"type":"if","locations":[{"start":{"line":419,"column":8},"end":{"line":426,"column":9}},{"start":{"line":419,"column":8},"end":{"line":426,"column":9}}],"line":419},"34":{"loc":{"start":{"line":438,"column":18},"end":{"line":438,"column":95}},"type":"cond-expr","locations":[{"start":{"line":438,"column":67},"end":{"line":438,"column":78}},{"start":{"line":438,"column":81},"end":{"line":438,"column":95}}],"line":438},"35":{"loc":{"start":{"line":438,"column":18},"end":{"line":438,"column":64}},"type":"binary-expr","locations":[{"start":{"line":438,"column":18},"end":{"line":438,"column":38}},{"start":{"line":438,"column":42},"end":{"line":438,"column":64}}],"line":438},"36":{"loc":{"start":{"line":483,"column":22},"end":{"line":485,"column":64}},"type":"cond-expr","locations":[{"start":{"line":484,"column":14},"end":{"line":484,"column":43}},{"start":{"line":485,"column":14},"end":{"line":485,"column":64}}],"line":483}},"s":{"0":1,"1":15,"2":0,"3":11,"4":15,"5":15,"6":0,"7":0,"8":0,"9":0,"10":26,"11":11,"12":1,"13":4,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":2,"28":2,"29":0,"30":2,"31":4,"32":4,"33":2,"34":2,"35":2,"36":2,"37":4,"38":1,"39":1,"40":1,"41":0,"42":1,"43":2,"44":2,"45":1,"46":1,"47":1,"48":1,"49":0,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":1,"68":1,"69":0,"70":1,"71":2,"72":2,"73":1,"74":1,"75":1,"76":1,"77":2,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":1,"88":1,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":1,"184":5,"185":5,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0},"f":{"0":11,"1":15,"2":0,"3":11,"4":15,"5":0,"6":26,"7":4,"8":2,"9":2,"10":4,"11":4,"12":4,"13":1,"14":1,"15":2,"16":2,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":2,"29":2,"30":2,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":5,"63":5,"64":0,"65":0,"66":0,"67":0,"68":0},"b":{"0":[1,1,1],"1":[15,0],"2":[11,11],"3":[11,15],"4":[11,11],"5":[1,1,1],"6":[3,1],"7":[4,4],"8":[0,2],"9":[0,2],"10":[2,2],"11":[0,1],"12":[0,1],"13":[1,1],"14":[0,1],"15":[0,1],"16":[1,1],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,1],"21":[0,1],"22":[1,1],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[5,0],"35":[5,5],"36":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/posts/queries.ts","sources":["/Users/esra/projects/programming/bobaserver/server/posts/queries.ts"],"names":[],"mappings":"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","sourcesContent":["import debug from \"debug\";\nimport pool from \"../pool\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport sql from \"./sql\";\nimport threadsSql from \"../threads/sql\";\nimport {\n  DbPostType,\n  DbCommentType,\n  QueryTagsType,\n  PostPermissions,\n} from \"../../Types\";\nimport { ITask } from \"pg-promise\";\nimport { canPostAs, transformPostPermissions } from \"../permissions-utils\";\nimport { getBoardBySlug } from \"../boards/queries\";\n\nconst log = debug(\"bobaserver:posts:queries-log\");\nconst error = debug(\"bobaserver:posts:queries-error\");\n\nexport const maybeAddIndexTags = async (\n  transaction: ITask<any>,\n  {\n    indexTags,\n    postId,\n  }: {\n    indexTags: string[];\n    postId: number;\n  }\n): Promise<string[]> => {\n  if (!indexTags?.length) {\n    return [];\n  }\n  const tags = indexTags\n    .filter((tag) => !!tag.trim().length)\n    .map((tag) => tag.trim());\n  await transaction.manyOrNone(sql.createAddTagsQuery(tags));\n  log(`Returning tags:`);\n  await transaction.many(sql.createAddTagsToPostQuery(postId, tags));\n\n  return tags.map((tag) => tag.toLowerCase());\n};\n\nexport const removeIndexTags = async (\n  transaction: ITask<any>,\n  {\n    indexTags,\n    postId,\n  }: {\n    indexTags: string[];\n    postId: number;\n  }\n): Promise<void> => {\n  if (!indexTags?.length) {\n    return;\n  }\n  const tags = indexTags\n    .filter((tag) => !!tag.trim().length)\n    .map((tag) => tag.trim().toLowerCase());\n\n  return await transaction.none(sql.deleteTagsFromPost, {\n    post_id: postId,\n    tags,\n  });\n};\n\nexport const maybeAddCategoryTags = async (\n  transaction: ITask<any>,\n  {\n    categoryTags,\n    postId,\n  }: {\n    categoryTags: string[];\n    postId: number;\n  }\n): Promise<string[]> => {\n  if (!categoryTags?.length) {\n    return [];\n  }\n  const tags = categoryTags\n    .filter((tag) => !!tag.trim().length)\n    .map((tag) => tag.trim());\n  await transaction.manyOrNone(sql.createAddCategoriesQuery(tags));\n  log(`Returning tags:`);\n  await transaction.many(sql.createAddCategoriesToPostQuery(postId, tags));\n\n  return tags.map((tag) => tag.toLowerCase());\n};\n\nexport const removeCategoryTags = async (\n  transaction: ITask<any>,\n  {\n    categoryTags,\n    postId,\n  }: {\n    categoryTags: string[];\n    postId: number;\n  }\n): Promise<void> => {\n  if (!categoryTags?.length) {\n    return;\n  }\n  const tags = categoryTags\n    .filter((tag) => !!tag.trim().length)\n    .map((tag) => tag.trim().toLowerCase());\n\n  return await transaction.none(sql.deleteCategoriesFromPost, {\n    post_id: postId,\n    categories: tags,\n  });\n};\n\nexport const maybeAddContentWarningTags = async (\n  transaction: ITask<any>,\n  {\n    contentWarnings,\n    postId,\n  }: {\n    contentWarnings: string[];\n    postId: number;\n  }\n): Promise<string[]> => {\n  if (!contentWarnings?.length) {\n    return [];\n  }\n  const tags = contentWarnings\n    .filter((tag) => !!tag.trim().length)\n    .map((tag) => tag.trim());\n  await transaction.manyOrNone(sql.createAddContentWarningsQuery(tags));\n  log(`Returning tags:`);\n  await transaction.many(sql.createAddContentWarningsToPostQuery(postId, tags));\n\n  return tags.map((tag) => tag.toLowerCase());\n};\n\nexport const removeContentWarningTags = async (\n  transaction: ITask<any>,\n  {\n    contentWarnings,\n    postId,\n  }: {\n    contentWarnings: string[];\n    postId: number;\n  }\n): Promise<void> => {\n  if (!contentWarnings?.length) {\n    return;\n  }\n  const tags = contentWarnings\n    .filter((tag) => !!tag.trim().length)\n    .map((tag) => tag.trim().toLowerCase());\n\n  return await transaction.none(sql.deleteContentWarningsFromPost, {\n    post_id: postId,\n    warnings: tags,\n  });\n};\n\nexport const updateWhisperTags = async (\n  transaction: ITask<any>,\n  {\n    postId,\n    whisperTags,\n  }: {\n    postId: number;\n    whisperTags: string[];\n  }\n): Promise<void> => {\n  return await transaction.none(sql.updatePostWhisperTags, {\n    whisper_tags: whisperTags,\n    post_id: postId,\n  });\n};\n\n// TODO: rename this method since there's a mutation within it.\nconst getThreadDetails = async (\n  transaction: ITask<any>,\n  {\n    parentPostId,\n    firebaseId,\n    parentCommentId,\n    identityId,\n  }: {\n    firebaseId: string;\n    parentPostId: string;\n    parentCommentId?: string;\n    identityId?: string;\n  }\n): Promise<{\n  user_id: number;\n  username: string;\n  user_avatar: string;\n  secret_identity_name: string;\n  secret_identity_avatar: string;\n  secret_identity_color: string;\n  accessory_avatar?: string;\n  thread_id: number;\n  thread_string_id: string;\n  post_id: number;\n  comment_id: number;\n  board_slug: string;\n}> => {\n  let {\n    user_id,\n    username,\n    user_avatar,\n    secret_identity_id,\n    role_identity_id,\n    secret_identity_name,\n    secret_identity_avatar,\n    secret_identity_color,\n    accessory_avatar,\n    thread_id,\n    thread_string_id,\n    post_id,\n    comment_id,\n    board_slug,\n  } = await transaction.one(sql.getThreadDetails, {\n    post_string_id: parentPostId,\n    firebase_id: firebaseId,\n    parent_comment_string_id: parentCommentId,\n  });\n\n  log(`Found details for thread:`);\n  log({\n    user_id,\n    username,\n    user_avatar,\n    secret_identity_id,\n    role_identity_id,\n    secret_identity_name,\n    secret_identity_avatar,\n    thread_id,\n    thread_string_id,\n    post_id,\n  });\n\n  if (!role_identity_id && !secret_identity_id) {\n    ({\n      secret_identity_id,\n      secret_identity_name,\n      secret_identity_avatar,\n      secret_identity_color,\n      role_identity_id,\n      accessory_avatar,\n    } = await addNewIdentityToThread(transaction, {\n      user_id,\n      identityId,\n      thread_id,\n      firebaseId,\n      board_slug,\n    }));\n  }\n\n  return {\n    user_id,\n    username,\n    user_avatar,\n    secret_identity_name,\n    secret_identity_avatar,\n    accessory_avatar,\n    secret_identity_color,\n    thread_id,\n    thread_string_id,\n    post_id,\n    comment_id,\n    board_slug,\n  };\n};\n\nexport const postNewContribution = async ({\n  firebaseId,\n  identityId,\n  parentPostId,\n  content,\n  isLarge,\n  anonymityType,\n  whisperTags,\n  indexTags,\n  contentWarnings,\n  categoryTags,\n}: {\n  firebaseId: string;\n  identityId?: string;\n  parentPostId: string;\n  content: string;\n  isLarge: boolean;\n  anonymityType: string;\n  whisperTags: string[];\n  indexTags: string[];\n  categoryTags: string[];\n  contentWarnings: string[];\n}): Promise<{ contribution: DbPostType; boardSlug: string } | false> => {\n  return pool\n    .tx(\"create-contribution\", async (t) => {\n      let {\n        board_slug,\n        user_id,\n        username,\n        user_avatar,\n        secret_identity_name,\n        secret_identity_avatar,\n        secret_identity_color,\n        accessory_avatar,\n        thread_id,\n        thread_string_id,\n        post_id,\n      } = await getThreadDetails(t, {\n        identityId,\n        parentPostId,\n        firebaseId,\n      });\n      const result = await t.one(sql.makePost, {\n        post_string_id: uuidv4(),\n        parent_post: post_id,\n        parent_thread: thread_id,\n        user_id,\n        content,\n        anonymity_type: anonymityType,\n        whisper_tags: whisperTags,\n        options: {\n          wide: isLarge,\n        },\n      });\n      log(`Added new contribution to thread ${thread_id}.`);\n      log(result);\n\n      const indexedTags = await maybeAddIndexTags(t, {\n        postId: result.id,\n        indexTags,\n      });\n\n      const categoryTagsResult = await maybeAddCategoryTags(t, {\n        categoryTags,\n        postId: result.id,\n      });\n      const contentWarningsResult = await maybeAddContentWarningTags(t, {\n        contentWarnings,\n        postId: result.id,\n      });\n\n      return {\n        contribution: {\n          post_id: result.string_id,\n          parent_thread_id: thread_string_id,\n          parent_post_id: parentPostId,\n          parent_board_slug: board_slug,\n          author: user_id,\n          username,\n          user_avatar,\n          secret_identity_name,\n          secret_identity_avatar,\n          secret_identity_color,\n          accessory_avatar,\n          created: result.created_string,\n          content: result.content,\n          options: result.options,\n          type: result.type,\n          whisper_tags: result.whisper_tags,\n          index_tags: indexedTags,\n          category_tags: categoryTagsResult,\n          content_warnings: contentWarningsResult,\n          anonymity_type: result.anonymity_type,\n          total_comments_amount: 0,\n          new_comments_amount: 0,\n          comments: null,\n          friend: false,\n          self: true,\n          is_new: true,\n          is_own: true,\n        },\n        boardSlug: board_slug,\n      };\n    })\n    .catch((e) => {\n      error(`Error while creating contribution.`);\n      error(e);\n      return false;\n    });\n};\n\nconst postNewCommentWithTransaction = async ({\n  firebaseId,\n  parentPostId,\n  parentCommentId,\n  chainParentId,\n  content,\n  anonymityType,\n  transaction,\n  identityId,\n}: {\n  transaction?: ITask<any>;\n  firebaseId: string;\n  parentPostId: string;\n  parentCommentId: string;\n  chainParentId: number | null;\n  content: string;\n  anonymityType: string;\n  identityId?: string;\n}): Promise<{ id: number; comment: DbCommentType }> => {\n  let {\n    user_id,\n    username,\n    user_avatar,\n    secret_identity_name,\n    secret_identity_avatar,\n    secret_identity_color,\n    accessory_avatar,\n    thread_id,\n    post_id,\n    comment_id,\n  } = await getThreadDetails(transaction, {\n    parentPostId,\n    firebaseId,\n    parentCommentId,\n    identityId,\n  });\n\n  log(`Retrieved details for thread ${parentPostId}:`);\n  log({\n    user_id,\n    username,\n    user_avatar,\n    secret_identity_name,\n    secret_identity_avatar,\n    thread_id,\n    post_id,\n    comment_id,\n  });\n\n  const result = await transaction.one(sql.makeComment, {\n    comment_string_id: uuidv4(),\n    parent_post: post_id,\n    parent_comment: comment_id,\n    parent_thread: thread_id,\n    chain_parent_comment: chainParentId,\n    user_id,\n    content,\n    anonymity_type: anonymityType,\n  });\n\n  return {\n    id: result.id,\n    comment: {\n      comment_id: result.string_id,\n      parent_post: parentPostId,\n      parent_comment: parentCommentId,\n      chain_parent_id: result.chain_parent_comment,\n      author: user_id,\n      content: result.content,\n      created: result.created_string,\n      anonymity_type: result.anonymity_type,\n      username,\n      user_avatar,\n      secret_identity_name,\n      secret_identity_avatar,\n      secret_identity_color,\n      accessory_avatar,\n      is_new: true,\n      is_own: true,\n      friend: false,\n      self: true,\n    },\n  };\n};\n\nexport const postNewComment = async ({\n  firebaseId,\n  parentPostId,\n  parentCommentId,\n  content,\n  anonymityType,\n  identityId,\n}: {\n  firebaseId: string;\n  parentPostId: string;\n  parentCommentId: string;\n  content: string;\n  anonymityType: string;\n  identityId?: string;\n}): Promise<DbCommentType | false> => {\n  return pool\n    .tx(\"create-comment\", async (transaction) => {\n      const result = await postNewCommentWithTransaction({\n        firebaseId,\n        parentPostId,\n        parentCommentId,\n        chainParentId: null,\n        content,\n        anonymityType,\n        transaction,\n        identityId,\n      });\n      return result.comment;\n    })\n    .catch((e) => {\n      error(`Error while creating comment.`);\n      error(e);\n      return false;\n    });\n};\n\nexport const postNewCommentChain = async ({\n  firebaseId,\n  parentPostId,\n  parentCommentId,\n  contentArray,\n  anonymityType,\n  identityId,\n}: {\n  firebaseId: string;\n  parentPostId: string;\n  parentCommentId: string;\n  contentArray: string[];\n  anonymityType: string;\n  identityId?: string;\n}): Promise<DbCommentType[] | false> => {\n  return pool\n    .tx(\"create-comment-chaim\", async (transaction) => {\n      let prevId: number = null;\n      let prevStringId: string = null;\n      const comments = [];\n      for (let content of contentArray) {\n        const newComment = await postNewCommentWithTransaction({\n          firebaseId,\n          parentPostId,\n          parentCommentId,\n          chainParentId: prevId,\n          content,\n          anonymityType,\n          transaction,\n          identityId,\n        });\n        newComment.comment.chain_parent_id = prevStringId;\n        prevId = newComment.id;\n        prevStringId = newComment.comment.comment_id;\n        comments.push(newComment.comment);\n      }\n      return comments;\n    })\n    .catch((e) => {\n      error(`Error while creating comment.`);\n      error(e);\n      return false;\n    });\n};\n\nconst addAccessoryToIdentity = async (\n  transaction: ITask<any>,\n  {\n    identity_id,\n    role_identity_id,\n    thread_id,\n  }: {\n    identity_id: string;\n    role_identity_id: string;\n    thread_id: string;\n  }\n) => {\n  if (!identity_id && !role_identity_id) {\n    throw \"Accessory must be added to either identity or role identity\";\n  }\n  const accessory = await transaction.one(sql.getRandomAccessory);\n\n  await transaction.one(sql.addAccessoryToIdentity, {\n    thread_id,\n    identity_id,\n    role_id: role_identity_id,\n    accessory_id: accessory.accessory_id,\n  });\n\n  return {\n    accessory_avatar: accessory.accessory_avatar,\n  };\n};\n\nexport const addNewIdentityToThread = async (\n  transaction: ITask<any>,\n  {\n    user_id,\n    identityId,\n    thread_id,\n    firebaseId,\n    board_slug,\n  }: {\n    identityId: string;\n    firebaseId: string;\n    user_id: any;\n    board_slug: any;\n    thread_id: any;\n  }\n) => {\n  let secret_identity_id = null;\n  let role_identity_id = null;\n  let secret_identity_name;\n  let secret_identity_avatar;\n  let secret_identity_color;\n\n  if (identityId) {\n    // An identity was passed to this method, which means we don't need to randomize it.\n    // The only thing we need to check is whether the user is *actually able* to post\n    // as that identity.\n    const roleResult = await transaction.one(threadsSql.getRoleByStringId, {\n      role_id: identityId,\n      firebase_id: firebaseId,\n      board_slug,\n    });\n    if (!canPostAs(roleResult.permissions)) {\n      throw new Error(\n        \"Attempted to post on thread with identity without post as permissions\"\n      );\n    }\n    role_identity_id = roleResult.id;\n    secret_identity_name = roleResult.name;\n    secret_identity_avatar = roleResult.avatar_reference_id;\n    secret_identity_color = roleResult.color;\n  } else {\n    const randomIdentityResult = await transaction.one(sql.getRandomIdentity, {\n      thread_id,\n    });\n    secret_identity_id = randomIdentityResult.secret_identity_id;\n    secret_identity_name = randomIdentityResult.secret_identity_name;\n    secret_identity_avatar = randomIdentityResult.secret_identity_avatar;\n  }\n\n  // The secret identity id is not currently in the thread data.\n  // Add it.\n  log(`Adding identity to thread:`);\n  log({\n    role_identity_id,\n    secret_identity_id,\n    secret_identity_name,\n    secret_identity_avatar,\n    secret_identity_color,\n  });\n\n  await transaction.one(sql.addIdentityToThread, {\n    user_id,\n    thread_id,\n    secret_identity_id,\n    role_identity_id,\n  });\n\n  // Right now we add it to all posts for the christmas event. With time we'll\n  // allow more fine-grained decisions.\n  // TODO: remove this when Christmas is over.\n  // const { accessory_avatar } = await addAccessoryToIdentity(transaction, {\n  //   identity_id: secret_identity_id,\n  //   role_identity_id,\n  //   thread_id,\n  // });\n\n  return {\n    secret_identity_id,\n    secret_identity_name,\n    secret_identity_avatar,\n    role_identity_id,\n    accessory_avatar: null as any,\n    secret_identity_color,\n  };\n};\n\nexport const getUserPermissionsForPost = async ({\n  firebaseId,\n  postId,\n}: {\n  firebaseId: string;\n  postId: string;\n}) => {\n  try {\n    const post = await getPostFromStringId(null, {\n      firebaseId,\n      postId,\n    });\n    if (!post) {\n      return [];\n    }\n    if (post.is_own) {\n      return [\n        PostPermissions.editCategoryTags,\n        PostPermissions.editContentNotices,\n        PostPermissions.editIndexTags,\n        PostPermissions.editWhisperTags,\n      ];\n    }\n    const board = await getBoardBySlug({\n      firebaseId,\n      slug: post.parent_board_slug,\n    });\n    return transformPostPermissions(board.permissions);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const getPostFromStringId = async (\n  transaction: ITask<any> | null,\n  {\n    firebaseId,\n    postId,\n  }: {\n    firebaseId: string | undefined;\n    postId: string;\n  }\n): Promise<DbPostType> => {\n  return await (transaction ?? pool).one(sql.postByStringId, {\n    firebase_id: firebaseId,\n    post_string_id: postId,\n  });\n};\n\nexport const updatePostTags = async (\n  transaction: ITask<any> | null,\n  {\n    firebaseId,\n    postId,\n    tagsDelta,\n  }: {\n    firebaseId: string;\n    postId: string;\n    tagsDelta: {\n      added: QueryTagsType;\n      removed: QueryTagsType;\n    };\n  }\n): Promise<DbPostType | false> => {\n  const updateTagsMethod = async (transaction: ITask<any>) => {\n    const post = await getPostFromStringId(transaction, { firebaseId, postId });\n    const numericId = (\n      await transaction.one<{ id: number }>(sql.getPostIdFromStringId, {\n        post_string_id: postId,\n      })\n    ).id;\n    await maybeAddIndexTags(transaction, {\n      indexTags: tagsDelta.added.indexTags,\n      postId: numericId,\n    });\n    await removeIndexTags(transaction, {\n      indexTags: tagsDelta.removed.indexTags,\n      postId: numericId,\n    });\n    await maybeAddCategoryTags(transaction, {\n      categoryTags: tagsDelta.added.categoryTags,\n      postId: numericId,\n    });\n    await removeCategoryTags(transaction, {\n      categoryTags: tagsDelta.removed.categoryTags,\n      postId: numericId,\n    });\n    await maybeAddContentWarningTags(transaction, {\n      contentWarnings: tagsDelta.added.contentWarnings,\n      postId: numericId,\n    });\n    await removeContentWarningTags(transaction, {\n      contentWarnings: tagsDelta.removed.contentWarnings,\n      postId: numericId,\n    });\n    const newWhisperTags = post.whisper_tags\n      .filter((tag) => !tagsDelta.removed.whisperTags.includes(tag))\n      .concat(tagsDelta.added.whisperTags);\n    await updateWhisperTags(transaction, {\n      postId: numericId,\n      whisperTags: newWhisperTags,\n    });\n\n    return await getPostFromStringId(transaction, { firebaseId, postId });\n  };\n\n  try {\n    return await (transaction\n      ? updateTagsMethod(transaction)\n      : pool.tx(\"update-tags\", updateTagsMethod));\n  } catch (e) {\n    log(e);\n    return false;\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"33c02d6787328cbb6e2faefd5b67d240265fe821","contentHash":"4c2031b6d61f268a5cfcd173cb9218d349c68aa2c15817bcde9b1c42ca039b12"},"/Users/esra/projects/programming/bobaserver/server/threads/sql/index.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/threads/sql/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":42}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":21},"end":{"line":14,"column":17}},"6":{"start":{"line":15,"column":19},"end":{"line":34,"column":25}},"7":{"start":{"line":35,"column":28},"end":{"line":36,"column":63}},"8":{"start":{"line":43,"column":26},"end":{"line":61,"column":12}},"9":{"start":{"line":62,"column":26},"end":{"line":68,"column":18}},"10":{"start":{"line":69,"column":29},"end":{"line":73,"column":47}},"11":{"start":{"line":74,"column":31},"end":{"line":78,"column":91}},"12":{"start":{"line":79,"column":29},"end":{"line":83,"column":47}},"13":{"start":{"line":84,"column":31},"end":{"line":88,"column":91}},"14":{"start":{"line":89,"column":35},"end":{"line":94,"column":1}},"15":{"start":{"line":95,"column":22},"end":{"line":102,"column":1}},"16":{"start":{"line":103,"column":29},"end":{"line":117,"column":1}},"17":{"start":{"line":118,"column":0},"end":{"line":134,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/threads/sql/index.ts","sources":["/Users/esra/projects/programming/bobaserver/server/threads/sql/index.ts"],"names":[],"mappings":";;;;;AAAA,2CAAuC;AACvC,gDAAwB;AAExB,MAAM,YAAY,GAAG;;;;;;iBAMJ,CAAC;AAElB,MAAM,UAAU,GAAG;;;;;;;;;;;;;;;;;;;yBAmBM,CAAC;AAE1B,MAAM,mBAAmB,GAAG;+DACmC,CAAC;AAEhE;;;;;GAKG;AACH,MAAM,iBAAiB,GAAG;;;;;;;;;;;;;;;;;;YAkBd,CAAC;AAEb,MAAM,iBAAiB,GAAG;;;;;;kBAMR,CAAC;AAEnB,MAAM,oBAAoB,GAAG;;;;+CAIkB,CAAC;AAEhD,MAAM,sBAAsB,GAAG;;;;2FAI4D,CAAC;AAE5F,MAAM,oBAAoB,GAAG;;;;+CAIkB,CAAC;AAEhD,MAAM,sBAAsB,GAAG;;;;2FAI4D,CAAC;AAE5F,MAAM,0BAA0B,GAAG;;;;;CAKlC,CAAC;AAEF,MAAM,aAAa,GAAG;;;;;;;CAOrB,CAAC;AAEF,MAAM,oBAAoB,GAAG;;;;;;;;;;;;;;CAc5B,CAAC;AAEF,kBAAe;IACb,gBAAgB,EAAE,IAAI,sBAAS,CAC7B,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAChD;IACD,0BAA0B,EAAE,IAAI,sBAAS,CACvC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,oCAAoC,CAAC,CAC3D;IACD,qBAAqB,EAAE,IAAI,sBAAS,CAClC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,+BAA+B,CAAC,CACtD;IACD,YAAY;IACZ,UAAU;IACV,mBAAmB;IACnB,iBAAiB;IACjB,oBAAoB;IACpB,sBAAsB;IACtB,oBAAoB;IACpB,sBAAsB;IACtB,0BAA0B;IAC1B,iBAAiB;IACjB,aAAa;IACb,oBAAoB;CACrB,CAAC","sourcesContent":["import { QueryFile } from \"pg-promise\";\nimport path from \"path\";\n\nconst createThread = `\n    INSERT INTO threads(string_id, parent_board, options)\n    VALUES (\n      $/thread_string_id/,\n      (SELECT id FROM boards WHERE slug = $/board_slug/),\n      $/thread_options/)\n    RETURNING id`;\n\nconst createPost = `\n    INSERT INTO posts(\n      string_id, \n      parent_post, \n      parent_thread, \n      author, \n      content, type, \n      whisper_tags, \n      anonymity_type, options)\n    VALUES (\n      $/post_string_id/, \n      NULL, \n      $/parent_thread/,\n      (SELECT id FROM users WHERE firebase_id = $/firebase_id/),\n      $/content/, \n      'text', \n      $/whisper_tags/, \n      $/anonymity_type/,\n      $/options/) \n    RETURNING id, author`;\n\nconst getRandomIdentityId = `\n    SELECT id FROM secret_identities ORDER BY RANDOM() LIMIT 1`;\n\n/**\n * Returns role data given the string id iff such a role is present for the given board & user.\n *\n * We add limit 1 cause the role might be associated to the user in more than one board/realm,\n * but we're only interested in whether it's associated to them at all.\n */\nconst getRoleByStringId = `\n    SELECT \n      roles.id,\n      roles.name,\n      roles.avatar_reference_id,\n      roles.color,\n      to_json(roles.permissions) as permissions\n    FROM roles\n    LEFT JOIN board_user_roles bur\n      ON roles.id = bur.role_id\n    LEFT JOIN realm_user_roles rur\n      ON roles.id = rur.role_id\n    INNER JOIN users \n      ON users.id = bur.user_id  OR users.id = rur.user_id\n    WHERE\n      roles.string_id = $/role_id/\n      AND (rur.role_id IS NOT NULL OR bur.board_id  = (SELECT id FROM boards WHERE boards.slug = $/board_slug/))\n      AND users.firebase_id = $/firebase_id/\n    LIMIT 1`;\n\nconst insertNewIdentity = `\n    INSERT INTO user_thread_identities(thread_id, user_id, identity_id, role_id)\n    VALUES(\n      $/thread_id/,\n      (SELECT id FROM users WHERE firebase_id = $/firebase_id/),\n      $/secret_identity_id/,\n      $/role_id/)`;\n\nconst muteThreadByStringId = `\n    INSERT INTO user_muted_threads(user_id, thread_id) VALUES (\n        (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/),\n        (SELECT id from threads WHERE threads.string_id = $/thread_string_id/))\n    ON CONFLICT(user_id, thread_id) DO NOTHING`;\n\nconst unmuteThreadByStringId = `\n    DELETE FROM user_muted_threads WHERE\n        user_id = (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/)\n        AND\n        thread_id = (SELECT id from threads WHERE threads.string_id = $/thread_string_id/)`;\n\nconst hideThreadByStringId = `\n    INSERT INTO user_hidden_threads(user_id, thread_id) VALUES (\n        (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/),\n        (SELECT id from threads WHERE threads.string_id = $/thread_string_id/))\n    ON CONFLICT(user_id, thread_id) DO NOTHING`;\n\nconst unhideThreadByStringId = `\n    DELETE FROM user_hidden_threads WHERE\n        user_id = (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/)\n        AND\n        thread_id = (SELECT id from threads WHERE threads.string_id = $/thread_string_id/)`;\n\nconst updateThreadViewByStringId = `\n    UPDATE threads \n      SET options = jsonb_set(options, '{default_view}', to_jsonb($/thread_default_view/::text))\n      WHERE threads.string_id = $/thread_string_id/\n    RETURNING *;\n`;\n\nconst isThreadOwner = `\n    SELECT\n      users.firebase_id = $/firebase_id/ as is_thread_owner\n    FROM threads\n      LEFT JOIN posts ON threads.id = posts.parent_thread AND posts.parent_post IS NULL\n      LEFT JOIN users ON posts.author = users.id\n    WHERE threads.string_id = $/thread_string_id/\n`;\n\nconst getTriggeredWebhooks = `\n    SELECT \n        webhook,\n        array_agg(DISTINCT subscriptions.name) AS subscription_names,\n        array_agg(DISTINCT categories.category) AS triggered_categories\n    FROM subscriptions\n        LEFT JOIN board_category_subscriptions bcs ON bcs.subscription_id = subscriptions.id\n        LEFT JOIN board_category_mappings bcm ON bcs.board_category_mapping_id = bcm.id\n        LEFT JOIN boards ON bcm.board_id = boards.id\n        LEFT JOIN categories ON bcm.category_id = categories.id\n        LEFT JOIN subscription_webhooks sw ON subscriptions.id = sw.subscription_id\n        LEFT JOIN webhooks ON sw.webhook_id = webhooks.id\n    WHERE boards.slug = $/board_slug/ AND categories.category = ANY($/category_names/)\n    GROUP BY webhook\n`;\n\nexport default {\n  threadByStringId: new QueryFile(\n    path.join(__dirname, \"thread-by-string-id.sql\")\n  ),\n  threadIdentitiesByStringId: new QueryFile(\n    path.join(__dirname, \"thread-identities-by-string-id.sql\")\n  ),\n  visitThreadByStringId: new QueryFile(\n    path.join(__dirname, \"visit-thread-by-string-id.sql\")\n  ),\n  createThread,\n  createPost,\n  getRandomIdentityId,\n  insertNewIdentity,\n  muteThreadByStringId,\n  unmuteThreadByStringId,\n  hideThreadByStringId,\n  unhideThreadByStringId,\n  updateThreadViewByStringId,\n  getRoleByStringId,\n  isThreadOwner,\n  getTriggeredWebhooks,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9b8421efd85eda064d2730ce4908cad9621a2649","contentHash":"3fd3063ec86dfa702c45f267677fa361e4e24bb9093a1d5573696096f180256d"},"/Users/esra/projects/programming/bobaserver/server/subscriptions/queries.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/subscriptions/queries.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":124}},"16":{"start":{"line":16,"column":16},"end":{"line":16,"column":49}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":50}},"18":{"start":{"line":18,"column":14},"end":{"line":18,"column":47}},"19":{"start":{"line":19,"column":14},"end":{"line":19,"column":71}},"20":{"start":{"line":20,"column":0},"end":{"line":34,"column":3}},"21":{"start":{"line":20,"column":61},"end":{"line":34,"column":2}},"22":{"start":{"line":21,"column":4},"end":{"line":33,"column":5}},"23":{"start":{"line":22,"column":8},"end":{"line":27,"column":11}},"24":{"start":{"line":30,"column":8},"end":{"line":30,"column":61}},"25":{"start":{"line":31,"column":8},"end":{"line":31,"column":17}},"26":{"start":{"line":32,"column":8},"end":{"line":32,"column":21}},"27":{"start":{"line":35,"column":0},"end":{"line":47,"column":3}},"28":{"start":{"line":35,"column":77},"end":{"line":47,"column":2}},"29":{"start":{"line":36,"column":4},"end":{"line":46,"column":5}},"30":{"start":{"line":37,"column":8},"end":{"line":40,"column":11}},"31":{"start":{"line":43,"column":8},"end":{"line":43,"column":70}},"32":{"start":{"line":44,"column":8},"end":{"line":44,"column":17}},"33":{"start":{"line":45,"column":8},"end":{"line":45,"column":21}},"34":{"start":{"line":48,"column":0},"end":{"line":60,"column":3}},"35":{"start":{"line":48,"column":62},"end":{"line":60,"column":2}},"36":{"start":{"line":50,"column":4},"end":{"line":59,"column":5}},"37":{"start":{"line":51,"column":8},"end":{"line":53,"column":96}},"38":{"start":{"line":53,"column":72},"end":{"line":53,"column":94}},"39":{"start":{"line":56,"column":8},"end":{"line":56,"column":93}},"40":{"start":{"line":57,"column":8},"end":{"line":57,"column":17}},"41":{"start":{"line":58,"column":8},"end":{"line":58,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":20,"column":36},"end":{"line":20,"column":37}},"loc":{"start":{"line":20,"column":61},"end":{"line":34,"column":2}},"line":20},"9":{"name":"(anonymous_9)","decl":{"start":{"line":20,"column":95},"end":{"line":20,"column":96}},"loc":{"start":{"line":20,"column":108},"end":{"line":34,"column":1}},"line":20},"10":{"name":"(anonymous_10)","decl":{"start":{"line":35,"column":43},"end":{"line":35,"column":44}},"loc":{"start":{"line":35,"column":77},"end":{"line":47,"column":2}},"line":35},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":111},"end":{"line":35,"column":112}},"loc":{"start":{"line":35,"column":124},"end":{"line":47,"column":1}},"line":35},"12":{"name":"(anonymous_12)","decl":{"start":{"line":48,"column":38},"end":{"line":48,"column":39}},"loc":{"start":{"line":48,"column":62},"end":{"line":60,"column":2}},"line":48},"13":{"name":"(anonymous_13)","decl":{"start":{"line":48,"column":96},"end":{"line":48,"column":97}},"loc":{"start":{"line":48,"column":109},"end":{"line":60,"column":1}},"line":48},"14":{"name":"(anonymous_14)","decl":{"start":{"line":53,"column":60},"end":{"line":53,"column":61}},"loc":{"start":{"line":53,"column":72},"end":{"line":53,"column":94}},"line":53}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":51,"column":15},"end":{"line":53,"column":95}},"type":"cond-expr","locations":[{"start":{"line":53,"column":41},"end":{"line":53,"column":47}},{"start":{"line":53,"column":50},"end":{"line":53,"column":95}}],"line":51},"9":{"loc":{"start":{"line":51,"column":15},"end":{"line":53,"column":38}},"type":"binary-expr","locations":[{"start":{"line":51,"column":15},"end":{"line":53,"column":21}},{"start":{"line":53,"column":25},"end":{"line":53,"column":38}}],"line":51}},"s":{"0":1,"1":3,"2":0,"3":3,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":6,"11":3,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":1,"28":1,"29":1,"30":1,"31":0,"32":0,"33":0,"34":1,"35":1,"36":1,"37":1,"38":1,"39":0,"40":0,"41":0},"f":{"0":3,"1":3,"2":0,"3":3,"4":3,"5":0,"6":6,"7":3,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{"0":[1,1,1],"1":[3,0],"2":[3,3],"3":[3,3],"4":[3,3],"5":[1,1,1],"6":[2,1],"7":[3,3],"8":[0,1],"9":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/subscriptions/queries.ts","sources":["/Users/esra/projects/programming/bobaserver/server/subscriptions/queries.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,kDAA0B;AAC1B,mDAA2B;AAC3B,gDAAwB;AAExB,MAAM,KAAK,GAAG,eAAK,CAAC,wCAAwC,CAAC,CAAC;AAEjD,QAAA,yBAAyB,GAAG,CAAO,EAC9C,cAAc,GAGf,EAAgB,EAAE;IACjB,IAAI;QACF,OAAO,MAAM,cAAI,CAAC,IAAI,CAAC,aAAG,CAAC,iCAAiC,EAAE;YAC5D,sBAAsB,EAAE,cAAc;YACtC,gFAAgF;YAChF,SAAS,EAAE,CAAC;YACZ,oBAAoB,EAAE,IAAI;SAC3B,CAAC,CAAC;KACJ;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,6CAA6C,CAAC,CAAC;QACrD,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,gCAAgC,GAAG,CAAO,EACrD,QAAQ,EACR,aAAa,GAId,EAMC,EAAE;IACF,IAAI;QACF,OAAO,MAAM,cAAI,CAAC,IAAI,CAAC,aAAG,CAAC,+BAA+B,EAAE;YAC1D,gBAAgB,EAAE,QAAQ;YAC1B,cAAc,EAAE,aAAa;SAC9B,CAAC,CAAC;KACJ;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC9D,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,2BAA2B,GAAG,CAAO,EAChD,aAAa,GAGd,EAMC,EAAE;;IACF,IAAI;QACF,aAAO,CACL,MAAM,cAAI,CAAC,IAAI,CAAC,aAAG,CAAC,wBAAwB,EAAE;YAC5C,wBAAwB,EAAE,aAAa;SACxC,CAAC,CACH,0CAAE,MAAM,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,EAAE;KACpD;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CACH,kDAAkD,aAAa,CAAC,IAAI,CAClE,IAAI,CACL,GAAG,CACL,CAAC;QACF,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC","sourcesContent":["import debug from \"debug\";\nimport pool from \"../pool\";\nimport sql from \"./sql\";\n\nconst error = debug(\"bobaserver:subscriptions:queries-error\");\n\nexport const getLatestSubscriptionData = async ({\n  subscriptionId,\n}: {\n  subscriptionId: string;\n}): Promise<any> => {\n  try {\n    return await pool.many(sql.getSubscriptionActivityByStringId, {\n      subscription_string_id: subscriptionId,\n      // we use page_size = 0 because the query returns always one more for the cursor\n      page_size: 0,\n      last_activity_cursor: null,\n    });\n  } catch (e) {\n    error(`Error while fetching subscription activity.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const getTriggeredThreadsSubscriptions = async ({\n  threadId,\n  categoryNames,\n}: {\n  threadId: string;\n  categoryNames: string[];\n}): Promise<\n  | false\n  | {\n      name: string;\n      string_id: string;\n    }[]\n> => {\n  try {\n    return await pool.many(sql.getTriggeredThreadSubscriptions, {\n      thread_string_id: threadId,\n      category_names: categoryNames,\n    });\n  } catch (e) {\n    error(`Error while fetching triggered thread subscriptions.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const getWebhooksForSubscriptions = async ({\n  subscriptions,\n}: {\n  subscriptions: string[];\n}): Promise<\n  | {\n      webhook: string;\n      subscription_ids: string[];\n    }[]\n  | false\n> => {\n  try {\n    return (\n      await pool.many(sql.getSubscriptionsWebhooks, {\n        subscriptions_string_ids: subscriptions,\n      })\n    )?.filter((result: any) => result.webhook != null);\n  } catch (e) {\n    error(\n      `Error while getting webhooks for subscriptions ${subscriptions.join(\n        \", \"\n      )}.`\n    );\n    error(e);\n    return false;\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1ca961fe26b25f0a57e2fc04524352c03739c0e6","contentHash":"3fba60a920c212a36bbdfed3c297b3199633c1234f80d485b32ccaad97a15506"},"/Users/esra/projects/programming/bobaserver/server/subscriptions/sql/index.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/subscriptions/sql/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":84}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":42}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":0},"end":{"line":19,"column":100}},"7":{"start":{"line":20,"column":0},"end":{"line":29,"column":2}},"8":{"start":{"line":30,"column":0},"end":{"line":34,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/subscriptions/sql/index.ts","sources":["/Users/esra/projects/programming/bobaserver/server/subscriptions/sql/index.ts"],"names":[],"mappings":";;;;;;AAAA,2CAAuC;AACvC,gDAAwB;AAEX,QAAA,+BAA+B,GAAG;;;;;;;;;;mGAUoD,CAAC;AAEvF,QAAA,wBAAwB,GAAG;;;;;;;;;CASvC,CAAC;AAEF,kBAAe;IACb,iCAAiC,EAAE,IAAI,sBAAS,CAC9C,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,wCAAwC,CAAC,CAC/D;IACD,+BAA+B,EAA/B,uCAA+B;IAC/B,wBAAwB,EAAxB,gCAAwB;CACzB,CAAC","sourcesContent":["import { QueryFile } from \"pg-promise\";\nimport path from \"path\";\n\nexport const getTriggeredThreadSubscriptions = `\n    SELECT DISTINCT \n        subscriptions.name,\n        subscriptions.string_id \n    FROM subscriptions\n        INNER JOIN thread_category_subscriptions tcs ON tcs.subscription_id = subscriptions.id\n        INNER JOIN threads ON threads.id = tcs.thread_id\n        INNER JOIN posts ON posts.parent_thread = tcs.thread_id\n        INNER JOIN post_categories ON posts.id = post_categories.post_id AND tcs.category_id = post_categories.category_id \n        INNER JOIN categories ON post_categories.category_id = categories.id\n    WHERE threads.string_id = $/thread_string_id/ AND categories.category = ANY($/category_names/)`;\n\nexport const getSubscriptionsWebhooks = `\n    SELECT \n        webhook,\n        array_agg(DISTINCT subscriptions.string_id) AS subscription_ids\n    FROM subscriptions\n    LEFT JOIN subscription_webhooks sw ON subscriptions.id = sw.subscription_id\n    LEFT JOIN webhooks ON sw.webhook_id = webhooks.id\n    WHERE subscriptions.string_id = ANY($/subscriptions_string_ids/)\n    GROUP BY webhook\n`;\n\nexport default {\n  getSubscriptionActivityByStringId: new QueryFile(\n    path.join(__dirname, \"subscription-activity-by-string-id.sql\")\n  ),\n  getTriggeredThreadSubscriptions,\n  getSubscriptionsWebhooks,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e85cbf253b261db0ff962f5d63dd6f57eeba7625","contentHash":"830ccd8e04341b11cf77f2193b7e27f723bd57e5c5e80e4491b4d1809539018a"},"/Users/esra/projects/programming/bobaserver/server/subscriptions/utils.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/subscriptions/utils.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":56}},"16":{"start":{"line":16,"column":16},"end":{"line":16,"column":35}},"17":{"start":{"line":17,"column":18},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":16},"end":{"line":18,"column":49}},"19":{"start":{"line":19,"column":16},"end":{"line":19,"column":49}},"20":{"start":{"line":20,"column":14},"end":{"line":20,"column":69}},"21":{"start":{"line":21,"column":12},"end":{"line":21,"column":65}},"22":{"start":{"line":22,"column":0},"end":{"line":54,"column":3}},"23":{"start":{"line":22,"column":118},"end":{"line":54,"column":2}},"24":{"start":{"line":23,"column":35},"end":{"line":26,"column":6}},"25":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"26":{"start":{"line":28,"column":8},"end":{"line":28,"column":15}},"27":{"start":{"line":30,"column":38},"end":{"line":30,"column":106}},"28":{"start":{"line":30,"column":83},"end":{"line":30,"column":105}},"29":{"start":{"line":31,"column":4},"end":{"line":31,"column":68}},"30":{"start":{"line":33,"column":4},"end":{"line":33,"column":143}},"31":{"start":{"line":33,"column":72},"end":{"line":33,"column":140}},"32":{"start":{"line":34,"column":21},"end":{"line":36,"column":6}},"33":{"start":{"line":37,"column":4},"end":{"line":37,"column":40}},"34":{"start":{"line":38,"column":4},"end":{"line":53,"column":5}},"35":{"start":{"line":39,"column":26},"end":{"line":39,"column":112}},"36":{"start":{"line":40,"column":8},"end":{"line":52,"column":12}},"37":{"start":{"line":40,"column":60},"end":{"line":52,"column":10}},"38":{"start":{"line":41,"column":38},"end":{"line":41,"column":249}},"39":{"start":{"line":41,"column":90},"end":{"line":41,"column":246}},"40":{"start":{"line":41,"column":153},"end":{"line":41,"column":198}},"41":{"start":{"line":42,"column":28},"end":{"line":42,"column":108}},"42":{"start":{"line":43,"column":12},"end":{"line":51,"column":15}},"43":{"start":{"line":50,"column":16},"end":{"line":50,"column":67}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":22,"column":49},"end":{"line":22,"column":50}},"loc":{"start":{"line":22,"column":118},"end":{"line":54,"column":2}},"line":22},"9":{"name":"(anonymous_9)","decl":{"start":{"line":22,"column":152},"end":{"line":22,"column":153}},"loc":{"start":{"line":22,"column":165},"end":{"line":54,"column":1}},"line":22},"10":{"name":"(anonymous_10)","decl":{"start":{"line":30,"column":65},"end":{"line":30,"column":66}},"loc":{"start":{"line":30,"column":83},"end":{"line":30,"column":105}},"line":30},"11":{"name":"(anonymous_11)","decl":{"start":{"line":33,"column":52},"end":{"line":33,"column":53}},"loc":{"start":{"line":33,"column":72},"end":{"line":33,"column":140}},"line":33},"12":{"name":"(anonymous_12)","decl":{"start":{"line":40,"column":25},"end":{"line":40,"column":26}},"loc":{"start":{"line":40,"column":60},"end":{"line":52,"column":10}},"line":40},"13":{"name":"(anonymous_13)","decl":{"start":{"line":40,"column":94},"end":{"line":40,"column":95}},"loc":{"start":{"line":40,"column":107},"end":{"line":52,"column":9}},"line":40},"14":{"name":"(anonymous_14)","decl":{"start":{"line":41,"column":59},"end":{"line":41,"column":60}},"loc":{"start":{"line":41,"column":80},"end":{"line":41,"column":248}},"line":41},"15":{"name":"(anonymous_15)","decl":{"start":{"line":41,"column":131},"end":{"line":41,"column":132}},"loc":{"start":{"line":41,"column":153},"end":{"line":41,"column":198}},"line":41},"16":{"name":"(anonymous_16)","decl":{"start":{"line":49,"column":23},"end":{"line":49,"column":24}},"loc":{"start":{"line":49,"column":29},"end":{"line":51,"column":13}},"line":49}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{"line":27,"column":4},"end":{"line":29,"column":5}}],"line":27},"9":{"loc":{"start":{"line":38,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":53,"column":5}},{"start":{"line":38,"column":4},"end":{"line":53,"column":5}}],"line":38},"10":{"loc":{"start":{"line":38,"column":8},"end":{"line":38,"column":39}},"type":"binary-expr","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":16}},{"start":{"line":38,"column":20},"end":{"line":38,"column":39}}],"line":38},"11":{"loc":{"start":{"line":39,"column":84},"end":{"line":39,"column":110}},"type":"cond-expr","locations":[{"start":{"line":39,"column":93},"end":{"line":39,"column":105}},{"start":{"line":39,"column":108},"end":{"line":39,"column":110}}],"line":39},"12":{"loc":{"start":{"line":41,"column":97},"end":{"line":41,"column":245}},"type":"cond-expr","locations":[{"start":{"line":41,"column":229},"end":{"line":41,"column":235}},{"start":{"line":41,"column":238},"end":{"line":41,"column":245}}],"line":41},"13":{"loc":{"start":{"line":41,"column":97},"end":{"line":41,"column":226}},"type":"binary-expr","locations":[{"start":{"line":41,"column":97},"end":{"line":41,"column":209}},{"start":{"line":41,"column":213},"end":{"line":41,"column":226}}],"line":41}},"s":{"0":1,"1":3,"2":0,"3":2,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":2,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":0},"f":{"0":2,"1":3,"2":0,"3":2,"4":3,"5":0,"6":4,"7":2,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0},"b":{"0":[1,1,1],"1":[3,0],"2":[2,2],"3":[1,3],"4":[2,2],"5":[1,1,1],"6":[0,2],"7":[2,2],"8":[0,1],"9":[1,0],"10":[1,1],"11":[1,0],"12":[0,1],"13":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/subscriptions/utils.ts","sources":["/Users/esra/projects/programming/bobaserver/server/subscriptions/utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,oCAA4C;AAC5C,uCAGmB;AACnB,kDAA0B;AAE1B,kDAA0B;AAC1B,MAAM,KAAK,GAAG,eAAK,CAAC,sCAAsC,CAAC,CAAC;AAC5D,MAAM,GAAG,GAAG,eAAK,CAAC,oCAAoC,CAAC,CAAC;AAE3C,QAAA,sCAAsC,GAAG,CAAO,EAC3D,QAAQ,EACR,MAAM,EACN,SAAS,EACT,cAAc,EACd,aAAa,GAYd,EAAE,EAAE;IACH,MAAM,sBAAsB,GAAG,MAAM,0CAAgC,CAAC;QACpE,QAAQ;QACR,aAAa;KACd,CAAC,CAAC;IAEH,IAAI,CAAC,sBAAsB,EAAE;QAC3B,OAAO;KACR;IAED,MAAM,yBAAyB,GAAG,sBAAsB,CAAC,GAAG,CAC1D,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,SAAS,CACzC,CAAC;IAEF,GAAG,CAAC,+BAA+B,yBAAyB,EAAE,CAAC,CAAC;IAChE,oDAAoD;IACpD,MAAM,OAAO,CAAC,GAAG,CACf,yBAAyB,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,EAAE,CAC/C,aAAK,EAAE,CAAC,IAAI,CAAC,iBAAS,CAAC,YAAY,EAAE,cAAc,CAAC,CACrD,CACF,CAAC;IAEF,MAAM,QAAQ,GAAG,MAAM,qCAA2B,CAAC;QACjD,aAAa,EAAE,yBAAyB;KACzC,CAAC,CAAC;IACH,GAAG,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC;IAEpC,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QACnC,MAAM,SAAS,GAAG,2BAA2B,SAAS,WAAW,QAAQ,GACvE,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,EAC1B,EAAE,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,CAAO,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAAE,EAAE;YACvD,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,GAAG,CAC5C,CAAC,eAAe,EAAE,EAAE,wBAClB,sBAAsB,CAAC,IAAI,CACzB,CAAC,gBAAgB,EAAE,EAAE,CAAC,gBAAgB,CAAC,SAAS,IAAI,eAAe,CACpE,0CAAE,IAAI,GAAA,CACV,CAAC;YACF,MAAM,OAAO,GAAG,SAAS,iBAAiB,CAAC,IAAI,CAC7C,IAAI,CACL,gCAAgC,SAAS,EAAE,CAAC;YAE7C,eAAK;iBACF,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,cAAc,CAAC,IAAI;gBAC7B,UAAU,EAAE,cAAc,CAAC,MAAM;aAClC,CAAC;iBACD,KAAK,CAAC,GAAG,EAAE;gBACV,KAAK,CAAC,kCAAkC,OAAO,EAAE,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;QACP,CAAC,CAAA,CAAC,CAAC;KACJ;AACH,CAAC,CAAA,CAAC","sourcesContent":["import { CacheKeys, cache } from \"../cache\";\nimport {\n  getTriggeredThreadsSubscriptions,\n  getWebhooksForSubscriptions,\n} from \"./queries\";\nimport axios from \"axios\";\n\nimport debug from \"debug\";\nconst error = debug(\"bobaserver:subscriptions:utils-error\");\nconst log = debug(\"bobaserver:subscriptions:utils-log\");\n\nexport const maybeUpdateSubscriptionsOnThreadChange = async ({\n  threadId,\n  postId,\n  boardSlug,\n  secretIdentity,\n  categoryNames,\n}: {\n  threadId: string;\n  postId?: string;\n  boardSlug: string;\n  categoryNames: string[];\n  secretIdentity: {\n    name: string;\n    avatar: string;\n    color?: string;\n    accessory?: string;\n  };\n}) => {\n  const triggeredSubscriptions = await getTriggeredThreadsSubscriptions({\n    threadId,\n    categoryNames,\n  });\n\n  if (!triggeredSubscriptions) {\n    return;\n  }\n\n  const triggeredSubscriptionsIds = triggeredSubscriptions.map(\n    (subscription) => subscription.string_id\n  );\n\n  log(`Triggered subscription ids: ${triggeredSubscriptionsIds}`);\n  // Invalidate cached subscriptions that have updated\n  await Promise.all(\n    triggeredSubscriptionsIds.map((subscriptionId) =>\n      cache().hdel(CacheKeys.SUBSCRIPTION, subscriptionId)\n    )\n  );\n\n  const webhooks = await getWebhooksForSubscriptions({\n    subscriptions: triggeredSubscriptionsIds,\n  });\n  log(`Found webhooks: %O`, webhooks);\n\n  if (webhooks && webhooks.length > 0) {\n    const threadUrl = `https://v0.boba.social/!${boardSlug}/thread/${threadId}${\n      postId ? \"/\" + postId : \"\"\n    }`;\n    webhooks.forEach(async ({ webhook, subscription_ids }) => {\n      const subscriptionNames = subscription_ids.map(\n        (subscription_id) =>\n          triggeredSubscriptions.find(\n            (subscriptionData) => subscriptionData.string_id == subscription_id\n          )?.name\n      );\n      const message = `Your \"${subscriptionNames.join(\n        \", \"\n      )}\" subscription has updated!\\n${threadUrl}`;\n\n      axios\n        .post(webhook, {\n          content: message,\n          username: secretIdentity.name,\n          avatar_url: secretIdentity.avatar,\n        })\n        .catch(() => {\n          error(`Error while posting to webhook ${webhook}`);\n        });\n    });\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9d75457449e888637f3fa5e43dfa8d11cc2c4ac7","contentHash":"78a70fd05a816f1da3e7e24d3e1fd3b37ce75c7804de2b29fd158dabef83b248"},"/Users/esra/projects/programming/bobaserver/server/threads/queries.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/threads/queries.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":310}},"16":{"start":{"line":16,"column":16},"end":{"line":16,"column":49}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":50}},"18":{"start":{"line":18,"column":15},"end":{"line":18,"column":30}},"19":{"start":{"line":19,"column":14},"end":{"line":19,"column":47}},"20":{"start":{"line":20,"column":18},"end":{"line":20,"column":45}},"21":{"start":{"line":21,"column":16},"end":{"line":21,"column":38}},"22":{"start":{"line":22,"column":12},"end":{"line":22,"column":61}},"23":{"start":{"line":23,"column":14},"end":{"line":23,"column":65}},"24":{"start":{"line":24,"column":0},"end":{"line":41,"column":3}},"25":{"start":{"line":24,"column":61},"end":{"line":41,"column":2}},"26":{"start":{"line":25,"column":4},"end":{"line":40,"column":5}},"27":{"start":{"line":26,"column":23},"end":{"line":29,"column":10}},"28":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"29":{"start":{"line":31,"column":12},"end":{"line":31,"column":49}},"30":{"start":{"line":32,"column":12},"end":{"line":32,"column":24}},"31":{"start":{"line":34,"column":8},"end":{"line":34,"column":22}},"32":{"start":{"line":37,"column":8},"end":{"line":37,"column":59}},"33":{"start":{"line":38,"column":8},"end":{"line":38,"column":17}},"34":{"start":{"line":39,"column":8},"end":{"line":39,"column":21}},"35":{"start":{"line":42,"column":0},"end":{"line":56,"column":3}},"36":{"start":{"line":42,"column":71},"end":{"line":56,"column":2}},"37":{"start":{"line":43,"column":4},"end":{"line":55,"column":5}},"38":{"start":{"line":44,"column":21},"end":{"line":47,"column":10}},"39":{"start":{"line":48,"column":8},"end":{"line":48,"column":47}},"40":{"start":{"line":49,"column":8},"end":{"line":49,"column":20}},"41":{"start":{"line":52,"column":8},"end":{"line":52,"column":57}},"42":{"start":{"line":53,"column":8},"end":{"line":53,"column":17}},"43":{"start":{"line":54,"column":8},"end":{"line":54,"column":21}},"44":{"start":{"line":57,"column":0},"end":{"line":70,"column":3}},"45":{"start":{"line":57,"column":59},"end":{"line":70,"column":2}},"46":{"start":{"line":58,"column":4},"end":{"line":69,"column":5}},"47":{"start":{"line":59,"column":8},"end":{"line":62,"column":11}},"48":{"start":{"line":63,"column":8},"end":{"line":63,"column":20}},"49":{"start":{"line":66,"column":8},"end":{"line":66,"column":51}},"50":{"start":{"line":67,"column":8},"end":{"line":67,"column":17}},"51":{"start":{"line":68,"column":8},"end":{"line":68,"column":21}},"52":{"start":{"line":71,"column":0},"end":{"line":122,"column":3}},"53":{"start":{"line":71,"column":168},"end":{"line":122,"column":2}},"54":{"start":{"line":72,"column":4},"end":{"line":121,"column":7}},"55":{"start":{"line":73,"column":36},"end":{"line":117,"column":6}},"56":{"start":{"line":74,"column":31},"end":{"line":74,"column":42}},"57":{"start":{"line":75,"column":35},"end":{"line":81,"column":10}},"58":{"start":{"line":82,"column":8},"end":{"line":82,"column":65}},"59":{"start":{"line":83,"column":29},"end":{"line":83,"column":40}},"60":{"start":{"line":84,"column":27},"end":{"line":94,"column":10}},"61":{"start":{"line":95,"column":8},"end":{"line":95,"column":61}},"62":{"start":{"line":96,"column":8},"end":{"line":99,"column":11}},"63":{"start":{"line":100,"column":8},"end":{"line":103,"column":11}},"64":{"start":{"line":104,"column":8},"end":{"line":107,"column":11}},"65":{"start":{"line":108,"column":8},"end":{"line":114,"column":11}},"66":{"start":{"line":115,"column":8},"end":{"line":115,"column":53}},"67":{"start":{"line":116,"column":8},"end":{"line":116,"column":30}},"68":{"start":{"line":119,"column":8},"end":{"line":119,"column":72}},"69":{"start":{"line":120,"column":8},"end":{"line":120,"column":21}},"70":{"start":{"line":123,"column":0},"end":{"line":136,"column":3}},"71":{"start":{"line":123,"column":57},"end":{"line":136,"column":2}},"72":{"start":{"line":124,"column":4},"end":{"line":135,"column":5}},"73":{"start":{"line":125,"column":8},"end":{"line":128,"column":11}},"74":{"start":{"line":129,"column":8},"end":{"line":129,"column":20}},"75":{"start":{"line":132,"column":8},"end":{"line":132,"column":53}},"76":{"start":{"line":133,"column":8},"end":{"line":133,"column":17}},"77":{"start":{"line":134,"column":8},"end":{"line":134,"column":21}},"78":{"start":{"line":137,"column":0},"end":{"line":150,"column":3}},"79":{"start":{"line":137,"column":52},"end":{"line":150,"column":2}},"80":{"start":{"line":138,"column":4},"end":{"line":149,"column":5}},"81":{"start":{"line":139,"column":8},"end":{"line":142,"column":11}},"82":{"start":{"line":143,"column":8},"end":{"line":143,"column":20}},"83":{"start":{"line":146,"column":8},"end":{"line":146,"column":44}},"84":{"start":{"line":147,"column":8},"end":{"line":147,"column":17}},"85":{"start":{"line":148,"column":8},"end":{"line":148,"column":21}},"86":{"start":{"line":151,"column":0},"end":{"line":164,"column":3}},"87":{"start":{"line":151,"column":54},"end":{"line":164,"column":2}},"88":{"start":{"line":152,"column":4},"end":{"line":163,"column":5}},"89":{"start":{"line":153,"column":8},"end":{"line":156,"column":11}},"90":{"start":{"line":157,"column":8},"end":{"line":157,"column":20}},"91":{"start":{"line":160,"column":8},"end":{"line":160,"column":46}},"92":{"start":{"line":161,"column":8},"end":{"line":161,"column":17}},"93":{"start":{"line":162,"column":8},"end":{"line":162,"column":21}},"94":{"start":{"line":165,"column":0},"end":{"line":178,"column":3}},"95":{"start":{"line":165,"column":52},"end":{"line":178,"column":2}},"96":{"start":{"line":166,"column":4},"end":{"line":177,"column":5}},"97":{"start":{"line":167,"column":8},"end":{"line":170,"column":11}},"98":{"start":{"line":171,"column":8},"end":{"line":171,"column":20}},"99":{"start":{"line":174,"column":8},"end":{"line":174,"column":44}},"100":{"start":{"line":175,"column":8},"end":{"line":175,"column":17}},"101":{"start":{"line":176,"column":8},"end":{"line":176,"column":21}},"102":{"start":{"line":179,"column":0},"end":{"line":192,"column":3}},"103":{"start":{"line":179,"column":54},"end":{"line":192,"column":2}},"104":{"start":{"line":180,"column":4},"end":{"line":191,"column":5}},"105":{"start":{"line":181,"column":8},"end":{"line":184,"column":11}},"106":{"start":{"line":185,"column":8},"end":{"line":185,"column":20}},"107":{"start":{"line":188,"column":8},"end":{"line":188,"column":46}},"108":{"start":{"line":189,"column":8},"end":{"line":189,"column":17}},"109":{"start":{"line":190,"column":8},"end":{"line":190,"column":21}},"110":{"start":{"line":193,"column":0},"end":{"line":209,"column":3}},"111":{"start":{"line":193,"column":69},"end":{"line":209,"column":2}},"112":{"start":{"line":194,"column":4},"end":{"line":208,"column":5}},"113":{"start":{"line":195,"column":24},"end":{"line":198,"column":27}},"114":{"start":{"line":199,"column":8},"end":{"line":201,"column":9}},"115":{"start":{"line":200,"column":12},"end":{"line":200,"column":63}},"116":{"start":{"line":202,"column":8},"end":{"line":202,"column":18}},"117":{"start":{"line":205,"column":8},"end":{"line":205,"column":70}},"118":{"start":{"line":206,"column":8},"end":{"line":206,"column":17}},"119":{"start":{"line":207,"column":8},"end":{"line":207,"column":21}},"120":{"start":{"line":210,"column":0},"end":{"line":227,"column":3}},"121":{"start":{"line":210,"column":58},"end":{"line":227,"column":2}},"122":{"start":{"line":211,"column":4},"end":{"line":226,"column":5}},"123":{"start":{"line":212,"column":23},"end":{"line":215,"column":10}},"124":{"start":{"line":214,"column":57},"end":{"line":214,"column":86}},"125":{"start":{"line":216,"column":8},"end":{"line":220,"column":12}},"126":{"start":{"line":216,"column":39},"end":{"line":220,"column":9}},"127":{"start":{"line":223,"column":8},"end":{"line":223,"column":57}},"128":{"start":{"line":224,"column":8},"end":{"line":224,"column":17}},"129":{"start":{"line":225,"column":8},"end":{"line":225,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":24,"column":30},"end":{"line":24,"column":31}},"loc":{"start":{"line":24,"column":61},"end":{"line":41,"column":2}},"line":24},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":95},"end":{"line":24,"column":96}},"loc":{"start":{"line":24,"column":108},"end":{"line":41,"column":1}},"line":24},"10":{"name":"(anonymous_10)","decl":{"start":{"line":42,"column":40},"end":{"line":42,"column":41}},"loc":{"start":{"line":42,"column":71},"end":{"line":56,"column":2}},"line":42},"11":{"name":"(anonymous_11)","decl":{"start":{"line":42,"column":105},"end":{"line":42,"column":106}},"loc":{"start":{"line":42,"column":118},"end":{"line":56,"column":1}},"line":42},"12":{"name":"(anonymous_12)","decl":{"start":{"line":57,"column":27},"end":{"line":57,"column":28}},"loc":{"start":{"line":57,"column":59},"end":{"line":70,"column":2}},"line":57},"13":{"name":"(anonymous_13)","decl":{"start":{"line":57,"column":93},"end":{"line":57,"column":94}},"loc":{"start":{"line":57,"column":106},"end":{"line":70,"column":1}},"line":57},"14":{"name":"(anonymous_14)","decl":{"start":{"line":71,"column":23},"end":{"line":71,"column":24}},"loc":{"start":{"line":71,"column":168},"end":{"line":122,"column":2}},"line":71},"15":{"name":"(anonymous_15)","decl":{"start":{"line":71,"column":202},"end":{"line":71,"column":203}},"loc":{"start":{"line":71,"column":215},"end":{"line":122,"column":1}},"line":71},"16":{"name":"(anonymous_16)","decl":{"start":{"line":73,"column":29},"end":{"line":73,"column":30}},"loc":{"start":{"line":73,"column":36},"end":{"line":117,"column":6}},"line":73},"17":{"name":"(anonymous_17)","decl":{"start":{"line":73,"column":70},"end":{"line":73,"column":71}},"loc":{"start":{"line":73,"column":83},"end":{"line":117,"column":5}},"line":73},"18":{"name":"(anonymous_18)","decl":{"start":{"line":118,"column":15},"end":{"line":118,"column":16}},"loc":{"start":{"line":118,"column":22},"end":{"line":121,"column":5}},"line":118},"19":{"name":"(anonymous_19)","decl":{"start":{"line":123,"column":26},"end":{"line":123,"column":27}},"loc":{"start":{"line":123,"column":57},"end":{"line":136,"column":2}},"line":123},"20":{"name":"(anonymous_20)","decl":{"start":{"line":123,"column":91},"end":{"line":123,"column":92}},"loc":{"start":{"line":123,"column":104},"end":{"line":136,"column":1}},"line":123},"21":{"name":"(anonymous_21)","decl":{"start":{"line":137,"column":21},"end":{"line":137,"column":22}},"loc":{"start":{"line":137,"column":52},"end":{"line":150,"column":2}},"line":137},"22":{"name":"(anonymous_22)","decl":{"start":{"line":137,"column":86},"end":{"line":137,"column":87}},"loc":{"start":{"line":137,"column":99},"end":{"line":150,"column":1}},"line":137},"23":{"name":"(anonymous_23)","decl":{"start":{"line":151,"column":23},"end":{"line":151,"column":24}},"loc":{"start":{"line":151,"column":54},"end":{"line":164,"column":2}},"line":151},"24":{"name":"(anonymous_24)","decl":{"start":{"line":151,"column":88},"end":{"line":151,"column":89}},"loc":{"start":{"line":151,"column":101},"end":{"line":164,"column":1}},"line":151},"25":{"name":"(anonymous_25)","decl":{"start":{"line":165,"column":21},"end":{"line":165,"column":22}},"loc":{"start":{"line":165,"column":52},"end":{"line":178,"column":2}},"line":165},"26":{"name":"(anonymous_26)","decl":{"start":{"line":165,"column":86},"end":{"line":165,"column":87}},"loc":{"start":{"line":165,"column":99},"end":{"line":178,"column":1}},"line":165},"27":{"name":"(anonymous_27)","decl":{"start":{"line":179,"column":23},"end":{"line":179,"column":24}},"loc":{"start":{"line":179,"column":54},"end":{"line":192,"column":2}},"line":179},"28":{"name":"(anonymous_28)","decl":{"start":{"line":179,"column":88},"end":{"line":179,"column":89}},"loc":{"start":{"line":179,"column":101},"end":{"line":192,"column":1}},"line":179},"29":{"name":"(anonymous_29)","decl":{"start":{"line":193,"column":38},"end":{"line":193,"column":39}},"loc":{"start":{"line":193,"column":69},"end":{"line":209,"column":2}},"line":193},"30":{"name":"(anonymous_30)","decl":{"start":{"line":193,"column":103},"end":{"line":193,"column":104}},"loc":{"start":{"line":193,"column":116},"end":{"line":209,"column":1}},"line":193},"31":{"name":"(anonymous_31)","decl":{"start":{"line":210,"column":31},"end":{"line":210,"column":32}},"loc":{"start":{"line":210,"column":58},"end":{"line":227,"column":2}},"line":210},"32":{"name":"(anonymous_32)","decl":{"start":{"line":210,"column":92},"end":{"line":210,"column":93}},"loc":{"start":{"line":210,"column":105},"end":{"line":227,"column":1}},"line":210},"33":{"name":"(anonymous_33)","decl":{"start":{"line":214,"column":43},"end":{"line":214,"column":44}},"loc":{"start":{"line":214,"column":57},"end":{"line":214,"column":86}},"line":214},"34":{"name":"(anonymous_34)","decl":{"start":{"line":216,"column":26},"end":{"line":216,"column":27}},"loc":{"start":{"line":216,"column":39},"end":{"line":220,"column":9}},"line":216}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},{"start":{"line":30,"column":8},"end":{"line":33,"column":9}}],"line":30},"9":{"loc":{"start":{"line":199,"column":8},"end":{"line":201,"column":9}},"type":"if","locations":[{"start":{"line":199,"column":8},"end":{"line":201,"column":9}},{"start":{"line":199,"column":8},"end":{"line":201,"column":9}}],"line":199}},"s":{"0":1,"1":19,"2":0,"3":19,"4":18,"5":18,"6":0,"7":1,"8":1,"9":0,"10":38,"11":19,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":17,"26":17,"27":17,"28":17,"29":1,"30":1,"31":16,"32":0,"33":0,"34":0,"35":1,"36":2,"37":2,"38":2,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0},"f":{"0":19,"1":19,"2":0,"3":19,"4":18,"5":1,"6":38,"7":3,"8":17,"9":17,"10":2,"11":2,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"0":[1,1,1],"1":[19,0],"2":[19,19],"3":[19,19],"4":[19,19],"5":[1,1,1],"6":[2,1],"7":[3,3],"8":[1,16],"9":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/threads/queries.ts","sources":["/Users/esra/projects/programming/bobaserver/server/threads/queries.ts"],"names":[],"mappings":"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","sourcesContent":["import debug from \"debug\";\nimport pool from \"../pool\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport sql from \"./sql\";\nimport {\n  maybeAddIndexTags,\n  maybeAddCategoryTags,\n  maybeAddContentWarningTags,\n  addNewIdentityToThread,\n} from \"../posts/queries\";\nimport { DbThreadType, DbIdentityType, ThreadPermissions } from \"../../Types\";\n\nconst log = debug(\"bobaserver:threads:queries-log\");\nconst error = debug(\"bobaserver:threads:queries-error\");\n\nexport const getThreadByStringId = async ({\n  threadId,\n  firebaseId,\n}: {\n  threadId: string;\n  firebaseId?: string;\n}): Promise<DbThreadType | false> => {\n  try {\n    const thread = await pool.oneOrNone(sql.threadByStringId, {\n      thread_string_id: threadId,\n      firebase_id: firebaseId,\n    });\n\n    if (!thread) {\n      log(`Thread not found: ${threadId}`);\n      return null;\n    }\n\n    return thread;\n  } catch (e) {\n    error(`Error while fetching thread: ${threadId}.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const getThreadIdentitiesByStringId = async ({\n  threadId,\n  firebaseId,\n}: {\n  threadId: string;\n  firebaseId?: string;\n}): Promise<DbIdentityType[] | false> => {\n  try {\n    const rows = await pool.many(sql.threadIdentitiesByStringId, {\n      firebase_id: firebaseId,\n      thread_string_id: threadId,\n    });\n\n    log(`Found thread identities: `, rows);\n\n    return rows;\n  } catch (e) {\n    error(`Error while fetching thread identities.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const updateThreadView = async ({\n  threadId,\n  defaultView,\n}: {\n  threadId: string;\n  defaultView: string;\n}) => {\n  try {\n    await pool.one(sql.updateThreadViewByStringId, {\n      thread_string_id: threadId,\n      thread_default_view: defaultView,\n    });\n    return true;\n  } catch (e) {\n    error(`Error while updating thread view.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const createThread = async ({\n  firebaseId,\n  content,\n  isLarge,\n  anonymityType,\n  boardSlug,\n  whisperTags,\n  indexTags,\n  categoryTags,\n  contentWarnings,\n  identityId,\n  defaultView,\n}: {\n  firebaseId: string;\n  content: string;\n  isLarge: boolean;\n  defaultView: string;\n  anonymityType: string;\n  boardSlug: string;\n  whisperTags: string[];\n  indexTags: string[];\n  categoryTags: string[];\n  contentWarnings: string[];\n  identityId?: string;\n}) => {\n  return pool\n    .tx(\"create-thread\", async (t) => {\n      const threadStringId = uuidv4();\n      const createThreadResult = await t.one(sql.createThread, {\n        thread_string_id: threadStringId,\n        board_slug: boardSlug,\n        thread_options: {\n          default_view: defaultView,\n        },\n      });\n      log(`Created thread entry for thread ${threadStringId}`);\n\n      const postStringId = uuidv4();\n      const postResult = await t.one(sql.createPost, {\n        post_string_id: postStringId,\n        parent_thread: createThreadResult.id,\n        firebase_id: firebaseId,\n        options: {\n          wide: isLarge,\n        },\n        content,\n        anonymity_type: anonymityType,\n        whisper_tags: whisperTags,\n      });\n      log(`Created post entry for thread ${postStringId}`);\n\n      await maybeAddIndexTags(t, {\n        indexTags,\n        postId: postResult.id,\n      });\n      await maybeAddCategoryTags(t, {\n        categoryTags,\n        postId: postResult.id,\n      });\n      await maybeAddContentWarningTags(t, {\n        contentWarnings,\n        postId: postResult.id,\n      });\n\n      await addNewIdentityToThread(t, {\n        user_id: postResult.author,\n        identityId,\n        thread_id: createThreadResult.id,\n        firebaseId,\n        board_slug: boardSlug,\n      });\n\n      log(`Added identity for ${threadStringId}.`);\n      return threadStringId;\n    })\n    .catch((e) => {\n      error(`Error while creating thread on board ${boardSlug}: `, e);\n      return false;\n    });\n};\n\nexport const markThreadVisit = async ({\n  threadId,\n  firebaseId,\n}: {\n  threadId: string;\n  firebaseId: string;\n}) => {\n  try {\n    await pool.none(sql.visitThreadByStringId, {\n      firebase_id: firebaseId,\n      thread_string_id: threadId,\n    });\n    return true;\n  } catch (e) {\n    error(`Error while recording thread visit.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const muteThread = async ({\n  threadId,\n  firebaseId,\n}: {\n  threadId: string;\n  firebaseId: string;\n}) => {\n  try {\n    await pool.none(sql.muteThreadByStringId, {\n      firebase_id: firebaseId,\n      thread_string_id: threadId,\n    });\n    return true;\n  } catch (e) {\n    error(`Error while muting thread.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const unmuteThread = async ({\n  threadId,\n  firebaseId,\n}: {\n  threadId: string;\n  firebaseId: string;\n}) => {\n  try {\n    await pool.none(sql.unmuteThreadByStringId, {\n      firebase_id: firebaseId,\n      thread_string_id: threadId,\n    });\n    return true;\n  } catch (e) {\n    error(`Error while unmuting thread.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const hideThread = async ({\n  threadId,\n  firebaseId,\n}: {\n  threadId: string;\n  firebaseId: string;\n}) => {\n  try {\n    await pool.none(sql.hideThreadByStringId, {\n      firebase_id: firebaseId,\n      thread_string_id: threadId,\n    });\n    return true;\n  } catch (e) {\n    error(`Error while hiding thread.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const unhideThread = async ({\n  threadId,\n  firebaseId,\n}: {\n  threadId: string;\n  firebaseId: string;\n}) => {\n  try {\n    await pool.none(sql.unhideThreadByStringId, {\n      firebase_id: firebaseId,\n      thread_string_id: threadId,\n    });\n    return true;\n  } catch (e) {\n    error(`Error while unhiding thread.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const getUserPermissionsForThread = async ({\n  threadId,\n  firebaseId,\n}: {\n  threadId: string;\n  firebaseId: string;\n}) => {\n  try {\n    const isOwner = (\n      await pool.one(sql.isThreadOwner, {\n        firebase_id: firebaseId,\n        thread_string_id: threadId,\n      })\n    ).is_thread_owner;\n\n    if (isOwner) {\n      return [ThreadPermissions.editDefaultView];\n    }\n    return [];\n  } catch (e) {\n    error(`Error while getting user permissions for the thread.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const getTriggeredWebhooks = async ({\n  slug,\n  categories,\n}: {\n  slug: string;\n  categories: string[];\n}): Promise<\n  | {\n      webhook: string;\n      subscriptionNames: string[];\n      triggeredCategories: string[];\n    }[]\n  | false\n> => {\n  try {\n    const result = await pool.manyOrNone(sql.getTriggeredWebhooks, {\n      board_slug: slug,\n      category_names: categories.map((category) =>\n        category.toLowerCase().trim()\n      ),\n    });\n    return result.map((result) => ({\n      webhook: result.webhook,\n      subscriptionNames: result.subscription_names,\n      triggeredCategories: result.triggered_categories,\n    }));\n  } catch (e) {\n    error(`Error while getting triggered webhooks.`);\n    error(e);\n    return false;\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c4b3be3d43efbe8bf61f60f93b42a3c731d19a17","contentHash":"3579d34e0cd8178d641b788329136480ce8fcfb281235eff494ee17c04774dae"},"/Users/esra/projects/programming/bobaserver/server/threads/routes.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/threads/routes.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":16},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":18},"end":{"line":16,"column":53}},"17":{"start":{"line":17,"column":18},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":23},"end":{"line":18,"column":49}},"19":{"start":{"line":19,"column":25},"end":{"line":19,"column":53}},"20":{"start":{"line":20,"column":16},"end":{"line":20,"column":38}},"21":{"start":{"line":21,"column":16},"end":{"line":21,"column":49}},"22":{"start":{"line":22,"column":16},"end":{"line":22,"column":42}},"23":{"start":{"line":23,"column":13},"end":{"line":23,"column":62}},"24":{"start":{"line":24,"column":12},"end":{"line":24,"column":60}},"25":{"start":{"line":25,"column":15},"end":{"line":25,"column":41}},"26":{"start":{"line":26,"column":0},"end":{"line":58,"column":4}},"27":{"start":{"line":26,"column":60},"end":{"line":58,"column":2}},"28":{"start":{"line":28,"column":19},"end":{"line":28,"column":29}},"29":{"start":{"line":29,"column":4},"end":{"line":29,"column":50}},"30":{"start":{"line":33,"column":19},"end":{"line":36,"column":6}},"31":{"start":{"line":37,"column":4},"end":{"line":37,"column":35}},"32":{"start":{"line":38,"column":4},"end":{"line":45,"column":5}},"33":{"start":{"line":44,"column":8},"end":{"line":44,"column":35}},"34":{"start":{"line":46,"column":4},"end":{"line":49,"column":5}},"35":{"start":{"line":47,"column":8},"end":{"line":47,"column":28}},"36":{"start":{"line":48,"column":8},"end":{"line":48,"column":15}},"37":{"start":{"line":50,"column":4},"end":{"line":53,"column":5}},"38":{"start":{"line":51,"column":8},"end":{"line":51,"column":28}},"39":{"start":{"line":52,"column":8},"end":{"line":52,"column":15}},"40":{"start":{"line":54,"column":25},"end":{"line":54,"column":66}},"41":{"start":{"line":55,"column":4},"end":{"line":55,"column":59}},"42":{"start":{"line":56,"column":4},"end":{"line":56,"column":48}},"43":{"start":{"line":57,"column":4},"end":{"line":57,"column":39}},"44":{"start":{"line":59,"column":0},"end":{"line":76,"column":4}},"45":{"start":{"line":59,"column":72},"end":{"line":76,"column":2}},"46":{"start":{"line":60,"column":25},"end":{"line":60,"column":35}},"47":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"48":{"start":{"line":63,"column":8},"end":{"line":63,"column":35}},"49":{"start":{"line":65,"column":4},"end":{"line":65,"column":45}},"50":{"start":{"line":66,"column":4},"end":{"line":73,"column":5}},"51":{"start":{"line":71,"column":8},"end":{"line":71,"column":28}},"52":{"start":{"line":72,"column":8},"end":{"line":72,"column":15}},"53":{"start":{"line":74,"column":4},"end":{"line":74,"column":62}},"54":{"start":{"line":75,"column":4},"end":{"line":75,"column":27}},"55":{"start":{"line":77,"column":0},"end":{"line":94,"column":4}},"56":{"start":{"line":77,"column":74},"end":{"line":94,"column":2}},"57":{"start":{"line":78,"column":25},"end":{"line":78,"column":35}},"58":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"59":{"start":{"line":81,"column":8},"end":{"line":81,"column":35}},"60":{"start":{"line":83,"column":4},"end":{"line":83,"column":47}},"61":{"start":{"line":84,"column":4},"end":{"line":91,"column":5}},"62":{"start":{"line":89,"column":8},"end":{"line":89,"column":28}},"63":{"start":{"line":90,"column":8},"end":{"line":90,"column":15}},"64":{"start":{"line":92,"column":4},"end":{"line":92,"column":62}},"65":{"start":{"line":93,"column":4},"end":{"line":93,"column":27}},"66":{"start":{"line":95,"column":0},"end":{"line":112,"column":4}},"67":{"start":{"line":95,"column":72},"end":{"line":112,"column":2}},"68":{"start":{"line":96,"column":25},"end":{"line":96,"column":35}},"69":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"70":{"start":{"line":99,"column":8},"end":{"line":99,"column":35}},"71":{"start":{"line":101,"column":4},"end":{"line":101,"column":46}},"72":{"start":{"line":102,"column":4},"end":{"line":109,"column":5}},"73":{"start":{"line":107,"column":8},"end":{"line":107,"column":28}},"74":{"start":{"line":108,"column":8},"end":{"line":108,"column":15}},"75":{"start":{"line":110,"column":4},"end":{"line":110,"column":62}},"76":{"start":{"line":111,"column":4},"end":{"line":111,"column":27}},"77":{"start":{"line":113,"column":0},"end":{"line":130,"column":4}},"78":{"start":{"line":113,"column":74},"end":{"line":130,"column":2}},"79":{"start":{"line":114,"column":25},"end":{"line":114,"column":35}},"80":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"81":{"start":{"line":117,"column":8},"end":{"line":117,"column":35}},"82":{"start":{"line":119,"column":4},"end":{"line":119,"column":47}},"83":{"start":{"line":120,"column":4},"end":{"line":127,"column":5}},"84":{"start":{"line":125,"column":8},"end":{"line":125,"column":28}},"85":{"start":{"line":126,"column":8},"end":{"line":126,"column":15}},"86":{"start":{"line":128,"column":4},"end":{"line":128,"column":62}},"87":{"start":{"line":129,"column":4},"end":{"line":129,"column":27}},"88":{"start":{"line":131,"column":0},"end":{"line":148,"column":4}},"89":{"start":{"line":131,"column":72},"end":{"line":148,"column":2}},"90":{"start":{"line":132,"column":25},"end":{"line":132,"column":35}},"91":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"92":{"start":{"line":135,"column":8},"end":{"line":135,"column":35}},"93":{"start":{"line":137,"column":4},"end":{"line":137,"column":61}},"94":{"start":{"line":138,"column":4},"end":{"line":145,"column":5}},"95":{"start":{"line":143,"column":8},"end":{"line":143,"column":28}},"96":{"start":{"line":144,"column":8},"end":{"line":144,"column":15}},"97":{"start":{"line":146,"column":4},"end":{"line":146,"column":62}},"98":{"start":{"line":147,"column":4},"end":{"line":147,"column":27}},"99":{"start":{"line":149,"column":0},"end":{"line":152,"column":4}},"100":{"start":{"line":149,"column":45},"end":{"line":152,"column":2}},"101":{"start":{"line":151,"column":4},"end":{"line":151,"column":20}},"102":{"start":{"line":153,"column":0},"end":{"line":214,"column":4}},"103":{"start":{"line":153,"column":81},"end":{"line":214,"column":2}},"104":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"105":{"start":{"line":157,"column":8},"end":{"line":157,"column":35}},"106":{"start":{"line":159,"column":26},"end":{"line":159,"column":36}},"107":{"start":{"line":160,"column":4},"end":{"line":160,"column":59}},"108":{"start":{"line":161,"column":128},"end":{"line":161,"column":136}},"109":{"start":{"line":162,"column":27},"end":{"line":175,"column":6}},"110":{"start":{"line":176,"column":4},"end":{"line":176,"column":47}},"111":{"start":{"line":177,"column":4},"end":{"line":180,"column":5}},"112":{"start":{"line":178,"column":8},"end":{"line":178,"column":28}},"113":{"start":{"line":179,"column":8},"end":{"line":179,"column":15}},"114":{"start":{"line":181,"column":19},"end":{"line":185,"column":6}},"115":{"start":{"line":186,"column":4},"end":{"line":186,"column":35}},"116":{"start":{"line":187,"column":4},"end":{"line":190,"column":5}},"117":{"start":{"line":188,"column":8},"end":{"line":188,"column":28}},"118":{"start":{"line":189,"column":8},"end":{"line":189,"column":15}},"119":{"start":{"line":191,"column":4},"end":{"line":194,"column":5}},"120":{"start":{"line":192,"column":8},"end":{"line":192,"column":28}},"121":{"start":{"line":193,"column":8},"end":{"line":193,"column":15}},"122":{"start":{"line":195,"column":25},"end":{"line":195,"column":66}},"123":{"start":{"line":196,"column":4},"end":{"line":196,"column":59}},"124":{"start":{"line":197,"column":4},"end":{"line":197,"column":60}},"125":{"start":{"line":198,"column":4},"end":{"line":198,"column":39}},"126":{"start":{"line":199,"column":21},"end":{"line":202,"column":6}},"127":{"start":{"line":203,"column":4},"end":{"line":213,"column":5}},"128":{"start":{"line":204,"column":26},"end":{"line":204,"column":89}},"129":{"start":{"line":205,"column":8},"end":{"line":212,"column":11}},"130":{"start":{"line":206,"column":28},"end":{"line":206,"column":109}},"131":{"start":{"line":207,"column":12},"end":{"line":211,"column":15}},"132":{"start":{"line":215,"column":0},"end":{"line":242,"column":4}},"133":{"start":{"line":215,"column":79},"end":{"line":242,"column":2}},"134":{"start":{"line":216,"column":25},"end":{"line":216,"column":35}},"135":{"start":{"line":217,"column":28},"end":{"line":217,"column":36}},"136":{"start":{"line":221,"column":24},"end":{"line":224,"column":6}},"137":{"start":{"line":225,"column":4},"end":{"line":229,"column":5}},"138":{"start":{"line":226,"column":8},"end":{"line":226,"column":69}},"139":{"start":{"line":227,"column":8},"end":{"line":227,"column":28}},"140":{"start":{"line":228,"column":8},"end":{"line":228,"column":15}},"141":{"start":{"line":230,"column":4},"end":{"line":234,"column":5}},"142":{"start":{"line":232,"column":8},"end":{"line":232,"column":28}},"143":{"start":{"line":233,"column":8},"end":{"line":233,"column":15}},"144":{"start":{"line":235,"column":4},"end":{"line":240,"column":5}},"145":{"start":{"line":239,"column":8},"end":{"line":239,"column":35}},"146":{"start":{"line":241,"column":4},"end":{"line":241,"column":24}},"147":{"start":{"line":243,"column":0},"end":{"line":243,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":26,"column":46},"end":{"line":26,"column":47}},"loc":{"start":{"line":26,"column":60},"end":{"line":58,"column":2}},"line":26},"9":{"name":"(anonymous_9)","decl":{"start":{"line":26,"column":94},"end":{"line":26,"column":95}},"loc":{"start":{"line":26,"column":107},"end":{"line":58,"column":1}},"line":26},"10":{"name":"(anonymous_10)","decl":{"start":{"line":59,"column":58},"end":{"line":59,"column":59}},"loc":{"start":{"line":59,"column":72},"end":{"line":76,"column":2}},"line":59},"11":{"name":"(anonymous_11)","decl":{"start":{"line":59,"column":106},"end":{"line":59,"column":107}},"loc":{"start":{"line":59,"column":119},"end":{"line":76,"column":1}},"line":59},"12":{"name":"(anonymous_12)","decl":{"start":{"line":77,"column":60},"end":{"line":77,"column":61}},"loc":{"start":{"line":77,"column":74},"end":{"line":94,"column":2}},"line":77},"13":{"name":"(anonymous_13)","decl":{"start":{"line":77,"column":108},"end":{"line":77,"column":109}},"loc":{"start":{"line":77,"column":121},"end":{"line":94,"column":1}},"line":77},"14":{"name":"(anonymous_14)","decl":{"start":{"line":95,"column":58},"end":{"line":95,"column":59}},"loc":{"start":{"line":95,"column":72},"end":{"line":112,"column":2}},"line":95},"15":{"name":"(anonymous_15)","decl":{"start":{"line":95,"column":106},"end":{"line":95,"column":107}},"loc":{"start":{"line":95,"column":119},"end":{"line":112,"column":1}},"line":95},"16":{"name":"(anonymous_16)","decl":{"start":{"line":113,"column":60},"end":{"line":113,"column":61}},"loc":{"start":{"line":113,"column":74},"end":{"line":130,"column":2}},"line":113},"17":{"name":"(anonymous_17)","decl":{"start":{"line":113,"column":108},"end":{"line":113,"column":109}},"loc":{"start":{"line":113,"column":121},"end":{"line":130,"column":1}},"line":113},"18":{"name":"(anonymous_18)","decl":{"start":{"line":131,"column":58},"end":{"line":131,"column":59}},"loc":{"start":{"line":131,"column":72},"end":{"line":148,"column":2}},"line":131},"19":{"name":"(anonymous_19)","decl":{"start":{"line":131,"column":106},"end":{"line":131,"column":107}},"loc":{"start":{"line":131,"column":119},"end":{"line":148,"column":1}},"line":131},"20":{"name":"(anonymous_20)","decl":{"start":{"line":149,"column":31},"end":{"line":149,"column":32}},"loc":{"start":{"line":149,"column":45},"end":{"line":152,"column":2}},"line":149},"21":{"name":"(anonymous_21)","decl":{"start":{"line":149,"column":79},"end":{"line":149,"column":80}},"loc":{"start":{"line":149,"column":92},"end":{"line":152,"column":1}},"line":149},"22":{"name":"(anonymous_22)","decl":{"start":{"line":153,"column":61},"end":{"line":153,"column":62}},"loc":{"start":{"line":153,"column":81},"end":{"line":214,"column":2}},"line":153},"23":{"name":"(anonymous_23)","decl":{"start":{"line":153,"column":115},"end":{"line":153,"column":116}},"loc":{"start":{"line":153,"column":128},"end":{"line":214,"column":1}},"line":153},"24":{"name":"(anonymous_24)","decl":{"start":{"line":205,"column":25},"end":{"line":205,"column":26}},"loc":{"start":{"line":205,"column":61},"end":{"line":212,"column":9}},"line":205},"25":{"name":"(anonymous_25)","decl":{"start":{"line":215,"column":65},"end":{"line":215,"column":66}},"loc":{"start":{"line":215,"column":79},"end":{"line":242,"column":2}},"line":215},"26":{"name":"(anonymous_26)","decl":{"start":{"line":215,"column":113},"end":{"line":215,"column":114}},"loc":{"start":{"line":215,"column":126},"end":{"line":242,"column":1}},"line":215}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":35,"column":20},"end":{"line":35,"column":86}},"type":"cond-expr","locations":[{"start":{"line":35,"column":71},"end":{"line":35,"column":77}},{"start":{"line":35,"column":80},"end":{"line":35,"column":86}}],"line":35},"9":{"loc":{"start":{"line":35,"column":20},"end":{"line":35,"column":68}},"type":"binary-expr","locations":[{"start":{"line":35,"column":20},"end":{"line":35,"column":51}},{"start":{"line":35,"column":55},"end":{"line":35,"column":68}}],"line":35},"10":{"loc":{"start":{"line":38,"column":4},"end":{"line":45,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":45,"column":5}},{"start":{"line":38,"column":4},"end":{"line":45,"column":5}}],"line":38},"11":{"loc":{"start":{"line":38,"column":8},"end":{"line":42,"column":11}},"type":"binary-expr","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":14}},{"start":{"line":39,"column":8},"end":{"line":42,"column":11}}],"line":38},"12":{"loc":{"start":{"line":41,"column":24},"end":{"line":41,"column":90}},"type":"cond-expr","locations":[{"start":{"line":41,"column":75},"end":{"line":41,"column":81}},{"start":{"line":41,"column":84},"end":{"line":41,"column":90}}],"line":41},"13":{"loc":{"start":{"line":41,"column":24},"end":{"line":41,"column":72}},"type":"binary-expr","locations":[{"start":{"line":41,"column":24},"end":{"line":41,"column":55}},{"start":{"line":41,"column":59},"end":{"line":41,"column":72}}],"line":41},"14":{"loc":{"start":{"line":46,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":49,"column":5}},{"start":{"line":46,"column":4},"end":{"line":49,"column":5}}],"line":46},"15":{"loc":{"start":{"line":50,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":53,"column":5}},{"start":{"line":50,"column":4},"end":{"line":53,"column":5}}],"line":50},"16":{"loc":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},{"start":{"line":62,"column":4},"end":{"line":64,"column":5}}],"line":62},"17":{"loc":{"start":{"line":66,"column":4},"end":{"line":73,"column":5}},"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":73,"column":5}},{"start":{"line":66,"column":4},"end":{"line":73,"column":5}}],"line":66},"18":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{"line":80,"column":4},"end":{"line":82,"column":5}}],"line":80},"19":{"loc":{"start":{"line":84,"column":4},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":91,"column":5}},{"start":{"line":84,"column":4},"end":{"line":91,"column":5}}],"line":84},"20":{"loc":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},{"start":{"line":98,"column":4},"end":{"line":100,"column":5}}],"line":98},"21":{"loc":{"start":{"line":102,"column":4},"end":{"line":109,"column":5}},"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":109,"column":5}},{"start":{"line":102,"column":4},"end":{"line":109,"column":5}}],"line":102},"22":{"loc":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},{"start":{"line":116,"column":4},"end":{"line":118,"column":5}}],"line":116},"23":{"loc":{"start":{"line":120,"column":4},"end":{"line":127,"column":5}},"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":127,"column":5}},{"start":{"line":120,"column":4},"end":{"line":127,"column":5}}],"line":120},"24":{"loc":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},{"start":{"line":134,"column":4},"end":{"line":136,"column":5}}],"line":134},"25":{"loc":{"start":{"line":138,"column":4},"end":{"line":145,"column":5}},"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":145,"column":5}},{"start":{"line":138,"column":4},"end":{"line":145,"column":5}}],"line":138},"26":{"loc":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},{"start":{"line":156,"column":4},"end":{"line":158,"column":5}}],"line":156},"27":{"loc":{"start":{"line":177,"column":4},"end":{"line":180,"column":5}},"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":180,"column":5}},{"start":{"line":177,"column":4},"end":{"line":180,"column":5}}],"line":177},"28":{"loc":{"start":{"line":184,"column":20},"end":{"line":184,"column":86}},"type":"cond-expr","locations":[{"start":{"line":184,"column":71},"end":{"line":184,"column":77}},{"start":{"line":184,"column":80},"end":{"line":184,"column":86}}],"line":184},"29":{"loc":{"start":{"line":184,"column":20},"end":{"line":184,"column":68}},"type":"binary-expr","locations":[{"start":{"line":184,"column":20},"end":{"line":184,"column":51}},{"start":{"line":184,"column":55},"end":{"line":184,"column":68}}],"line":184},"30":{"loc":{"start":{"line":187,"column":4},"end":{"line":190,"column":5}},"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":190,"column":5}},{"start":{"line":187,"column":4},"end":{"line":190,"column":5}}],"line":187},"31":{"loc":{"start":{"line":191,"column":4},"end":{"line":194,"column":5}},"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":194,"column":5}},{"start":{"line":191,"column":4},"end":{"line":194,"column":5}}],"line":191},"32":{"loc":{"start":{"line":201,"column":20},"end":{"line":201,"column":107}},"type":"cond-expr","locations":[{"start":{"line":201,"column":82},"end":{"line":201,"column":88}},{"start":{"line":201,"column":91},"end":{"line":201,"column":107}}],"line":201},"33":{"loc":{"start":{"line":201,"column":20},"end":{"line":201,"column":79}},"type":"binary-expr","locations":[{"start":{"line":201,"column":20},"end":{"line":201,"column":62}},{"start":{"line":201,"column":66},"end":{"line":201,"column":79}}],"line":201},"34":{"loc":{"start":{"line":203,"column":4},"end":{"line":213,"column":5}},"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":213,"column":5}},{"start":{"line":203,"column":4},"end":{"line":213,"column":5}}],"line":203},"35":{"loc":{"start":{"line":203,"column":8},"end":{"line":203,"column":39}},"type":"binary-expr","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":16}},{"start":{"line":203,"column":20},"end":{"line":203,"column":39}}],"line":203},"36":{"loc":{"start":{"line":225,"column":4},"end":{"line":229,"column":5}},"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":229,"column":5}},{"start":{"line":225,"column":4},"end":{"line":229,"column":5}}],"line":225},"37":{"loc":{"start":{"line":230,"column":4},"end":{"line":234,"column":5}},"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":234,"column":5}},{"start":{"line":230,"column":4},"end":{"line":234,"column":5}}],"line":230},"38":{"loc":{"start":{"line":230,"column":8},"end":{"line":231,"column":72}},"type":"binary-expr","locations":[{"start":{"line":230,"column":8},"end":{"line":230,"column":27}},{"start":{"line":231,"column":8},"end":{"line":231,"column":72}}],"line":230},"39":{"loc":{"start":{"line":235,"column":4},"end":{"line":240,"column":5}},"type":"if","locations":[{"start":{"line":235,"column":4},"end":{"line":240,"column":5}},{"start":{"line":235,"column":4},"end":{"line":240,"column":5}}],"line":235}},"s":{"0":1,"1":2,"2":0,"3":1,"4":2,"5":2,"6":0,"7":0,"8":0,"9":0,"10":3,"11":1,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":0,"34":1,"35":0,"36":0,"37":1,"38":0,"39":0,"40":1,"41":1,"42":1,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1},"f":{"0":1,"1":2,"2":0,"3":1,"4":2,"5":0,"6":3,"7":3,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"0":[1,1,1],"1":[2,0],"2":[1,1],"3":[1,2],"4":[1,1],"5":[1,1,1],"6":[0,3],"7":[3,3],"8":[1,0],"9":[1,1],"10":[0,1],"11":[1,1],"12":[1,0],"13":[1,1],"14":[0,1],"15":[0,1],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/threads/routes.ts","sources":["/Users/esra/projects/programming/bobaserver/server/threads/routes.ts"],"names":[],"mappings":"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","sourcesContent":["import debug from \"debug\";\nimport express from \"express\";\nimport {\n  getThreadByStringId,\n  createThread,\n  markThreadVisit,\n  muteThread,\n  unmuteThread,\n  hideThread,\n  unhideThread,\n  updateThreadView,\n  getUserPermissionsForThread,\n  getTriggeredWebhooks,\n} from \"./queries\";\nimport { isLoggedIn } from \"../auth-handler\";\nimport { makeServerThread, ensureNoIdentityLeakage } from \"../response-utils\";\nimport { ThreadPermissions } from \"../../Types\";\nimport axios from \"axios\";\nimport { canAccessBoard } from \"../boards/utils\";\n\nconst info = debug(\"bobaserver:threads:routes-info\");\nconst log = debug(\"bobaserver:threads:routes-log\");\n\nconst router = express.Router();\n\nrouter.get(\"/:id\", isLoggedIn, async (req, res) => {\n  const { id } = req.params;\n  log(`Fetching data for thread with id ${id}`);\n\n  // NOTE: if updating this (and it makes sense) also update\n  // the method for thread creation + retrieval.\n  // TODO: check if this has already been unified\n  const thread = await getThreadByStringId({\n    threadId: id,\n    firebaseId: req.currentUser?.uid,\n  });\n  info(`Found thread: `, thread);\n\n  if (\n    thread &&\n    !(await canAccessBoard({\n      slug: thread.board_slug,\n      firebaseId: req.currentUser?.uid,\n    }))\n  ) {\n    // TOOD: add error log\n    return res.sendStatus(403);\n  }\n\n  if (thread === false) {\n    res.sendStatus(500);\n    return;\n  }\n  if (!thread) {\n    res.sendStatus(404);\n    return;\n  }\n\n  const serverThread = makeServerThread(thread);\n  ensureNoIdentityLeakage(serverThread);\n\n  info(`sending back data for thread ${id}.`);\n  res.status(200).json(serverThread);\n});\n\nrouter.post(\"/:threadId/mute\", isLoggedIn, async (req, res) => {\n  const { threadId } = req.params;\n  // @ts-ignore\n  if (!req.currentUser) {\n    return res.sendStatus(401);\n  }\n  log(`Setting thread muted: ${threadId}`);\n\n  if (\n    !(await muteThread({\n      // @ts-ignore\n      firebaseId: req.currentUser.uid,\n      threadId,\n    }))\n  ) {\n    res.sendStatus(500);\n    return;\n  }\n\n  info(`Marked last visited time for thread: ${threadId}.`);\n  res.status(200).json();\n});\n\nrouter.post(\"/:threadId/unmute\", isLoggedIn, async (req, res) => {\n  const { threadId } = req.params;\n  // @ts-ignore\n  if (!req.currentUser) {\n    return res.sendStatus(401);\n  }\n  log(`Setting thread unmuted: ${threadId}`);\n\n  if (\n    !(await unmuteThread({\n      // @ts-ignore\n      firebaseId: req.currentUser.uid,\n      threadId,\n    }))\n  ) {\n    res.sendStatus(500);\n    return;\n  }\n\n  info(`Marked last visited time for thread: ${threadId}.`);\n  res.status(200).json();\n});\n\nrouter.post(\"/:threadId/hide\", isLoggedIn, async (req, res) => {\n  const { threadId } = req.params;\n  // @ts-ignore\n  if (!req.currentUser) {\n    return res.sendStatus(401);\n  }\n  log(`Setting thread hidden: ${threadId}`);\n\n  if (\n    !(await hideThread({\n      // @ts-ignore\n      firebaseId: req.currentUser.uid,\n      threadId,\n    }))\n  ) {\n    res.sendStatus(500);\n    return;\n  }\n\n  info(`Marked last visited time for thread: ${threadId}.`);\n  res.status(200).json();\n});\n\nrouter.post(\"/:threadId/unhide\", isLoggedIn, async (req, res) => {\n  const { threadId } = req.params;\n  // @ts-ignore\n  if (!req.currentUser) {\n    return res.sendStatus(401);\n  }\n  log(`Setting thread visible: ${threadId}`);\n\n  if (\n    !(await unhideThread({\n      // @ts-ignore\n      firebaseId: req.currentUser.uid,\n      threadId,\n    }))\n  ) {\n    res.sendStatus(500);\n    return;\n  }\n\n  info(`Marked last visited time for thread: ${threadId}.`);\n  res.status(200).json();\n});\n\nrouter.get(\"/:threadId/visit\", isLoggedIn, async (req, res) => {\n  const { threadId } = req.params;\n  // @ts-ignore\n  if (!req.currentUser) {\n    return res.sendStatus(401);\n  }\n  log(`Setting last visited time for thread: ${threadId}`);\n\n  if (\n    !(await markThreadVisit({\n      // @ts-ignore\n      firebaseId: req.currentUser.uid,\n      threadId,\n    }))\n  ) {\n    res.sendStatus(500);\n    return;\n  }\n\n  info(`Marked last visited time for thread: ${threadId}.`);\n  res.status(200).json();\n});\n\nrouter.get(\"/activity/latest\", async (req, res) => {\n  // TODO: implement. Gets latest active threads.\n  res.status(501);\n});\n\nrouter.post(\"/:boardSlug/create\", isLoggedIn, async (req, res, next) => {\n  // @ts-ignore\n  if (!req.currentUser) {\n    return res.sendStatus(401);\n  }\n  const { boardSlug } = req.params;\n  log(`Creating thread in board with slug ${boardSlug}`);\n  const {\n    content,\n    forceAnonymous,\n    defaultView,\n    large,\n    whisperTags,\n    indexTags,\n    categoryTags,\n    contentWarnings,\n    identityId,\n  } = req.body;\n\n  const threadStringId = await createThread({\n    // @ts-ignore\n    firebaseId: req.currentUser.uid,\n    content,\n    defaultView,\n    anonymityType: \"everyone\",\n    isLarge: !!large,\n    boardSlug: boardSlug,\n    whisperTags,\n    indexTags,\n    categoryTags,\n    contentWarnings,\n    identityId,\n  });\n  info(`Created new thread`, threadStringId);\n\n  if (threadStringId === false) {\n    res.sendStatus(500);\n    return;\n  }\n\n  const thread = await getThreadByStringId({\n    threadId: threadStringId as string,\n    // @ts-ignore\n    firebaseId: req.currentUser?.uid,\n  });\n  info(`Found thread: `, thread);\n\n  if (thread === false) {\n    res.sendStatus(500);\n    return;\n  }\n  if (!thread) {\n    res.sendStatus(404);\n    return;\n  }\n\n  const serverThread = makeServerThread(thread);\n  ensureNoIdentityLeakage(serverThread);\n\n  info(`sending back data for thread ${threadStringId}.`);\n  res.status(200).json(serverThread);\n\n  const webhooks = await getTriggeredWebhooks({\n    slug: boardSlug,\n    categories: serverThread.posts[0].tags?.category_tags,\n  });\n  if (webhooks && webhooks.length > 0) {\n    const threadUrl = `https://v0.boba.social/!${boardSlug}/thread/${threadStringId}`;\n    webhooks.forEach(({ webhook, subscriptionNames }) => {\n      const message = `Your \"${subscriptionNames.join(\n        \", \"\n      )}\" subscription has updated!\\n ${threadUrl}`;\n      axios.post(webhook, {\n        content: message,\n        username: serverThread.posts[0].secret_identity.name,\n        avatar_url: serverThread.posts[0].secret_identity.avatar,\n      });\n    });\n  }\n});\n\nrouter.post(\"/:threadId/update/view\", isLoggedIn, async (req, res) => {\n  const { threadId } = req.params;\n  const { defaultView } = req.body;\n\n  // TODO: CHECK PERMISSIONS\n  // NOTE: if updating this (and it makes sense) also update\n  // the method for thread creation + retrieval.\n  const permissions = await getUserPermissionsForThread({\n    firebaseId: req.currentUser.uid,\n    threadId,\n  });\n\n  if (!permissions) {\n    log(`Error while fetching permissions for post ${threadId}`);\n    res.sendStatus(500);\n    return;\n  }\n\n  if (\n    !permissions.length ||\n    !permissions.includes(ThreadPermissions.editDefaultView)\n  ) {\n    res.sendStatus(401);\n    return;\n  }\n\n  if (\n    !(await updateThreadView({\n      threadId,\n      defaultView,\n    }))\n  ) {\n    return res.sendStatus(500);\n  }\n\n  res.sendStatus(200);\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"55927c0e670f643bf20910a35c1c86b114de3022","contentHash":"f7d351a0e83d039c22b69d2b5962c4abd1554ff6dbce8636f40e3a1af5362203"},"/Users/esra/projects/programming/bobaserver/server/users/queries.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/users/queries.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":231}},"16":{"start":{"line":16,"column":16},"end":{"line":16,"column":49}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":50}},"18":{"start":{"line":18,"column":14},"end":{"line":18,"column":47}},"19":{"start":{"line":19,"column":24},"end":{"line":19,"column":51}},"20":{"start":{"line":20,"column":12},"end":{"line":20,"column":59}},"21":{"start":{"line":21,"column":14},"end":{"line":21,"column":63}},"22":{"start":{"line":22,"column":13},"end":{"line":22,"column":61}},"23":{"start":{"line":23,"column":0},"end":{"line":35,"column":3}},"24":{"start":{"line":23,"column":53},"end":{"line":35,"column":2}},"25":{"start":{"line":24,"column":18},"end":{"line":24,"column":70}},"26":{"start":{"line":25,"column":4},"end":{"line":34,"column":5}},"27":{"start":{"line":26,"column":21},"end":{"line":26,"column":66}},"28":{"start":{"line":27,"column":8},"end":{"line":27,"column":42}},"29":{"start":{"line":28,"column":8},"end":{"line":28,"column":20}},"30":{"start":{"line":31,"column":8},"end":{"line":31,"column":45}},"31":{"start":{"line":32,"column":8},"end":{"line":32,"column":17}},"32":{"start":{"line":33,"column":8},"end":{"line":33,"column":20}},"33":{"start":{"line":36,"column":0},"end":{"line":54,"column":3}},"34":{"start":{"line":36,"column":55},"end":{"line":54,"column":2}},"35":{"start":{"line":37,"column":33},"end":{"line":43,"column":119}},"36":{"start":{"line":44,"column":4},"end":{"line":53,"column":5}},"37":{"start":{"line":45,"column":8},"end":{"line":45,"column":85}},"38":{"start":{"line":46,"column":8},"end":{"line":46,"column":83}},"39":{"start":{"line":47,"column":8},"end":{"line":47,"column":20}},"40":{"start":{"line":50,"column":8},"end":{"line":50,"column":55}},"41":{"start":{"line":51,"column":8},"end":{"line":51,"column":17}},"42":{"start":{"line":52,"column":8},"end":{"line":52,"column":21}},"43":{"start":{"line":55,"column":0},"end":{"line":78,"column":3}},"44":{"start":{"line":55,"column":67},"end":{"line":78,"column":2}},"45":{"start":{"line":56,"column":32},"end":{"line":60,"column":39}},"46":{"start":{"line":61,"column":4},"end":{"line":77,"column":5}},"47":{"start":{"line":62,"column":8},"end":{"line":66,"column":11}},"48":{"start":{"line":67,"column":8},"end":{"line":67,"column":73}},"49":{"start":{"line":68,"column":8},"end":{"line":71,"column":10}},"50":{"start":{"line":74,"column":8},"end":{"line":74,"column":49}},"51":{"start":{"line":75,"column":8},"end":{"line":75,"column":17}},"52":{"start":{"line":76,"column":8},"end":{"line":76,"column":20}},"53":{"start":{"line":79,"column":0},"end":{"line":106,"column":3}},"54":{"start":{"line":79,"column":43},"end":{"line":106,"column":2}},"55":{"start":{"line":80,"column":18},"end":{"line":87,"column":29}},"56":{"start":{"line":88,"column":4},"end":{"line":105,"column":5}},"57":{"start":{"line":89,"column":30},"end":{"line":91,"column":10}},"58":{"start":{"line":92,"column":8},"end":{"line":92,"column":52}},"59":{"start":{"line":93,"column":8},"end":{"line":93,"column":27}},"60":{"start":{"line":94,"column":8},"end":{"line":99,"column":10}},"61":{"start":{"line":102,"column":8},"end":{"line":102,"column":53}},"62":{"start":{"line":103,"column":8},"end":{"line":103,"column":17}},"63":{"start":{"line":104,"column":8},"end":{"line":104,"column":20}},"64":{"start":{"line":107,"column":0},"end":{"line":124,"column":3}},"65":{"start":{"line":107,"column":41},"end":{"line":124,"column":2}},"66":{"start":{"line":108,"column":18},"end":{"line":111,"column":27}},"67":{"start":{"line":112,"column":4},"end":{"line":123,"column":5}},"68":{"start":{"line":113,"column":8},"end":{"line":115,"column":11}},"69":{"start":{"line":116,"column":8},"end":{"line":116,"column":48}},"70":{"start":{"line":117,"column":8},"end":{"line":117,"column":20}},"71":{"start":{"line":120,"column":8},"end":{"line":120,"column":53}},"72":{"start":{"line":121,"column":8},"end":{"line":121,"column":17}},"73":{"start":{"line":122,"column":8},"end":{"line":122,"column":21}},"74":{"start":{"line":125,"column":0},"end":{"line":143,"column":3}},"75":{"start":{"line":125,"column":34},"end":{"line":143,"column":2}},"76":{"start":{"line":126,"column":18},"end":{"line":128,"column":58}},"77":{"start":{"line":129,"column":4},"end":{"line":142,"column":5}},"78":{"start":{"line":130,"column":8},"end":{"line":134,"column":11}},"79":{"start":{"line":135,"column":8},"end":{"line":135,"column":71}},"80":{"start":{"line":136,"column":8},"end":{"line":136,"column":20}},"81":{"start":{"line":139,"column":8},"end":{"line":139,"column":44}},"82":{"start":{"line":140,"column":8},"end":{"line":140,"column":17}},"83":{"start":{"line":141,"column":8},"end":{"line":141,"column":21}},"84":{"start":{"line":144,"column":0},"end":{"line":170,"column":3}},"85":{"start":{"line":144,"column":52},"end":{"line":170,"column":2}},"86":{"start":{"line":145,"column":18},"end":{"line":158,"column":38}},"87":{"start":{"line":159,"column":4},"end":{"line":169,"column":5}},"88":{"start":{"line":160,"column":8},"end":{"line":160,"column":65}},"89":{"start":{"line":161,"column":8},"end":{"line":163,"column":11}},"90":{"start":{"line":166,"column":8},"end":{"line":166,"column":48}},"91":{"start":{"line":167,"column":8},"end":{"line":167,"column":17}},"92":{"start":{"line":168,"column":8},"end":{"line":168,"column":21}},"93":{"start":{"line":171,"column":26},"end":{"line":171,"column":28}},"94":{"start":{"line":172,"column":0},"end":{"line":206,"column":3}},"95":{"start":{"line":172,"column":87},"end":{"line":206,"column":2}},"96":{"start":{"line":173,"column":4},"end":{"line":205,"column":5}},"97":{"start":{"line":174,"column":30},"end":{"line":174,"column":76}},"98":{"start":{"line":175,"column":30},"end":{"line":175,"column":150}},"99":{"start":{"line":176,"column":21},"end":{"line":182,"column":10}},"100":{"start":{"line":183,"column":8},"end":{"line":187,"column":9}},"101":{"start":{"line":185,"column":12},"end":{"line":185,"column":31}},"102":{"start":{"line":186,"column":12},"end":{"line":186,"column":55}},"103":{"start":{"line":188,"column":21},"end":{"line":188,"column":25}},"104":{"start":{"line":189,"column":25},"end":{"line":189,"column":29}},"105":{"start":{"line":190,"column":8},"end":{"line":190,"column":63}},"106":{"start":{"line":191,"column":8},"end":{"line":198,"column":9}},"107":{"start":{"line":192,"column":12},"end":{"line":195,"column":15}},"108":{"start":{"line":197,"column":12},"end":{"line":197,"column":25}},"109":{"start":{"line":199,"column":8},"end":{"line":199,"column":54}},"110":{"start":{"line":202,"column":8},"end":{"line":202,"column":73}},"111":{"start":{"line":203,"column":8},"end":{"line":203,"column":17}},"112":{"start":{"line":204,"column":8},"end":{"line":204,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":23,"column":32},"end":{"line":23,"column":33}},"loc":{"start":{"line":23,"column":53},"end":{"line":35,"column":2}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":23,"column":87},"end":{"line":23,"column":88}},"loc":{"start":{"line":23,"column":100},"end":{"line":35,"column":1}},"line":23},"10":{"name":"(anonymous_10)","decl":{"start":{"line":36,"column":34},"end":{"line":36,"column":35}},"loc":{"start":{"line":36,"column":55},"end":{"line":54,"column":2}},"line":36},"11":{"name":"(anonymous_11)","decl":{"start":{"line":36,"column":89},"end":{"line":36,"column":90}},"loc":{"start":{"line":36,"column":102},"end":{"line":54,"column":1}},"line":36},"12":{"name":"(anonymous_12)","decl":{"start":{"line":55,"column":25},"end":{"line":55,"column":26}},"loc":{"start":{"line":55,"column":67},"end":{"line":78,"column":2}},"line":55},"13":{"name":"(anonymous_13)","decl":{"start":{"line":55,"column":101},"end":{"line":55,"column":102}},"loc":{"start":{"line":55,"column":114},"end":{"line":78,"column":1}},"line":55},"14":{"name":"(anonymous_14)","decl":{"start":{"line":79,"column":27},"end":{"line":79,"column":28}},"loc":{"start":{"line":79,"column":43},"end":{"line":106,"column":2}},"line":79},"15":{"name":"(anonymous_15)","decl":{"start":{"line":79,"column":77},"end":{"line":79,"column":78}},"loc":{"start":{"line":79,"column":90},"end":{"line":106,"column":1}},"line":79},"16":{"name":"(anonymous_16)","decl":{"start":{"line":107,"column":25},"end":{"line":107,"column":26}},"loc":{"start":{"line":107,"column":41},"end":{"line":124,"column":2}},"line":107},"17":{"name":"(anonymous_17)","decl":{"start":{"line":107,"column":75},"end":{"line":107,"column":76}},"loc":{"start":{"line":107,"column":88},"end":{"line":124,"column":1}},"line":107},"18":{"name":"(anonymous_18)","decl":{"start":{"line":125,"column":24},"end":{"line":125,"column":25}},"loc":{"start":{"line":125,"column":34},"end":{"line":143,"column":2}},"line":125},"19":{"name":"(anonymous_19)","decl":{"start":{"line":125,"column":68},"end":{"line":125,"column":69}},"loc":{"start":{"line":125,"column":81},"end":{"line":143,"column":1}},"line":125},"20":{"name":"(anonymous_20)","decl":{"start":{"line":144,"column":31},"end":{"line":144,"column":32}},"loc":{"start":{"line":144,"column":52},"end":{"line":170,"column":2}},"line":144},"21":{"name":"(anonymous_21)","decl":{"start":{"line":144,"column":86},"end":{"line":144,"column":87}},"loc":{"start":{"line":144,"column":99},"end":{"line":170,"column":1}},"line":144},"22":{"name":"(anonymous_22)","decl":{"start":{"line":172,"column":26},"end":{"line":172,"column":27}},"loc":{"start":{"line":172,"column":87},"end":{"line":206,"column":2}},"line":172},"23":{"name":"(anonymous_23)","decl":{"start":{"line":172,"column":121},"end":{"line":172,"column":122}},"loc":{"start":{"line":172,"column":134},"end":{"line":206,"column":1}},"line":172}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":174,"column":30},"end":{"line":174,"column":76}},"type":"binary-expr","locations":[{"start":{"line":174,"column":30},"end":{"line":174,"column":36}},{"start":{"line":174,"column":40},"end":{"line":174,"column":76}}],"line":174},"9":{"loc":{"start":{"line":175,"column":30},"end":{"line":175,"column":150}},"type":"binary-expr","locations":[{"start":{"line":175,"column":31},"end":{"line":175,"column":116}},{"start":{"line":175,"column":121},"end":{"line":175,"column":129}},{"start":{"line":175,"column":133},"end":{"line":175,"column":150}}],"line":175},"10":{"loc":{"start":{"line":175,"column":31},"end":{"line":175,"column":116}},"type":"cond-expr","locations":[{"start":{"line":175,"column":84},"end":{"line":175,"column":90}},{"start":{"line":175,"column":93},"end":{"line":175,"column":116}}],"line":175},"11":{"loc":{"start":{"line":175,"column":31},"end":{"line":175,"column":81}},"type":"binary-expr","locations":[{"start":{"line":175,"column":31},"end":{"line":175,"column":53}},{"start":{"line":175,"column":57},"end":{"line":175,"column":81}}],"line":175},"12":{"loc":{"start":{"line":178,"column":34},"end":{"line":178,"column":140}},"type":"binary-expr","locations":[{"start":{"line":178,"column":35},"end":{"line":178,"column":131}},{"start":{"line":178,"column":136},"end":{"line":178,"column":140}}],"line":178},"13":{"loc":{"start":{"line":178,"column":35},"end":{"line":178,"column":131}},"type":"cond-expr","locations":[{"start":{"line":178,"column":88},"end":{"line":178,"column":94}},{"start":{"line":178,"column":97},"end":{"line":178,"column":131}}],"line":178},"14":{"loc":{"start":{"line":178,"column":35},"end":{"line":178,"column":85}},"type":"binary-expr","locations":[{"start":{"line":178,"column":35},"end":{"line":178,"column":57}},{"start":{"line":178,"column":61},"end":{"line":178,"column":85}}],"line":178},"15":{"loc":{"start":{"line":183,"column":8},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":183,"column":8},"end":{"line":187,"column":9}},{"start":{"line":183,"column":8},"end":{"line":187,"column":9}}],"line":183},"16":{"loc":{"start":{"line":183,"column":12},"end":{"line":183,"column":57}},"type":"binary-expr","locations":[{"start":{"line":183,"column":12},"end":{"line":183,"column":28}},{"start":{"line":183,"column":32},"end":{"line":183,"column":57}}],"line":183},"17":{"loc":{"start":{"line":191,"column":8},"end":{"line":198,"column":9}},"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":198,"column":9}},{"start":{"line":191,"column":8},"end":{"line":198,"column":9}}],"line":191}},"s":{"0":1,"1":3,"2":0,"3":3,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":6,"11":3,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":3,"25":3,"26":3,"27":3,"28":3,"29":3,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0},"f":{"0":3,"1":3,"2":0,"3":3,"4":3,"5":0,"6":6,"7":3,"8":3,"9":3,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"0":[1,1,1],"1":[3,0],"2":[3,3],"3":[3,3],"4":[3,3],"5":[1,1,1],"6":[2,1],"7":[3,3],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/users/queries.ts","sources":["/Users/esra/projects/programming/bobaserver/server/users/queries.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,kDAA0B;AAE1B,mDAA2B;AAC3B,gDAAwB;AACxB,oDAA8D;AAE9D,MAAM,GAAG,GAAG,eAAK,CAAC,8BAA8B,CAAC,CAAC;AAClD,MAAM,KAAK,GAAG,eAAK,CAAC,gCAAgC,CAAC,CAAC;AACtD,MAAM,IAAI,GAAG,eAAK,CAAC,+BAA+B,CAAC,CAAC;AAEvC,QAAA,qBAAqB,GAAG,CAAO,EAC1C,UAAU,GAGX,EAAgB,EAAE;IACjB,MAAM,KAAK,GAAG,oDAAoD,CAAC;IAEnE,IAAI;QACF,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,6BAA6B,CAAC,CAAC;QACrC,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,uBAAuB,GAAG,CAAO,EAC5C,UAAU,GAGX,EAAgB,EAAE;IACjB,MAAM,oBAAoB,GAAG;;;;;;uHAMwF,CAAC;IAEtH,IAAI;QACF,MAAM,cAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,CAAC;QACnE,IAAI,CAAC,wDAAwD,EAAE,UAAU,CAAC,CAAC;QAC3E,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,uCAAuC,CAAC,CAAC;QAC/C,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,cAAc,GAAG,CAAO,EACnC,UAAU,EACV,QAAQ,EACR,SAAS,GAKV,EAGS,EAAE;IACV,MAAM,mBAAmB,GAAG;;;;uCAIS,CAAC;IAEtC,IAAI;QACF,MAAM,cAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YACnC,WAAW,EAAE,UAAU;YACvB,QAAQ;YACR,UAAU,EAAE,SAAS;SACtB,CAAC,CAAC;QACH,IAAI,CAAC,8CAA8C,EAAE,UAAU,CAAC,CAAC;QACjE,OAAO;YACL,QAAQ;YACR,SAAS;SACV,CAAC;KACH;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACzC,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,gBAAgB,GAAG,CAAO,EACrC,KAAK,GAGN,EAKS,EAAE;IACV,MAAM,KAAK,GAAG;;;;;;;6BAOa,CAAC;IAC5B,IAAI;QACF,MAAM,aAAa,GAAG,MAAM,cAAI,CAAC,GAAG,CAAC,KAAK,EAAE;YAC1C,KAAK;SACN,CAAC,CAAC;QACH,GAAG,CAAC,8BAA8B,KAAK,GAAG,CAAC,CAAC;QAC5C,GAAG,CAAC,aAAa,CAAC,CAAC;QACnB,OAAO;YACL,KAAK,EAAE,aAAa,CAAC,aAAa;YAClC,OAAO,EAAE,aAAa,CAAC,OAAO;YAC9B,IAAI,EAAE,aAAa,CAAC,IAAI;YACxB,OAAO,EAAE,aAAa,CAAC,OAAO;SAC/B,CAAC;KACH;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC7C,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,cAAc,GAAG,CAAO,EACnC,KAAK,GAGN,EAAoB,EAAE;IACrB,MAAM,KAAK,GAAG;;;2BAGW,CAAC;IAC1B,IAAI;QACF,MAAM,cAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACrB,KAAK;SACN,CAAC,CAAC;QACH,GAAG,CAAC,kBAAkB,KAAK,WAAW,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC7C,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,aAAa,GAAG,CAAO,IAInC,EAAE,EAAE;IACH,MAAM,KAAK,GAAG;;0DAE0C,CAAC;IACzD,IAAI;QACF,MAAM,cAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACrB,WAAW,EAAE,IAAI,CAAC,UAAU;YAC5B,UAAU,EAAE,IAAI,CAAC,SAAS;YAC1B,UAAU,EAAE,IAAI,CAAC,SAAS;SAC3B,CAAC,CAAC;QACH,GAAG,CAAC,wCAAwC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,4BAA4B,CAAC,CAAC;QACpC,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEW,QAAA,oBAAoB,GAAG,CAAO,EACzC,UAAU,GAGX,EAAE,EAAE;IACH,MAAM,KAAK,GAAG;;;;;;;;;;;;;sCAasB,CAAC;IACrC,IAAI;QACF,GAAG,CAAC,uCAAuC,UAAU,EAAE,CAAC,CAAC;QACzD,OAAO,MAAM,cAAI,CAAC,GAAG,CAAC,KAAK,EAAE;YAC3B,WAAW,EAAE,UAAU;SACxB,CAAC,CAAC;KACJ;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACxC,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC;AAEF,MAAM,iBAAiB,GAAG,EAAE,CAAC;AAChB,QAAA,eAAe,GAAG,CAAO,EACpC,UAAU,EACV,MAAM,EACN,QAAQ,EACR,WAAW,EACX,OAAO,GAOR,EAMC,EAAE;IACF,IAAI;QACF,MAAM,aAAa,GAAG,MAAM,IAAI,4BAAY,CAAC,MAAM,CAAC,CAAC;QAErD,MAAM,aAAa,GACjB,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,SAAS,KAAI,QAAQ,IAAI,iBAAiB,CAAC;QAC5D,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,UAAU,CAAC,aAAG,CAAC,mBAAmB,EAAE;YAC1D,WAAW,EAAE,UAAU;YACvB,oBAAoB,EAAE,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,oBAAoB,KAAI,IAAI;YACjE,SAAS,EAAE,aAAa;YACxB,YAAY,EAAE,WAAW;YACzB,QAAQ,EAAE,OAAO;SAClB,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,EAAE;YACjD,0CAA0C;YAC1C,GAAG,CAAC,aAAa,CAAC,CAAC;YACnB,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;SAC5C;QAED,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,GAAG,CAAC,yCAAyC,EAAE,MAAM,CAAC,CAAC;QACvD,IAAI,MAAM,CAAC,MAAM,GAAG,aAAa,EAAE;YACjC,UAAU,GAAG,4BAAY,CAAC;gBACxB,oBAAoB,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,oBAAoB;gBACpE,SAAS,EAAE,aAAa;aACzB,CAAC,CAAC;YACH,iCAAiC;YACjC,MAAM,CAAC,GAAG,EAAE,CAAC;SACd;QAED,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;KAC/C;IAAC,OAAO,CAAC,EAAE;QACV,KAAK,CAAC,2CAA2C,UAAU,IAAI,CAAC,CAAC;QACjE,KAAK,CAAC,CAAC,CAAC,CAAC;QACT,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAA,CAAC","sourcesContent":["import debug from \"debug\";\nimport { DbActivityThreadType } from \"../../Types\";\nimport pool from \"../pool\";\nimport sql from \"./sql\";\nimport { encodeCursor, decodeCursor } from \"../queries-utils\";\n\nconst log = debug(\"bobaserver:users:queries-log\");\nconst error = debug(\"bobaserver:users:queries-error\");\nconst info = debug(\"bobaserver:users:queries-info\");\n\nexport const getUserFromFirebaseId = async ({\n  firebaseId,\n}: {\n  firebaseId: string;\n}): Promise<any> => {\n  const query = \"SELECT * FROM users WHERE firebase_id = $1 LIMIT 1\";\n\n  try {\n    const user = await pool.one(query, [firebaseId]);\n    info(`Fetched user data: `, user);\n    return user;\n  } catch (e) {\n    error(`Error while fetching users.`);\n    error(e);\n    return null;\n  }\n};\n\nexport const dismissAllNotifications = async ({\n  firebaseId,\n}: {\n  firebaseId: string;\n}): Promise<any> => {\n  const dismissNotifications = `\n    INSERT INTO dismiss_notifications_requests(user_id, dismiss_request_time) VALUES (\n        (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/),\n         DEFAULT)\n    ON CONFLICT(user_id) DO UPDATE \n        SET dismiss_request_time = DEFAULT\n        WHERE dismiss_notifications_requests.user_id = (SELECT id FROM users WHERE users.firebase_id = $/firebase_id/)`;\n\n  try {\n    await pool.none(dismissNotifications, { firebase_id: firebaseId });\n    info(`Dismissed all notifications for user with firebaseId: `, firebaseId);\n    return true;\n  } catch (e) {\n    error(`Error while dismissing notifications.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const updateUserData = async ({\n  firebaseId,\n  username,\n  avatarUrl,\n}: {\n  firebaseId: string;\n  username: string;\n  avatarUrl: string;\n}): Promise<{\n  username: string;\n  avatarUrl: string;\n} | null> => {\n  const updateUserDataQuery = `\n    UPDATE users\n    SET username = $/username/,\n        avatar_reference_id = $/avatar_url/\n    WHERE firebase_id = $/firebase_id/`;\n\n  try {\n    await pool.none(updateUserDataQuery, {\n      firebase_id: firebaseId,\n      username,\n      avatar_url: avatarUrl,\n    });\n    info(`Updated user data for user with firebaseId: `, firebaseId);\n    return {\n      username,\n      avatarUrl,\n    };\n  } catch (e) {\n    error(`Error while updating user data.`);\n    error(e);\n    return null;\n  }\n};\n\nexport const getInviteDetails = async ({\n  nonce,\n}: {\n  nonce: string;\n}): Promise<{\n  email: string;\n  used: boolean;\n  expired: boolean;\n  inviter: number;\n} | null> => {\n  const query = `\n    SELECT \n      inviter,\n      invitee_email,\n      created + duration < NOW() as expired,\n      used \n    FROM account_invites WHERE nonce = $/nonce/ \n    ORDER BY created LIMIT 1`;\n  try {\n    const inviteDetails = await pool.one(query, {\n      nonce,\n    });\n    log(`Fetched details for invite ${nonce}:`);\n    log(inviteDetails);\n    return {\n      email: inviteDetails.invitee_email,\n      expired: inviteDetails.expired,\n      used: inviteDetails.used,\n      inviter: inviteDetails.inviter,\n    };\n  } catch (e) {\n    error(`Error while getting invite details.`);\n    error(e);\n    return null;\n  }\n};\n\nexport const markInviteUsed = async ({\n  nonce,\n}: {\n  nonce: string;\n}): Promise<boolean> => {\n  const query = `\n    UPDATE account_invites\n    SET used = TRUE\n    WHERE nonce = $/nonce/`;\n  try {\n    await pool.none(query, {\n      nonce,\n    });\n    log(`Marking invite ${nonce} as used.`);\n    return true;\n  } catch (e) {\n    error(`Error while marking invite as used.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const createNewUser = async (user: {\n  firebaseId: string;\n  invitedBy: number;\n  createdOn: string;\n}) => {\n  const query = `\n    INSERT INTO users(firebase_id, invited_by, created_on)\n    VALUES ($/firebase_id/, $/invited_by/, $/created_on/)`;\n  try {\n    await pool.none(query, {\n      firebase_id: user.firebaseId,\n      invited_by: user.invitedBy,\n      created_on: user.createdOn,\n    });\n    log(`Added new user in DB for firebase ID ${user.firebaseId}`);\n    return true;\n  } catch (e) {\n    error(`Error creating a new user.`);\n    error(e);\n    return false;\n  }\n};\n\nexport const getBobadexIdentities = async ({\n  firebaseId,\n}: {\n  firebaseId: string;\n}) => {\n  const query = `      \n      SELECT \n        COUNT(*) AS identities_count,\n        jsonb_agg(identities.IDENTITY) FILTER (WHERE (identities.identity->'caught')::boolean = TRUE) AS user_identities\n      FROM (\n        SELECT\n          jsonb_build_object(\n            'index', ROW_NUMBER() OVER (ORDER BY si .id),\n            'name', si.display_name,\n            'avatarUrl', si.avatar_reference_id,\n            'caught', bool_or(uti.user_id IS NOT NULL)) AS identity\n        FROM secret_identities si\n        LEFT JOIN user_thread_identities uti ON uti.identity_id = si.id AND uti.user_id = (SELECT id FROM users WHERE firebase_id = $/firebase_id/)\n        GROUP BY si.id) AS identities`;\n  try {\n    log(`Getting boba identities firebase ID ${firebaseId}`);\n    return await pool.one(query, {\n      firebase_id: firebaseId,\n    });\n  } catch (e) {\n    error(`Error getting boba identities.`);\n    error(e);\n    return false;\n  }\n};\n\nconst DEFAULT_PAGE_SIZE = 10;\nexport const getUserActivity = async ({\n  firebaseId,\n  cursor,\n  pageSize,\n  updatedOnly,\n  ownOnly,\n}: {\n  firebaseId: string;\n  updatedOnly: boolean;\n  ownOnly: boolean;\n  cursor: string;\n  pageSize?: number;\n}): Promise<\n  | {\n      cursor: string | null;\n      activity: DbActivityThreadType[];\n    }\n  | false\n> => {\n  try {\n    const decodedCursor = cursor && decodeCursor(cursor);\n\n    const finalPageSize =\n      decodedCursor?.page_size || pageSize || DEFAULT_PAGE_SIZE;\n    const rows = await pool.manyOrNone(sql.getUserFeedActivity, {\n      firebase_id: firebaseId,\n      last_activity_cursor: decodedCursor?.last_activity_cursor || null,\n      page_size: finalPageSize,\n      updated_only: updatedOnly,\n      own_only: ownOnly,\n    });\n\n    if (rows.length == 1 && rows[0].thread_id == null) {\n      // Only one row with just the null thread)\n      log(`Feed empty.`);\n      return { cursor: undefined, activity: [] };\n    }\n\n    let result = rows;\n    let nextCursor = null;\n    log(`Got getBoardActivityBySlug query result`, result);\n    if (result.length > finalPageSize) {\n      nextCursor = encodeCursor({\n        last_activity_cursor: result[result.length - 1].thread_last_activity,\n        page_size: finalPageSize,\n      });\n      // remove last element from array\n      result.pop();\n    }\n\n    return { cursor: nextCursor, activity: rows };\n  } catch (e) {\n    error(`Error while fetching activity for user (${firebaseId}).`);\n    error(e);\n    return false;\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a89dc8b756c220a1c1b496e99a3819e2839f86a0","contentHash":"693b9269c598db23f65b07037207f207ae651e1c13ad78adcced13b3765746aa"},"/Users/esra/projects/programming/bobaserver/server/users/sql/index.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/users/sql/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":42}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":0},"end":{"line":10,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/users/sql/index.ts","sources":["/Users/esra/projects/programming/bobaserver/server/users/sql/index.ts"],"names":[],"mappings":";;;;;AAAA,2CAAuC;AACvC,gDAAwB;AAExB,kBAAe;IACb,mBAAmB,EAAE,IAAI,sBAAS,CAChC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAC/C;CACF,CAAC","sourcesContent":["import { QueryFile } from \"pg-promise\";\nimport path from \"path\";\n\nexport default {\n  getUserFeedActivity: new QueryFile(\n    path.join(__dirname, \"user-feed-activity.sql\")\n  ),\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bf1fada5075fbdc68a71823438d3af4dceacbf65","contentHash":"910f4d928fafeef4299f873a1afcd1b16b6937f9e32a5029fbe93cbc87caa066"},"/Users/esra/projects/programming/bobaserver/server/users/routes.ts":{"path":"/Users/esra/projects/programming/bobaserver/server/users/routes.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":16},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":18},"end":{"line":16,"column":53}},"17":{"start":{"line":17,"column":18},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":23},"end":{"line":18,"column":49}},"19":{"start":{"line":19,"column":25},"end":{"line":19,"column":53}},"20":{"start":{"line":20,"column":25},"end":{"line":20,"column":67}},"21":{"start":{"line":21,"column":16},"end":{"line":21,"column":35}},"22":{"start":{"line":22,"column":13},"end":{"line":22,"column":60}},"23":{"start":{"line":23,"column":12},"end":{"line":23,"column":58}},"24":{"start":{"line":24,"column":14},"end":{"line":24,"column":62}},"25":{"start":{"line":25,"column":15},"end":{"line":25,"column":41}},"26":{"start":{"line":26,"column":0},"end":{"line":49,"column":4}},"27":{"start":{"line":26,"column":59},"end":{"line":49,"column":2}},"28":{"start":{"line":28,"column":24},"end":{"line":28,"column":90}},"29":{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},"30":{"start":{"line":30,"column":8},"end":{"line":30,"column":28}},"31":{"start":{"line":31,"column":8},"end":{"line":31,"column":15}},"32":{"start":{"line":33,"column":23},"end":{"line":33,"column":88}},"33":{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},"34":{"start":{"line":35,"column":8},"end":{"line":35,"column":63}},"35":{"start":{"line":36,"column":8},"end":{"line":36,"column":60}},"36":{"start":{"line":38,"column":4},"end":{"line":38,"column":64}},"37":{"start":{"line":39,"column":21},"end":{"line":41,"column":7}},"38":{"start":{"line":42,"column":4},"end":{"line":42,"column":41}},"39":{"start":{"line":43,"column":29},"end":{"line":46,"column":5}},"40":{"start":{"line":47,"column":4},"end":{"line":47,"column":43}},"41":{"start":{"line":48,"column":4},"end":{"line":48,"column":98}},"42":{"start":{"line":50,"column":0},"end":{"line":78,"column":4}},"43":{"start":{"line":50,"column":67},"end":{"line":78,"column":2}},"44":{"start":{"line":52,"column":24},"end":{"line":52,"column":90}},"45":{"start":{"line":53,"column":4},"end":{"line":56,"column":5}},"46":{"start":{"line":54,"column":8},"end":{"line":54,"column":28}},"47":{"start":{"line":55,"column":8},"end":{"line":55,"column":15}},"48":{"start":{"line":57,"column":36},"end":{"line":57,"column":44}},"49":{"start":{"line":58,"column":4},"end":{"line":61,"column":5}},"50":{"start":{"line":59,"column":8},"end":{"line":59,"column":28}},"51":{"start":{"line":60,"column":8},"end":{"line":60,"column":15}},"52":{"start":{"line":62,"column":4},"end":{"line":62,"column":64}},"53":{"start":{"line":63,"column":21},"end":{"line":67,"column":6}},"54":{"start":{"line":68,"column":4},"end":{"line":68,"column":43}},"55":{"start":{"line":69,"column":4},"end":{"line":72,"column":5}},"56":{"start":{"line":70,"column":8},"end":{"line":70,"column":28}},"57":{"start":{"line":71,"column":8},"end":{"line":71,"column":15}},"58":{"start":{"line":73,"column":4},"end":{"line":73,"column":70}},"59":{"start":{"line":74,"column":4},"end":{"line":77,"column":7}},"60":{"start":{"line":79,"column":0},"end":{"line":142,"column":4}},"61":{"start":{"line":79,"column":44},"end":{"line":142,"column":2}},"62":{"start":{"line":80,"column":39},"end":{"line":80,"column":47}},"63":{"start":{"line":81,"column":26},"end":{"line":81,"column":69}},"64":{"start":{"line":82,"column":4},"end":{"line":88,"column":5}},"65":{"start":{"line":83,"column":8},"end":{"line":86,"column":11}},"66":{"start":{"line":87,"column":8},"end":{"line":87,"column":15}},"67":{"start":{"line":89,"column":4},"end":{"line":95,"column":5}},"68":{"start":{"line":90,"column":8},"end":{"line":93,"column":11}},"69":{"start":{"line":94,"column":8},"end":{"line":94,"column":15}},"70":{"start":{"line":96,"column":4},"end":{"line":102,"column":5}},"71":{"start":{"line":97,"column":8},"end":{"line":100,"column":11}},"72":{"start":{"line":101,"column":8},"end":{"line":101,"column":15}},"73":{"start":{"line":103,"column":4},"end":{"line":141,"column":7}},"74":{"start":{"line":109,"column":24},"end":{"line":134,"column":6}},"75":{"start":{"line":110,"column":20},"end":{"line":110,"column":28}},"76":{"start":{"line":111,"column":8},"end":{"line":111,"column":57}},"77":{"start":{"line":113,"column":24},"end":{"line":113,"column":65}},"78":{"start":{"line":114,"column":8},"end":{"line":120,"column":9}},"79":{"start":{"line":115,"column":12},"end":{"line":118,"column":15}},"80":{"start":{"line":119,"column":12},"end":{"line":119,"column":19}},"81":{"start":{"line":121,"column":24},"end":{"line":125,"column":10}},"82":{"start":{"line":126,"column":8},"end":{"line":132,"column":9}},"83":{"start":{"line":127,"column":12},"end":{"line":130,"column":15}},"84":{"start":{"line":131,"column":12},"end":{"line":131,"column":19}},"85":{"start":{"line":133,"column":8},"end":{"line":133,"column":28}},"86":{"start":{"line":136,"column":8},"end":{"line":136,"column":19}},"87":{"start":{"line":137,"column":8},"end":{"line":140,"column":11}},"88":{"start":{"line":143,"column":0},"end":{"line":152,"column":4}},"89":{"start":{"line":143,"column":67},"end":{"line":152,"column":2}},"90":{"start":{"line":145,"column":24},"end":{"line":145,"column":90}},"91":{"start":{"line":146,"column":4},"end":{"line":149,"column":5}},"92":{"start":{"line":147,"column":8},"end":{"line":147,"column":28}},"93":{"start":{"line":148,"column":8},"end":{"line":148,"column":15}},"94":{"start":{"line":150,"column":23},"end":{"line":150,"column":90}},"95":{"start":{"line":151,"column":4},"end":{"line":151,"column":37}},"96":{"start":{"line":153,"column":0},"end":{"line":171,"column":4}},"97":{"start":{"line":153,"column":79},"end":{"line":171,"column":2}},"98":{"start":{"line":155,"column":24},"end":{"line":155,"column":90}},"99":{"start":{"line":156,"column":4},"end":{"line":159,"column":5}},"100":{"start":{"line":157,"column":8},"end":{"line":157,"column":28}},"101":{"start":{"line":158,"column":8},"end":{"line":158,"column":15}},"102":{"start":{"line":160,"column":4},"end":{"line":160,"column":70}},"103":{"start":{"line":161,"column":30},"end":{"line":163,"column":6}},"104":{"start":{"line":164,"column":4},"end":{"line":168,"column":5}},"105":{"start":{"line":165,"column":8},"end":{"line":165,"column":32}},"106":{"start":{"line":166,"column":8},"end":{"line":166,"column":35}},"107":{"start":{"line":167,"column":8},"end":{"line":167,"column":15}},"108":{"start":{"line":169,"column":4},"end":{"line":169,"column":31}},"109":{"start":{"line":170,"column":4},"end":{"line":170,"column":24}},"110":{"start":{"line":172,"column":0},"end":{"line":237,"column":4}},"111":{"start":{"line":172,"column":64},"end":{"line":237,"column":2}},"112":{"start":{"line":174,"column":45},"end":{"line":174,"column":54}},"113":{"start":{"line":175,"column":24},"end":{"line":175,"column":90}},"114":{"start":{"line":176,"column":4},"end":{"line":179,"column":5}},"115":{"start":{"line":177,"column":8},"end":{"line":177,"column":28}},"116":{"start":{"line":178,"column":8},"end":{"line":178,"column":15}},"117":{"start":{"line":180,"column":25},"end":{"line":185,"column":6}},"118":{"start":{"line":186,"column":4},"end":{"line":189,"column":5}},"119":{"start":{"line":187,"column":8},"end":{"line":187,"column":28}},"120":{"start":{"line":188,"column":8},"end":{"line":188,"column":15}},"121":{"start":{"line":190,"column":4},"end":{"line":193,"column":5}},"122":{"start":{"line":191,"column":8},"end":{"line":191,"column":28}},"123":{"start":{"line":192,"column":8},"end":{"line":192,"column":15}},"124":{"start":{"line":194,"column":32},"end":{"line":233,"column":6}},"125":{"start":{"line":195,"column":35},"end":{"line":195,"column":79}},"126":{"start":{"line":196,"column":8},"end":{"line":232,"column":10}},"127":{"start":{"line":234,"column":21},"end":{"line":234,"column":93}},"128":{"start":{"line":235,"column":4},"end":{"line":235,"column":84}},"129":{"start":{"line":235,"column":36},"end":{"line":235,"column":82}},"130":{"start":{"line":236,"column":4},"end":{"line":236,"column":35}},"131":{"start":{"line":238,"column":0},"end":{"line":238,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":26,"column":45},"end":{"line":26,"column":46}},"loc":{"start":{"line":26,"column":59},"end":{"line":49,"column":2}},"line":26},"9":{"name":"(anonymous_9)","decl":{"start":{"line":26,"column":93},"end":{"line":26,"column":94}},"loc":{"start":{"line":26,"column":106},"end":{"line":49,"column":1}},"line":26},"10":{"name":"(anonymous_10)","decl":{"start":{"line":50,"column":53},"end":{"line":50,"column":54}},"loc":{"start":{"line":50,"column":67},"end":{"line":78,"column":2}},"line":50},"11":{"name":"(anonymous_11)","decl":{"start":{"line":50,"column":101},"end":{"line":50,"column":102}},"loc":{"start":{"line":50,"column":114},"end":{"line":78,"column":1}},"line":50},"12":{"name":"(anonymous_12)","decl":{"start":{"line":79,"column":30},"end":{"line":79,"column":31}},"loc":{"start":{"line":79,"column":44},"end":{"line":142,"column":2}},"line":79},"13":{"name":"(anonymous_13)","decl":{"start":{"line":79,"column":78},"end":{"line":79,"column":79}},"loc":{"start":{"line":79,"column":91},"end":{"line":142,"column":1}},"line":79},"14":{"name":"(anonymous_14)","decl":{"start":{"line":109,"column":14},"end":{"line":109,"column":15}},"loc":{"start":{"line":109,"column":24},"end":{"line":134,"column":6}},"line":109},"15":{"name":"(anonymous_15)","decl":{"start":{"line":109,"column":58},"end":{"line":109,"column":59}},"loc":{"start":{"line":109,"column":71},"end":{"line":134,"column":5}},"line":109},"16":{"name":"(anonymous_16)","decl":{"start":{"line":135,"column":15},"end":{"line":135,"column":16}},"loc":{"start":{"line":135,"column":26},"end":{"line":141,"column":5}},"line":135},"17":{"name":"(anonymous_17)","decl":{"start":{"line":143,"column":53},"end":{"line":143,"column":54}},"loc":{"start":{"line":143,"column":67},"end":{"line":152,"column":2}},"line":143},"18":{"name":"(anonymous_18)","decl":{"start":{"line":143,"column":101},"end":{"line":143,"column":102}},"loc":{"start":{"line":143,"column":114},"end":{"line":152,"column":1}},"line":143},"19":{"name":"(anonymous_19)","decl":{"start":{"line":153,"column":65},"end":{"line":153,"column":66}},"loc":{"start":{"line":153,"column":79},"end":{"line":171,"column":2}},"line":153},"20":{"name":"(anonymous_20)","decl":{"start":{"line":153,"column":113},"end":{"line":153,"column":114}},"loc":{"start":{"line":153,"column":126},"end":{"line":171,"column":1}},"line":153},"21":{"name":"(anonymous_21)","decl":{"start":{"line":172,"column":50},"end":{"line":172,"column":51}},"loc":{"start":{"line":172,"column":64},"end":{"line":237,"column":2}},"line":172},"22":{"name":"(anonymous_22)","decl":{"start":{"line":172,"column":98},"end":{"line":172,"column":99}},"loc":{"start":{"line":172,"column":111},"end":{"line":237,"column":1}},"line":172},"23":{"name":"(anonymous_23)","decl":{"start":{"line":194,"column":58},"end":{"line":194,"column":59}},"loc":{"start":{"line":194,"column":70},"end":{"line":233,"column":5}},"line":194},"24":{"name":"(anonymous_24)","decl":{"start":{"line":235,"column":26},"end":{"line":235,"column":27}},"loc":{"start":{"line":235,"column":36},"end":{"line":235,"column":82}},"line":235}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":28,"column":24},"end":{"line":28,"column":90}},"type":"cond-expr","locations":[{"start":{"line":28,"column":75},"end":{"line":28,"column":81}},{"start":{"line":28,"column":84},"end":{"line":28,"column":90}}],"line":28},"9":{"loc":{"start":{"line":28,"column":24},"end":{"line":28,"column":72}},"type":"binary-expr","locations":[{"start":{"line":28,"column":24},"end":{"line":28,"column":55}},{"start":{"line":28,"column":59},"end":{"line":28,"column":72}}],"line":28},"10":{"loc":{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},{"start":{"line":29,"column":4},"end":{"line":32,"column":5}}],"line":29},"11":{"loc":{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},{"start":{"line":34,"column":4},"end":{"line":37,"column":5}}],"line":34},"12":{"loc":{"start":{"line":52,"column":24},"end":{"line":52,"column":90}},"type":"cond-expr","locations":[{"start":{"line":52,"column":75},"end":{"line":52,"column":81}},{"start":{"line":52,"column":84},"end":{"line":52,"column":90}}],"line":52},"13":{"loc":{"start":{"line":52,"column":24},"end":{"line":52,"column":72}},"type":"binary-expr","locations":[{"start":{"line":52,"column":24},"end":{"line":52,"column":55}},{"start":{"line":52,"column":59},"end":{"line":52,"column":72}}],"line":52},"14":{"loc":{"start":{"line":53,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":56,"column":5}},{"start":{"line":53,"column":4},"end":{"line":56,"column":5}}],"line":53},"15":{"loc":{"start":{"line":58,"column":4},"end":{"line":61,"column":5}},"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":61,"column":5}},{"start":{"line":58,"column":4},"end":{"line":61,"column":5}}],"line":58},"16":{"loc":{"start":{"line":58,"column":8},"end":{"line":58,"column":31}},"type":"binary-expr","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":17}},{"start":{"line":58,"column":21},"end":{"line":58,"column":31}}],"line":58},"17":{"loc":{"start":{"line":69,"column":4},"end":{"line":72,"column":5}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":72,"column":5}},{"start":{"line":69,"column":4},"end":{"line":72,"column":5}}],"line":69},"18":{"loc":{"start":{"line":82,"column":4},"end":{"line":88,"column":5}},"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":88,"column":5}},{"start":{"line":82,"column":4},"end":{"line":88,"column":5}}],"line":82},"19":{"loc":{"start":{"line":89,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":95,"column":5}},{"start":{"line":89,"column":4},"end":{"line":95,"column":5}}],"line":89},"20":{"loc":{"start":{"line":89,"column":8},"end":{"line":89,"column":51}},"type":"binary-expr","locations":[{"start":{"line":89,"column":8},"end":{"line":89,"column":29}},{"start":{"line":89,"column":33},"end":{"line":89,"column":51}}],"line":89},"21":{"loc":{"start":{"line":96,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":102,"column":5}},{"start":{"line":96,"column":4},"end":{"line":102,"column":5}}],"line":96},"22":{"loc":{"start":{"line":114,"column":8},"end":{"line":120,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":120,"column":9}},{"start":{"line":114,"column":8},"end":{"line":120,"column":9}}],"line":114},"23":{"loc":{"start":{"line":126,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":132,"column":9}},{"start":{"line":126,"column":8},"end":{"line":132,"column":9}}],"line":126},"24":{"loc":{"start":{"line":145,"column":24},"end":{"line":145,"column":90}},"type":"cond-expr","locations":[{"start":{"line":145,"column":75},"end":{"line":145,"column":81}},{"start":{"line":145,"column":84},"end":{"line":145,"column":90}}],"line":145},"25":{"loc":{"start":{"line":145,"column":24},"end":{"line":145,"column":72}},"type":"binary-expr","locations":[{"start":{"line":145,"column":24},"end":{"line":145,"column":55}},{"start":{"line":145,"column":59},"end":{"line":145,"column":72}}],"line":145},"26":{"loc":{"start":{"line":146,"column":4},"end":{"line":149,"column":5}},"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":149,"column":5}},{"start":{"line":146,"column":4},"end":{"line":149,"column":5}}],"line":146},"27":{"loc":{"start":{"line":155,"column":24},"end":{"line":155,"column":90}},"type":"cond-expr","locations":[{"start":{"line":155,"column":75},"end":{"line":155,"column":81}},{"start":{"line":155,"column":84},"end":{"line":155,"column":90}}],"line":155},"28":{"loc":{"start":{"line":155,"column":24},"end":{"line":155,"column":72}},"type":"binary-expr","locations":[{"start":{"line":155,"column":24},"end":{"line":155,"column":55}},{"start":{"line":155,"column":59},"end":{"line":155,"column":72}}],"line":155},"29":{"loc":{"start":{"line":156,"column":4},"end":{"line":159,"column":5}},"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":159,"column":5}},{"start":{"line":156,"column":4},"end":{"line":159,"column":5}}],"line":156},"30":{"loc":{"start":{"line":164,"column":4},"end":{"line":168,"column":5}},"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":168,"column":5}},{"start":{"line":164,"column":4},"end":{"line":168,"column":5}}],"line":164},"31":{"loc":{"start":{"line":175,"column":24},"end":{"line":175,"column":90}},"type":"cond-expr","locations":[{"start":{"line":175,"column":75},"end":{"line":175,"column":81}},{"start":{"line":175,"column":84},"end":{"line":175,"column":90}}],"line":175},"32":{"loc":{"start":{"line":175,"column":24},"end":{"line":175,"column":72}},"type":"binary-expr","locations":[{"start":{"line":175,"column":24},"end":{"line":175,"column":55}},{"start":{"line":175,"column":59},"end":{"line":175,"column":72}}],"line":175},"33":{"loc":{"start":{"line":176,"column":4},"end":{"line":179,"column":5}},"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":179,"column":5}},{"start":{"line":176,"column":4},"end":{"line":179,"column":5}}],"line":176},"34":{"loc":{"start":{"line":182,"column":16},"end":{"line":182,"column":30}},"type":"binary-expr","locations":[{"start":{"line":182,"column":16},"end":{"line":182,"column":22}},{"start":{"line":182,"column":26},"end":{"line":182,"column":30}}],"line":182},"35":{"loc":{"start":{"line":186,"column":4},"end":{"line":189,"column":5}},"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":189,"column":5}},{"start":{"line":186,"column":4},"end":{"line":189,"column":5}}],"line":186},"36":{"loc":{"start":{"line":190,"column":4},"end":{"line":193,"column":5}},"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":193,"column":5}},{"start":{"line":190,"column":4},"end":{"line":193,"column":5}}],"line":190}},"s":{"0":1,"1":5,"2":2,"3":4,"4":5,"5":5,"6":0,"7":0,"8":0,"9":0,"10":9,"11":4,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":4,"28":4,"29":4,"30":1,"31":1,"32":3,"33":3,"34":1,"35":1,"36":2,"37":2,"38":2,"39":2,"40":2,"41":2,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1},"f":{"0":4,"1":5,"2":2,"3":4,"4":5,"5":0,"6":9,"7":3,"8":4,"9":4,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"0":[1,1,1],"1":[3,2],"2":[4,4],"3":[4,5],"4":[4,4],"5":[1,1,1],"6":[1,2],"7":[3,3],"8":[1,3],"9":[4,4],"10":[1,3],"11":[1,2],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/esra/projects/programming/bobaserver/server/users/routes.ts","sources":["/Users/esra/projects/programming/bobaserver/server/users/routes.ts"],"names":[],"mappings":"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","sourcesContent":["import debug from \"debug\";\nimport express from \"express\";\nimport {\n  getUserFromFirebaseId,\n  dismissAllNotifications,\n  updateUserData,\n  getInviteDetails,\n  markInviteUsed,\n  createNewUser,\n  getBobadexIdentities,\n  getUserActivity,\n} from \"./queries\";\nimport { isLoggedIn } from \"../auth-handler\";\nimport {\n  ensureNoIdentityLeakage,\n  mergeObjectIdentity,\n  transformImageUrls,\n} from \"../response-utils\";\nimport firebaseAuth from \"firebase-admin\";\nimport { ServerThreadType, DbActivityThreadType } from \"../../Types\";\nimport { cache, CacheKeys } from \"../cache\";\n\nconst info = debug(\"bobaserver:users:routes-info\");\nconst log = debug(\"bobaserver:users:routes-log\");\nconst error = debug(\"bobaserver:users:routes-error\");\n\nconst router = express.Router();\n\nrouter.get(\"/me\", isLoggedIn, async (req, res) => {\n  let currentUserId: string = req.currentUser?.uid;\n  if (!currentUserId) {\n    res.sendStatus(401);\n    return;\n  }\n\n  const cachedData = await cache().hget(CacheKeys.USER, currentUserId);\n  if (cachedData) {\n    log(`Returning cached data for user ${currentUserId}`);\n    return res.status(200).json(JSON.parse(cachedData));\n  }\n\n  log(`Fetching user data for firebase id: ${currentUserId}`);\n  const userData = transformImageUrls(\n    await getUserFromFirebaseId({\n      firebaseId: currentUserId,\n    })\n  );\n  info(`Found user data : `, userData);\n\n  const userDataResponse = {\n    username: userData.username,\n    avatarUrl: userData.avatarUrl,\n  };\n  res.status(200).json(userDataResponse);\n  cache().hset(CacheKeys.USER, currentUserId, JSON.stringify(userDataResponse));\n});\n\nrouter.post(\"/me/update\", isLoggedIn, async (req, res) => {\n  let currentUserId: string = req.currentUser?.uid;\n  if (!currentUserId) {\n    res.sendStatus(401);\n    return;\n  }\n  const { username, avatarUrl } = req.body;\n\n  if (!username || !avatarUrl) {\n    res.sendStatus(400);\n    return;\n  }\n  log(`Updating user data for firebase id: ${currentUserId}`);\n\n  const userData = await updateUserData({\n    firebaseId: currentUserId,\n    username,\n    avatarUrl,\n  });\n  info(`Updated user data : `, userData);\n\n  if (!userData) {\n    res.sendStatus(500);\n    return;\n  }\n\n  await cache().hdel(CacheKeys.USER, currentUserId);\n  res.status(200).json({\n    username: userData.username,\n    avatarUrl: userData.avatarUrl,\n  });\n});\n\nrouter.post(\"/invite/accept\", async (req, res) => {\n  const { email, password, nonce } = req.body;\n\n  const inviteDetails = await getInviteDetails({ nonce });\n\n  if (!inviteDetails) {\n    res.status(404).json({\n      errorCode: \"\",\n      message: \"Invite not found.\",\n    });\n    return;\n  }\n\n  if (inviteDetails.expired || inviteDetails.used) {\n    res.status(403).json({\n      errorCode: \"\",\n      message: \"Invite expired or already used.\",\n    });\n    return;\n  }\n\n  if (inviteDetails.email.toLowerCase() != (email as string).toLowerCase()) {\n    res.status(403).json({\n      errorCode: \"\",\n      message: \"Email doesn't match invite.\",\n    });\n    return;\n  }\n  firebaseAuth\n    .auth()\n    .createUser({\n      email,\n      password,\n    })\n    .then(async (user) => {\n      const uid = user.uid;\n      log(`Created new firebase user with uid ${uid}`);\n      // TODO: decide whether to put these together in a transaction.\n      const success = await markInviteUsed({ nonce });\n      if (!success) {\n        res.status(500).json({\n          errorCode: \"\",\n          message: \"Error marking invite as used. User not created.\",\n        });\n        return;\n      }\n      const created = await createNewUser({\n        firebaseId: uid,\n        invitedBy: inviteDetails.inviter,\n        createdOn: user.metadata.creationTime,\n      });\n      if (!created) {\n        res.status(500).json({\n          errorCode: \"\",\n          message: \"Error when adding a new user to the database.\",\n        });\n        return;\n      }\n      res.sendStatus(200);\n    })\n    .catch((error) => {\n      log(error);\n      res.status(400).json({\n        errorCode: error.code,\n        message: error.message,\n      });\n    });\n});\n\nrouter.get(\"/me/bobadex\", isLoggedIn, async (req, res) => {\n  let currentUserId: string = req.currentUser?.uid;\n  if (!currentUserId) {\n    res.sendStatus(401);\n    return;\n  }\n  const identities = await getBobadexIdentities({ firebaseId: currentUserId });\n  res.status(200).json(identities);\n});\n\nrouter.post(\"/notifications/dismiss\", isLoggedIn, async (req, res) => {\n  let currentUserId: string = req.currentUser?.uid;\n  if (!currentUserId) {\n    res.sendStatus(401);\n    return;\n  }\n  log(`Dismissing notifications for firebase id: ${currentUserId}`);\n  const dismissSuccessful = await dismissAllNotifications({\n    firebaseId: currentUserId,\n  });\n\n  if (!dismissSuccessful) {\n    error(`Dismiss failed`);\n    return res.sendStatus(500);\n    return;\n  }\n\n  info(`Dismiss successful`);\n\n  res.sendStatus(204);\n});\n\nrouter.get(\"/me/feed\", isLoggedIn, async (req, res) => {\n  const { cursor, updatedOnly, ownOnly } = req.query;\n  let currentUserId: string = req.currentUser?.uid;\n  if (!currentUserId) {\n    res.sendStatus(401);\n    return;\n  }\n  const userActivity = await getUserActivity({\n    firebaseId: currentUserId,\n    cursor: (cursor as string) || null,\n    updatedOnly: updatedOnly === \"true\",\n    ownOnly: ownOnly === \"true\",\n  });\n\n  if (!userActivity) {\n    res.sendStatus(404);\n    return;\n  }\n  if (!userActivity.activity.length) {\n    res.sendStatus(204);\n    return;\n  }\n\n  const threadsWithIdentity = userActivity.activity.map(\n    (thread): ServerThreadType => {\n      const threadWithIdentity = mergeObjectIdentity<DbActivityThreadType>(\n        thread\n      );\n      return {\n        posts: [\n          {\n            post_id: threadWithIdentity.post_id,\n            parent_thread_id: threadWithIdentity.thread_id,\n            parent_post_id: threadWithIdentity.parent_post_id,\n            secret_identity: threadWithIdentity.secret_identity,\n            user_identity: threadWithIdentity.user_identity,\n            accessory_avatar: threadWithIdentity.accessory_avatar,\n            self: threadWithIdentity.self,\n            friend: threadWithIdentity.friend,\n            created: threadWithIdentity.created,\n            content: threadWithIdentity.content,\n            options: threadWithIdentity.options,\n            tags: {\n              whisper_tags: threadWithIdentity.whisper_tags,\n              index_tags: threadWithIdentity.index_tags,\n              category_tags: threadWithIdentity.category_tags,\n              content_warnings: threadWithIdentity.content_warnings,\n            },\n            total_comments_amount: threadWithIdentity.comments_amount,\n            new_comments_amount: threadWithIdentity.new_comments_amount,\n            is_new: threadWithIdentity.is_new,\n          },\n        ],\n        default_view: threadWithIdentity.default_view,\n        thread_id: threadWithIdentity.thread_id,\n        thread_new_posts_amount: threadWithIdentity.new_posts_amount,\n        thread_new_comments_amount: threadWithIdentity.new_comments_amount,\n        thread_total_comments_amount: threadWithIdentity.comments_amount,\n        thread_total_posts_amount: threadWithIdentity.posts_amount,\n        thread_last_activity: threadWithIdentity.thread_last_activity,\n        thread_direct_threads_amount: threadWithIdentity.threads_amount,\n        board_slug: threadWithIdentity.board_slug,\n        muted: threadWithIdentity.muted,\n        hidden: threadWithIdentity.hidden,\n      };\n    }\n  );\n  const response: {\n    next_page_cursor: string;\n    activity: ServerThreadType[];\n  } = { next_page_cursor: userActivity.cursor, activity: threadsWithIdentity };\n\n  response.activity.map((post) => ensureNoIdentityLeakage(post));\n  res.status(200).json(response);\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"aed650e6f001db962f27e8baf949f927c817a21f","contentHash":"1ffbe574bf1d7fbed0bb43da7bdcb9690c7205cfeb2b6e97c6a10888b10ef45a"}}