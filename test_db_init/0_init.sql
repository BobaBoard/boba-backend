CREATE TABLE IF NOT EXISTS Users
(
    /* This will be the id generated by the external identity provider (e.g. firebase) */
    id TEXT PRIMARY KEY NOT NULL,
    /* Username and avatar can be null. Defaults will be used. User must only add these when adding friends. */
    username TEXT,
    avatarUrl TEXT,
    invitedBy TEXT REFERENCES Users(id) NOT NULL
);

CREATE TABLE IF NOT EXISTS Friends
(
    user TEXT REFERENCES Users(id) ON DELETE CASCADE NOT NULL,
    friend TEXT REFERENCES Users(id) ON DELETE CASCADE NOT NULL,
);

CREATE TABLE IF NOT EXISTS Invites (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    nonce BIGINT NOT NULL,
    inviter TEXT REFERENCES Users(id) ON DELETE CASCADE NOT NULL,
    invitee TEXT REFERENCES Users(id) ON DELETE CASCADE NOT NULL,
    created timestamptz NOT NULL DEFAULT now(),
    duration INTERVAL NOT NULL
);
CREATE INDEX inviter on Invites(inviter);
CREATE INDEX invitee on Invites(invitee);
CREATE INDEX nonce on Invites(nonce);

CREATE TABLE IF NOT EXISTS Tags
(
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    tag TEXT NOT NULL
);
CREATE INDEX tag on Tags(tag);

CREATE TABLE IF NOT EXISTS Boards
(
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    /* Textual id of the board, e.g. "main", "anime", "memes". Used as part of the url. */
    stringId TEXT NOT NULL,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    /* If avatar is null, board will use default avatar. */
    avatarUrl TEXT,
    settings JSONB NOT NULL
);
CREATE INDEX stringId on BoardsWatchers(stringId);

CREATE TABLE IF NOT EXISTS BoardsTags
(
    boardId BIGINT REFERENCES Boards(id) ON DELETE CASCADE NOT NULL,
    tagId BIGINT REFERENCES Tags(id) ON DELETE CASCADE NOT NULL
);

CREATE TABLE IF NOT EXISTS BoardsWatchers (
    boardId BIGINT REFERENCES Boards(id) ON DELETE CASCADE NOT NULL,
    userId TEXT REFERENCES Users(id) ON DELETE CASCADE NOT NULL,
    lastAccess timestamptz NOT NULL DEFAULT now(),
    shouldNotify BOOLEAN NOT NULL DEFAULT FALSE
);
CREATE INDEX board on BoardsWatchers(boardId);
CREATE INDEX invitee on BoardsWatchers(invitee);
CREATE INDEX nonce on BoardsWatchers(nonce);

CREATE TABLE IF NOT EXISTS Threads
(
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    parentBoard BIGINT REFERENCES Boards(id) ON DELETE CASCADE NOT NULL,
    title TEXT NOT NULL
    /* TODO: decide what to do with threads with deleted posts */
    /*firstPost BIGINT REFERENCES Posts(id) TODO: FIGURE OUT HOW TO ADD THIS WHEN THE POSTS TABLE IS DEFINED ONLY LATER*/
    /*identities ARRAY TODO*/
);
CREATE INDEX parentBoard on Threads(parentBoard);

CREATE TABLE IF NOT EXISTS ThreadsWatchers (
    threadId BIGINT REFERENCES Threads(id) ON DELETE CASCADE NOT NULL,
    userId TEXT REFERENCES Users(id) ON DELETE CASCADE NOT NULL,
    lastAccess timestamptz NOT NULL DEFAULT now(),
    shouldNotify BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS Posts (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    stringId TEXT NOT NULL,
    parentThread BIGINT REFERENCES Threads(id) ON DELETE CASCADE NOT NULL,
    author TEXT REFERENCES Users(id) ON DELETE CASCADE NOT NULL,
    created timestamptz NOT NULL DEFAULT now(),
    content TEXT NOT NULL,
    typeId TEXT NOT NULL,
    whispertags TEXT[],
    /* Mark deleted rather than actually delete for moderation purposes. */
    isDeleted BOOLEAN DEFAULT false,
    isForcedAnonymous BOOLEAN DEFAULT false
);
CREATE INDEX stringId on Posts(stringId);
CREATE INDEX parentThread on Posts(parentThread);
CREATE INDEX author on Posts(author);

CREATE TABLE IF NOT EXISTS PostsTags (
    postId BIGINT REFERENCES Posts(id) ON DELETE CASCADE NOT NULL,
    tagId BIGINT REFERENCES Tags(id) ON DELETE CASCADE NOT NULL
);

CREATE TABLE IF NOT EXISTS Comments (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    parentThread BIGINT REFERENCES Threads(id) ON DELETE CASCADE NOT NULL,
    parentPost BIGINT REFERENCES Posts(id) ON DELETE CASCADE NOT NULL,
    parentComment BIGINT REFERENCES Comments(id) ON DELETE CASCADE,
    author TEXT REFERENCES Users(id) ON DELETE CASCADE,
    created timestamptz NOT NULL DEFAULT now(),
    content TEXT NOT NULL,
    /* Mark deleted rather than actually delete for moderation purposes. */
    isDeleted BOOLEAN DEFAULT false,
    isForcedAnonymous BOOLEAN DEFAULT false
);
CREATE INDEX parentThread on Comments(parentThread);
CREATE INDEX author on Comments(author);